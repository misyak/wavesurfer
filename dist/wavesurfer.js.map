{"version":3,"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/plugin/spectrogram.js","webpack://WaveSurfer/./src/util/ajax.js","webpack://WaveSurfer/./src/util/extend.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js"],"names":["CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","constructor","name","toLowerCase","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","x","y","fillRectToContext","ctx","fillRect","peaks","absmax","halfH","offsetY","drawLineToContext","length","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","beginPath","moveTo","lineTo","i","peak","h","halfPixel","j","closePath","fill","format","quality","type","Promise","resolve","toBlob","toDataURL","Drawer","container","params","pixelRatio","lastPos","wrapper","el","styles","util","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","rtl","right","left","scrollLeft","scrollWidth","addEventListener","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","max","min","updateSize","minPxDelta","pos","autoCenter","newPos","updateProgress","unAll","parentNode","removeChild","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","overlap","ceil","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","prepareDraw","hasMinVals","undefined","peakIndexScale","bar","gap","barGap","step","floor","reflectedPeaks","len","drawLine","setFillStyles","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","fn","frame","Array","channels","splitChannels","setHeight","channelPeaks","barHeight","normalize","some","call","val","all","map","getImage","images","MediaElement","media","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","buffer","onPlayEnd","setPlaybackRate","audioRate","createTimer","onAudioProcess","isPaused","getCurrentTime","on","url","preload","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","load","event","setVolume","explicitDuration","Infinity","seekable","getDuration","value","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","Error","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","filter","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","FFT","bufferSize","sampleRate","windowFunc","alpha","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","abs","cos","PI","pow","E","sin","limit","bit","calculateSpectrum","real","imag","bSi","sqrt","rval","ival","mag","spectrum","k","log","LN2","halfSize","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","fftStep","N","SpectrogramPlugin","deferInit","staticProps","instance","ws","wavesurfer","frequenciesDataUrl","_onScroll","updateScroll","_onRender","render","_onWrapperClick","_wrapperClickHandler","_onReady","drawer","fftSamples","noverlap","colorMap","createCanvas","isReady","once","removeEventListener","prevSpectrogram","wsParams","labels","labelsEl","classList","add","loadLabels","visualization","relX","offsetX","layerX","spectrCc","updateCanvasStyle","loadFrequenciesData","getFrequencies","drawSpectrogram","frequenciesData","my","backend","pixels","resample","heightFactor","numberOfChannels","rgb","callback","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","fft","maxSlicesCount","currentOffset","segment","slice","array","Uint8Array","log10","ajax","data","JSON","parse","statusText","freq","toFixed","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","frequenciesHeight","getMaxY","labelIndex","freqStart","ac","textBaseline","index","label","freqType","units","unitType","yLabelOffset","font","fillText","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","oldStart","oldEnd","newStart","newEnd","intColumn","m","options","xhr","XMLHttpRequest","fired100","open","method","responseType","requestHeaders","header","setRequestHeader","key","withCredentials","lengthComputable","loaded","total","status","response","send","extend","dest","sources","source","Object","keys","func","args","getId","prefix","random","toString","substring","values","largest","smallest","Number","handlers","splice","handler","apply","setTimeout","preventClickHandler","stopPropagation","body","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","bind","prop","PluginClass","WaveSurfer","init","defaultParams","audioContext","audioScriptProcessor","backgroundColor","dragSelection","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","backends","transform","setBackgroundColor","savedVolume","isMuted","tmpEvents","currentAjax","arraybuffer","peakCache","Backend","initialisedPluginList","isDestroyed","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","initPlugin","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","prototype","destroyPlugin","drawBuffer","getPlayedPercents","supportsWebAudio","seconds","skip","seekAndCenter","recenter","isFinite","oldScrollParent","newVolume","getVolume","getPlaybackRate","setMute","mute","filters","color","background","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","sepectrogram","pxPerSec","decodeArrayBuffer","loadDecodedBuffer","blob","reader","FileReader","onProgress","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","indexOf","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","action","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","percentComplete","accuracy","noWindow","json","stringify","encodeURIComponent","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","VERSION","__VERSION__","PLAYING","PAUSED","FINISHED","AudioContext","webkitAudioContext","WaveSurferAudioContext","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","create","analyser","gainNode","mergedPeaks","offlineAc","scriptNode","splitPeaks","state","createVolumeNode","createScriptNode","createAnalyserNode","setState","setLength","disconnect","connect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","c","newBuffer","createBuffer","sampleSize","sampleStep","chan","closeAudioContext","close","createSource","createBufferSource","noteGrainOn","noteOff","adjustedTime","resume"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;ACjEA;;AACA;;;;;;;;;;AAEA;;;;;;;IAOqBA,W;;;AACjB,yBAAc;AAAA;;AACV;;;;;AAKA,SAAKC,IAAL,GAAY,IAAZ;AACA;;;;;;AAKA,SAAKC,OAAL,GAAe,IAAf;AACA;;;;;;AAKA,SAAKC,QAAL,GAAgB,IAAhB;AACA;;;;;;AAKA,SAAKC,WAAL,GAAmB,IAAnB;AACA;;;;;;;AAMA,SAAKC,KAAL,GAAa,CAAb;AACA;;;;;;;AAMA,SAAKC,GAAL,GAAW,CAAX;AACA;;;;;;AAKA,SAAKC,EAAL,GAAU,oBAAM,KAAKC,WAAL,CAAiBC,IAAjB,CAAsBC,WAAtB,KAAsC,GAA5C,CAAV;AACH;AAED;;;;;;;;;6BAKSC,O,EAAS;AACd,WAAKV,IAAL,GAAYU,OAAZ;AACA,WAAKT,OAAL,GAAe,KAAKD,IAAL,CAAUW,UAAV,CAAqB,IAArB,CAAf;AACH;AAED;;;;;;;;;iCAMaD,O,EAAS;AAClB,WAAKR,QAAL,GAAgBQ,OAAhB;AACA,WAAKP,WAAL,GAAmB,KAAKD,QAAL,CAAcS,UAAd,CAAyB,IAAzB,CAAnB;AACH;AAED;;;;;;;;;;;qCAQiBC,Y,EAAcC,U,EAAYC,K,EAAOC,M,EAAQ;AACtD;AACA;AACA,WAAKX,KAAL,GAAa,KAAKJ,IAAL,CAAUgB,UAAV,GAAuBH,UAAvB,IAAqC,CAAlD;AACA,WAAKR,GAAL,GAAW,KAAKD,KAAL,GAAaQ,YAAY,GAAGC,UAAvC,CAJsD,CAMtD;;AACA,WAAKb,IAAL,CAAUc,KAAV,GAAkBA,KAAlB;AACA,WAAKd,IAAL,CAAUe,MAAV,GAAmBA,MAAnB;AACA,UAAIE,WAAW,GAAG;AAAEH,aAAK,EAAEF,YAAY,GAAG;AAAxB,OAAlB;AACA,0BAAM,KAAKZ,IAAX,EAAiBiB,WAAjB;;AAEA,UAAI,KAAKC,iBAAT,EAA4B;AACxB;AACA,aAAKhB,QAAL,CAAcY,KAAd,GAAsBA,KAAtB;AACA,aAAKZ,QAAL,CAAca,MAAd,GAAuBA,MAAvB;AACA,4BAAM,KAAKb,QAAX,EAAqBe,WAArB;AACH;AACJ;AAED;;;;;;gCAGY;AACR;AACA,WAAKhB,OAAL,CAAakB,SAAb,CACI,CADJ,EAEI,CAFJ,EAGI,KAAKlB,OAAL,CAAamB,MAAb,CAAoBN,KAHxB,EAII,KAAKb,OAAL,CAAamB,MAAb,CAAoBL,MAJxB,EAFQ,CASR;;AACA,UAAI,KAAKG,iBAAT,EAA4B;AACxB,aAAKf,WAAL,CAAiBgB,SAAjB,CACI,CADJ,EAEI,CAFJ,EAGI,KAAKhB,WAAL,CAAiBiB,MAAjB,CAAwBN,KAH5B,EAII,KAAKX,WAAL,CAAiBiB,MAAjB,CAAwBL,MAJ5B;AAMH;AACJ;AAED;;;;;;;;;kCAMcM,S,EAAWC,a,EAAe;AACpC,WAAKrB,OAAL,CAAasB,SAAb,GAAyBF,SAAzB;;AAEA,UAAI,KAAKH,iBAAT,EAA4B;AACxB,aAAKf,WAAL,CAAiBoB,SAAjB,GAA6BD,aAA7B;AACH;AACJ;AAED;;;;;;;;;;;8BAQUE,C,EAAGC,C,EAAGX,K,EAAOC,M,EAAQ;AAC3B,WAAKW,iBAAL,CAAuB,KAAKzB,OAA5B,EAAqCuB,CAArC,EAAwCC,CAAxC,EAA2CX,KAA3C,EAAkDC,MAAlD;;AAEA,UAAI,KAAKG,iBAAT,EAA4B;AACxB,aAAKQ,iBAAL,CAAuB,KAAKvB,WAA5B,EAAyCqB,CAAzC,EAA4CC,CAA5C,EAA+CX,KAA/C,EAAsDC,MAAtD;AACH;AACJ;AAED;;;;;;;;;;;;;sCAUkBY,G,EAAKH,C,EAAGC,C,EAAGX,K,EAAOC,M,EAAQ;AACxC,UAAI,CAACY,GAAL,EAAU;AACN;AACH;;AACDA,SAAG,CAACC,QAAJ,CAAaJ,CAAb,EAAgBC,CAAhB,EAAmBX,KAAnB,EAA0BC,MAA1B;AACH;AAED;;;;;;;;;;;;;;;8BAYUc,K,EAAOC,M,EAAQC,K,EAAOC,O,EAAS5B,K,EAAOC,G,EAAK;AACjD,WAAK4B,iBAAL,CACI,KAAKhC,OADT,EAEI4B,KAFJ,EAGIC,MAHJ,EAIIC,KAJJ,EAKIC,OALJ,EAMI5B,KANJ,EAOIC,GAPJ;;AAUA,UAAI,KAAKa,iBAAT,EAA4B;AACxB,aAAKe,iBAAL,CACI,KAAK9B,WADT,EAEI0B,KAFJ,EAGIC,MAHJ,EAIIC,KAJJ,EAKIC,OALJ,EAMI5B,KANJ,EAOIC,GAPJ;AASH;AACJ;AAED;;;;;;;;;;;;;;;;;sCAckBsB,G,EAAKE,K,EAAOC,M,EAAQC,K,EAAOC,O,EAAS5B,K,EAAOC,G,EAAK;AAC9D,UAAI,CAACsB,GAAL,EAAU;AACN;AACH;;AAED,UAAMO,MAAM,GAAGL,KAAK,CAACK,MAAN,GAAe,CAA9B;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,KAAK9B,KAAzB,CAAd,CAN8D,CAQ9D;AACA;;AACA,UAAMkC,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,KAAK7B,GAAzB,IAAgC,CAA7C;AAEA,UAAMkC,WAAW,GAAGJ,KAApB;AACA,UAAMK,SAAS,GAAGF,IAAlB;AACA,UAAMG,KAAK,GAAG,KAAKzC,IAAL,CAAUc,KAAV,IAAmB0B,SAAS,GAAGD,WAAZ,GAA0B,CAA7C,CAAd,CAd8D,CAgB9D;;AACA,UAAMG,UAAU,GAAGX,KAAK,GAAGC,OAA3B;AACA,UAAMW,UAAU,GAAGb,MAAM,GAAGC,KAA5B;AAEAJ,SAAG,CAACiB,SAAJ;AACAjB,SAAG,CAACkB,MAAJ,CAAW,CAACN,WAAW,GAAGJ,KAAf,IAAwBM,KAAnC,EAA0CC,UAA1C;AAEAf,SAAG,CAACmB,MAAJ,CACI,CAACP,WAAW,GAAGJ,KAAf,IAAwBM,KAD5B,EAEIC,UAAU,GAAGN,IAAI,CAACC,KAAL,CAAW,CAACR,KAAK,CAAC,IAAIU,WAAL,CAAL,IAA0B,CAA3B,IAAgCI,UAA3C,CAFjB;AAKA,UAAII,CAAJ,EAAOC,IAAP,EAAaC,CAAb;;AACA,WAAKF,CAAC,GAAGR,WAAT,EAAsBQ,CAAC,GAAGP,SAA1B,EAAqCO,CAAC,EAAtC,EAA0C;AACtCC,YAAI,GAAGnB,KAAK,CAAC,IAAIkB,CAAL,CAAL,IAAgB,CAAvB;AACAE,SAAC,GAAGb,IAAI,CAACC,KAAL,CAAWW,IAAI,GAAGL,UAAlB,CAAJ;AACAhB,WAAG,CAACmB,MAAJ,CAAW,CAACC,CAAC,GAAGZ,KAAL,IAAcM,KAAd,GAAsB,KAAKS,SAAtC,EAAiDR,UAAU,GAAGO,CAA9D;AACH,OAjC6D,CAmC9D;AACA;;;AACA,UAAIE,CAAC,GAAGX,SAAS,GAAG,CAApB;;AACA,WAAKW,CAAL,EAAQA,CAAC,IAAIZ,WAAb,EAA0BY,CAAC,EAA3B,EAA+B;AAC3BH,YAAI,GAAGnB,KAAK,CAAC,IAAIsB,CAAJ,GAAQ,CAAT,CAAL,IAAoB,CAA3B;AACAF,SAAC,GAAGb,IAAI,CAACC,KAAL,CAAWW,IAAI,GAAGL,UAAlB,CAAJ;AACAhB,WAAG,CAACmB,MAAJ,CAAW,CAACK,CAAC,GAAGhB,KAAL,IAAcM,KAAd,GAAsB,KAAKS,SAAtC,EAAiDR,UAAU,GAAGO,CAA9D;AACH;;AAEDtB,SAAG,CAACmB,MAAJ,CACI,CAACP,WAAW,GAAGJ,KAAf,IAAwBM,KAD5B,EAEIC,UAAU,GACNN,IAAI,CAACC,KAAL,CAAW,CAACR,KAAK,CAAC,IAAIU,WAAJ,GAAkB,CAAnB,CAAL,IAA8B,CAA/B,IAAoCI,UAA/C,CAHR;AAMAhB,SAAG,CAACyB,SAAJ;AACAzB,SAAG,CAAC0B,IAAJ;AACH;AAED;;;;;;8BAGU;AACN,WAAKpD,OAAL,GAAe,IAAf;AACA,WAAKD,IAAL,GAAY,IAAZ;AAEA,WAAKG,WAAL,GAAmB,IAAnB;AACA,WAAKD,QAAL,GAAgB,IAAhB;AACH;AAED;;;;;;;;;;;;;;;;6BAaSoD,M,EAAQC,O,EAASC,I,EAAM;AAAA;;AAC5B,UAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,eAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1B,eAAI,CAAC1D,IAAL,CAAU2D,MAAV,CAAiBD,OAAjB,EAA0BJ,MAA1B,EAAkCC,OAAlC;AACH,SAFM,CAAP;AAGH,OAJD,MAIO,IAAIC,IAAI,KAAK,SAAb,EAAwB;AAC3B,eAAO,KAAKxD,IAAL,CAAU4D,SAAV,CAAoBN,MAApB,EAA4BC,OAA5B,CAAP;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;AC7TL;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;IAKqBM,M;;;;;AACjB;;;;AAIA,kBAAYC,SAAZ,EAAuBC,MAAvB,EAA+B;AAAA;;AAAA;;AAC3B;AACA;;AACA,UAAKD,SAAL,GAAiBA,SAAjB;AACA;;;;;AAIA,UAAKC,MAAL,GAAcA,MAAd;AACA;;;;;AAIA,UAAKjD,KAAL,GAAa,CAAb;AACA;;;;;AAIA,UAAKC,MAAL,GAAcgD,MAAM,CAAChD,MAAP,GAAgB,MAAKgD,MAAL,CAAYC,UAA1C;AACA;;AACA,UAAKC,OAAL,GAAe,CAAf;AACA;;;;;AAIA,UAAKC,OAAL,GAAe,IAAf;AAzB2B;AA0B9B;AAED;;;;;;;;;;;0BAOMC,E,EAAIC,M,EAAQ;AACd,aAAOC,IAAI,CAACC,KAAL,CAAWH,EAAX,EAAeC,MAAf,CAAP;AACH;AAED;;;;;;;oCAIgB;AACZ,WAAKF,OAAL,GAAe,KAAKJ,SAAL,CAAeS,WAAf,CACXC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CADW,CAAf;AAIA,WAAKH,KAAL,CAAW,KAAKJ,OAAhB,EAAyB;AACrBQ,eAAO,EAAE,OADY;AAErBC,gBAAQ,EAAE,UAFW;AAGrBC,kBAAU,EAAE,MAHS;AAIrBC,wBAAgB,EAAE,MAJG;AAKrB9D,cAAM,EAAE,KAAKgD,MAAL,CAAYhD,MAAZ,GAAqB;AALR,OAAzB;;AAQA,UAAI,KAAKgD,MAAL,CAAYe,UAAZ,IAA0B,KAAKf,MAAL,CAAYgB,YAA1C,EAAwD;AACpD,aAAKT,KAAL,CAAW,KAAKJ,OAAhB,EAAyB;AACrBpD,eAAK,EAAE,MADc;AAErBkE,mBAAS,EAAE,KAAKjB,MAAL,CAAYkB,aAAZ,GAA4B,QAA5B,GAAuC,MAF7B;AAGrBC,mBAAS,EAAE;AAHU,SAAzB;AAKH;;AAED,WAAKC,kBAAL;AACH;AAED;;;;;;;;;;gCAOYC,C,EAAGC,S,EAAW;AACtB,OAACA,SAAD,IAAcD,CAAC,CAACE,cAAF,EAAd;AAEA,UAAMC,OAAO,GAAGH,CAAC,CAACI,aAAF,GACVJ,CAAC,CAACI,aAAF,CAAgB,CAAhB,EAAmBD,OADT,GAEVH,CAAC,CAACG,OAFR;AAGA,UAAME,IAAI,GAAG,KAAKvB,OAAL,CAAawB,qBAAb,EAAb;AAEA,UAAMC,YAAY,GAAG,KAAK7E,KAA1B;AACA,UAAM8E,WAAW,GAAG,KAAKC,QAAL,EAApB;AAEA,UAAI3F,QAAJ;;AACA,UAAI,CAAC,KAAK6D,MAAL,CAAYe,UAAb,IAA2Ba,YAAY,GAAGC,WAA9C,EAA2D;AACvD1F,gBAAQ,GACJ,CAAC,KAAK6D,MAAL,CAAY+B,GAAZ,GAAkBL,IAAI,CAACM,KAAL,GAAaR,OAA/B,GAAyCA,OAAO,GAAGE,IAAI,CAACO,IAAzD,KACK,KAAKjC,MAAL,CAAYC,UAAZ,GAAyB2B,YAD9B,KAC+C,CAFnD;;AAIA,YAAIzF,QAAQ,GAAG,CAAf,EAAkB;AACdA,kBAAQ,GAAG,CAAX;AACH;AACJ,OARD,MAQO;AACHA,gBAAQ,GACJ,CAAC,CAAC,KAAK6D,MAAL,CAAY+B,GAAZ,GACIL,IAAI,CAACM,KAAL,GAAaR,OADjB,GAEIA,OAAO,GAAGE,IAAI,CAACO,IAFpB,IAGG,KAAK9B,OAAL,CAAa+B,UAHjB,IAII,KAAK/B,OAAL,CAAagC,WAJjB,IAIgC,CALpC;AAMH;;AAED,aAAOhG,QAAP;AACH;AAED;;;;;;yCAGqB;AAAA;;AACjB,WAAKgE,OAAL,CAAaiC,gBAAb,CAA8B,OAA9B,EAAuC,UAAAf,CAAC,EAAI;AACxC,YAAMgB,eAAe,GACjB,MAAI,CAAClC,OAAL,CAAamC,YAAb,GAA4B,MAAI,CAACnC,OAAL,CAAaoC,YAD7C;;AAEA,YAAIF,eAAe,IAAI,CAAvB,EAA0B;AACtB;AACA,cAAMX,IAAI,GAAG,MAAI,CAACvB,OAAL,CAAawB,qBAAb,EAAb;;AACA,cAAIN,CAAC,CAACmB,OAAF,IAAad,IAAI,CAACe,MAAL,GAAcJ,eAA/B,EAAgD;AAC5C;AACA;AACH;AACJ;;AAED,YAAI,MAAI,CAACrC,MAAL,CAAY0C,QAAhB,EAA0B;AACtB,gBAAI,CAACC,SAAL,CAAe,OAAf,EAAwBtB,CAAxB,EAA2B,MAAI,CAACuB,WAAL,CAAiBvB,CAAjB,CAA3B;AACH;AACJ,OAfD;AAiBA,WAAKlB,OAAL,CAAaiC,gBAAb,CAA8B,QAA9B,EAAwC,UAAAf,CAAC;AAAA,eACrC,MAAI,CAACsB,SAAL,CAAe,QAAf,EAAyBtB,CAAzB,CADqC;AAAA,OAAzC;AAGH;AAED;;;;;;;;;;;;;;8BAWUvD,K,EAAOK,M,EAAQ9B,K,EAAOC,G,EAAK;AACjC,UAAI,CAAC,KAAKuG,QAAL,CAAc1E,MAAd,CAAL,EAA4B;AACxB,aAAK2E,SAAL;AACH;;AAED,WAAK9C,MAAL,CAAY+C,QAAZ,GACM,KAAKC,QAAL,CAAclF,KAAd,EAAqB,CAArB,EAAwBzB,KAAxB,EAA+BC,GAA/B,CADN,GAEM,KAAK2G,QAAL,CAAcnF,KAAd,EAAqB,CAArB,EAAwBzB,KAAxB,EAA+BC,GAA/B,CAFN;AAGH;AAED;;;;;;kCAGc;AACV,UAAI,KAAK6D,OAAL,KAAiB,IAArB,EAA2B;AACvB,aAAKA,OAAL,CAAa+B,UAAb,GAA0B,CAA1B;AACH;AACJ;AAED;;;;;;;;6BAKSgB,O,EAAS;AACd,UAAMtC,QAAQ,GAAG,KAAKT,OAAL,CAAagC,WAAb,GAA2Be,OAA5C;AACA,WAAKC,kBAAL,CAAwBvC,QAAxB,EAAkC,IAAlC;AACH;AAED;;;;;;;;;;uCAOmBA,Q,EAAUwC,S,EAAW;AACpC,UAAMlB,UAAU,GAAG,KAAK/B,OAAL,CAAa+B,UAAhC;AACA,UAAMmB,IAAI,GAAG,CAAC,EAAE,KAAKlD,OAAL,CAAamD,WAAb,GAA2B,CAA7B,CAAd;AACA,UAAMC,SAAS,GAAG,KAAKpD,OAAL,CAAagC,WAAb,GAA2B,KAAKhC,OAAL,CAAamD,WAA1D;AACA,UAAIE,MAAM,GAAG5C,QAAQ,GAAGyC,IAAxB;AACA,UAAII,MAAM,GAAGD,MAAM,GAAGtB,UAAtB;;AAEA,UAAIqB,SAAS,IAAI,CAAjB,EAAoB;AAChB;AACA;AACH,OAVmC,CAYpC;;;AACA,UAAI,CAACH,SAAD,IAAc,CAACC,IAAD,IAASI,MAAvB,IAAiCA,MAAM,GAAGJ,IAA9C,EAAoD;AAChD;AACA,YAAMK,IAAI,GAAG,CAAb;AACAD,cAAM,GAAGpF,IAAI,CAACsF,GAAL,CAAS,CAACD,IAAV,EAAgBrF,IAAI,CAACuF,GAAL,CAASF,IAAT,EAAeD,MAAf,CAAhB,CAAT;AACAD,cAAM,GAAGtB,UAAU,GAAGuB,MAAtB;AACH,OAlBmC,CAoBpC;;;AACAD,YAAM,GAAGnF,IAAI,CAACsF,GAAL,CAAS,CAAT,EAAYtF,IAAI,CAACuF,GAAL,CAASL,SAAT,EAAoBC,MAApB,CAAZ,CAAT,CArBoC,CAsBpC;;AACA,UAAIA,MAAM,IAAItB,UAAd,EAA0B;AACtB,aAAK/B,OAAL,CAAa+B,UAAb,GAA0BsB,MAA1B;AACH;AACJ;AAED;;;;;;;;iCAKa;AACT,UAAI/F,CAAC,GAAG,CAAR;;AACA,UAAI,KAAK0C,OAAT,EAAkB;AACd,YAAMF,UAAU,GAAG,KAAKD,MAAL,CAAYC,UAA/B;AACAxC,SAAC,GAAGY,IAAI,CAACC,KAAL,CAAW,KAAK6B,OAAL,CAAa+B,UAAb,GAA0BjC,UAArC,CAAJ,CAFc,CAId;AACA;AACA;AACA;AACA;;AACA,YAAI,KAAKD,MAAL,CAAYgB,YAAhB,EAA8B;AAC1B,cAAMuC,SAAS,GAAG,CAAC,EACf,KAAKpD,OAAL,CAAagC,WAAb,GAA2BlC,UAA3B,GACA,KAAK6B,QAAL,EAFe,CAAnB;AAIArE,WAAC,GAAGY,IAAI,CAACuF,GAAL,CAASL,SAAT,EAAoBlF,IAAI,CAACsF,GAAL,CAAS,CAAT,EAAYlG,CAAZ,CAApB,CAAJ;AACH;AACJ;;AACD,aAAOA,CAAP;AACH;AAED;;;;;;;;+BAKW;AACP,aAAOY,IAAI,CAACC,KAAL,CAAW,KAAKyB,SAAL,CAAeuD,WAAf,GAA6B,KAAKtD,MAAL,CAAYC,UAApD,CAAP;AACH;AAED;;;;;;;;;6BAMSlD,K,EAAO;AACZ,UAAI,KAAKA,KAAL,IAAcA,KAAlB,EAAyB;AACrB,eAAO,KAAP;AACH;;AAED,WAAKA,KAAL,GAAaA,KAAb;;AAEA,UAAI,KAAKiD,MAAL,CAAYe,UAAZ,IAA0B,KAAKf,MAAL,CAAYgB,YAA1C,EAAwD;AACpD,aAAKT,KAAL,CAAW,KAAKJ,OAAhB,EAAyB;AACrBpD,eAAK,EAAE;AADc,SAAzB;AAGH,OAJD,MAIO;AACH,aAAKwD,KAAL,CAAW,KAAKJ,OAAhB,EAAyB;AACrBpD,eAAK,EAAE,CAAC,EAAE,KAAKA,KAAL,GAAa,KAAKiD,MAAL,CAAYC,UAA3B,CAAD,GAA0C;AAD5B,SAAzB;AAGH;;AAED,WAAK4D,UAAL;AACA,aAAO,IAAP;AACH;AAED;;;;;;;;;8BAMU7G,M,EAAQ;AACd,UAAIA,MAAM,IAAI,KAAKA,MAAnB,EAA2B;AACvB,eAAO,KAAP;AACH;;AACD,WAAKA,MAAL,GAAcA,MAAd;AAEA,WAAKuD,KAAL,CAAW,KAAKJ,OAAhB,EAAyB;AACrBnD,cAAM,EAAE,CAAC,EAAE,KAAKA,MAAL,GAAc,KAAKgD,MAAL,CAAYC,UAA5B,CAAD,GAA2C;AAD9B,OAAzB;AAIA,WAAK4D,UAAL;AACA,aAAO,IAAP;AACH;AAED;;;;;;;;6BAKS1H,S,EAAU;AACf,UAAM2H,UAAU,GAAG,IAAI,KAAK9D,MAAL,CAAYC,UAAnC;AACA,UAAM8D,GAAG,GAAG1F,IAAI,CAACC,KAAL,CAAWnC,SAAQ,GAAG,KAAKY,KAA3B,IAAoC+G,UAAhD;;AAEA,UAAIC,GAAG,GAAG,KAAK7D,OAAX,IAAsB6D,GAAG,GAAG,KAAK7D,OAAX,IAAsB4D,UAAhD,EAA4D;AACxD,aAAK5D,OAAL,GAAe6D,GAAf;;AAEA,YAAI,KAAK/D,MAAL,CAAYgB,YAAZ,IAA4B,KAAKhB,MAAL,CAAYgE,UAA5C,EAAwD;AACpD,cAAMC,MAAM,GAAG,CAAC,EAAE,KAAK9D,OAAL,CAAagC,WAAb,GAA2BhG,SAA7B,CAAhB;AACA,eAAKgH,kBAAL,CAAwBc,MAAxB;AACH;;AAED,aAAKC,cAAL,CAAoBH,GAApB;AACH;AACJ;AAED;;;;;;8BAGU;AACN,WAAKI,KAAL;;AACA,UAAI,KAAKhE,OAAT,EAAkB;AACd,YAAI,KAAKA,OAAL,CAAaiE,UAAb,IAA2B,KAAKrE,SAApC,EAA+C;AAC3C,eAAKA,SAAL,CAAesE,WAAf,CAA2B,KAAKlE,OAAhC;AACH;;AACD,aAAKA,OAAL,GAAe,IAAf;AACH;AACJ;AAED;;AAEA;;;;;;;;mCAKe,CAAE;AAEjB;;;;;;;;iCAKa,CAAE;AAEf;;;;;;;;;;;;;;;;6BAaSrC,K,EAAOwG,Y,EAAcjI,K,EAAOC,G,EAAK,CAAE;AAE5C;;;;;;;;;;;;;;;;6BAaSwB,K,EAAOwG,Y,EAAcjI,K,EAAOC,G,EAAK,CAAE;AAE5C;;;;;;;;gCAKY,CAAE;AAEd;;;;;;;;;mCAMesE,Q,EAAU,CAAE;;;;EApYKN,IAAI,CAACiE,Q;;;;;;;;;;;;;;;;;;;;;;ACPzC;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;IAOqBC,W;;;;;AACjB;;;;AAIA,uBAAYzE,SAAZ,EAAuBC,MAAvB,EAA+B;AAAA;;AAAA;;AAC3B,qFAAMD,SAAN,EAAiBC,MAAjB;AAEA;;;;;AAIA,UAAKyE,cAAL,GAAsBzE,MAAM,CAACyE,cAA7B;AAEA;;;;;AAIA,UAAKC,qBAAL,GAA6BrG,IAAI,CAACC,KAAL,CACzB0B,MAAM,CAACyE,cAAP,GAAwBzE,MAAM,CAACC,UADN,CAA7B;AAIA;;;;;;;AAMA,UAAK9C,iBAAL,GAAyB6C,MAAM,CAAC1C,SAAP,IAAoB0C,MAAM,CAACzC,aAApD;AAEA;;;;;AAIA,UAAK4B,SAAL,GAAiB,MAAMa,MAAM,CAACC,UAA9B;AAEA;;;;;;;AAMA,UAAK0E,QAAL,GAAgB,EAAhB;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoB,IAApB;AAEA;;;;;;;AAMA,UAAKC,UAAL,GAAkB7I,gBAAlB;AAEA;;;;;;;AAMA,UAAK8I,OAAL,GAAe,IAAIzG,IAAI,CAAC0G,IAAL,CAAU/E,MAAM,CAACC,UAAP,GAAoB,CAA9B,CAAnB;AA3D2B;AA4D9B;AAED;;;;;;;2BAGO;AACH,WAAK+E,aAAL;AACA,WAAKC,cAAL;AACH;AAED;;;;;;;;qCAKiB;AACb,WAAKL,YAAL,GAAoB,KAAKzE,OAAL,CAAaK,WAAb,CAChB,KAAKD,KAAL,CAAWE,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX,EAA2C;AACvCE,gBAAQ,EAAE,UAD6B;AAEvCsE,cAAM,EAAE,CAF+B;AAGvCjD,YAAI,EAAE,CAHiC;AAIvCkD,WAAG,EAAE,CAJkC;AAKvC1C,cAAM,EAAE,CAL+B;AAMvC2C,gBAAQ,EAAE,QAN6B;AAOvCrI,aAAK,EAAE,GAPgC;AAQvC4D,eAAO,EAAE,MAR8B;AASvC0E,iBAAS,EAAE,YAT4B;AAUvCC,wBAAgB,EAAE;AAVqB,OAA3C,CADgB,CAApB;AAeA,WAAKC,SAAL;AACA,WAAKC,YAAL;AACH;AAED;;;;;;mCAGe;AACX,WAAKjF,KAAL,CAAW,KAAKqE,YAAhB,EAA8B;AAC1Ba,wBAAgB,EAAE,KAAKzF,MAAL,CAAY0F,WAAZ,GAA0B,IADlB;AAE1BC,wBAAgB,EAAE,KAAK3F,MAAL,CAAY4F;AAFJ,OAA9B;AAIH;AAED;;;;;;iCAGa;AAAA;;AACT,UAAM9I,UAAU,GAAGuB,IAAI,CAACC,KAAL,CAAW,KAAKvB,KAAL,GAAa,KAAKiD,MAAL,CAAYC,UAApC,CAAnB;AACA,UAAM4F,gBAAgB,GAAGxH,IAAI,CAAC0G,IAAL,CACrBjI,UAAU,IAAI,KAAK4H,qBAAL,GAA6B,KAAKI,OAAtC,CADW,CAAzB,CAFS,CAMT;;AACA,aAAO,KAAKH,QAAL,CAAcxG,MAAd,GAAuB0H,gBAA9B,EAAgD;AAC5C,aAAKN,SAAL;AACH,OATQ,CAWT;;;AACA,aAAO,KAAKZ,QAAL,CAAcxG,MAAd,GAAuB0H,gBAA9B,EAAgD;AAC5C,aAAKC,YAAL;AACH;;AAED,UAAIC,WAAW,GAAG,KAAKtB,cAAL,GAAsB,KAAKK,OAA7C;AACA,UAAMkB,UAAU,GAAG,KAAKrB,QAAL,CAAcxG,MAAd,GAAuB,CAA1C;AACA,WAAKwG,QAAL,CAAcsB,OAAd,CAAsB,UAACC,KAAD,EAAQlH,CAAR,EAAc;AAChC,YAAIA,CAAC,IAAIgH,UAAT,EAAqB;AACjBD,qBAAW,GAAG,MAAI,CAAChJ,KAAL,GAAa,MAAI,CAAC0H,cAAL,GAAsBuB,UAAjD;AACH;;AACD,cAAI,CAACG,gBAAL,CAAsBD,KAAtB,EAA6BH,WAA7B,EAA0C,MAAI,CAAC/I,MAA/C;;AAEAkJ,aAAK,CAACpD,SAAN;AACH,OAPD;AAQH;AAED;;;;;;;;gCAKY;AACR,UAAMoD,KAAK,GAAG,IAAI,KAAKrB,UAAT,EAAd;AACAqB,WAAK,CAAC/I,iBAAN,GAA0B,KAAKA,iBAA/B;AACA+I,WAAK,CAAC/G,SAAN,GAAkB,KAAKA,SAAvB;AACA,UAAMiH,UAAU,GAAG,KAAK1B,qBAAL,GAA6B,KAAKC,QAAL,CAAcxG,MAA9D,CAJQ,CAMR;;AACA+H,WAAK,CAACG,QAAN,CACI,KAAKlG,OAAL,CAAaK,WAAb,CACI,KAAKD,KAAL,CAAWE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAX,EAA6C;AACzCE,gBAAQ,EAAE,UAD+B;AAEzCsE,cAAM,EAAE,CAFiC;AAGzCjD,YAAI,EAAEmE,UAAU,GAAG,IAHsB;AAIzCjB,WAAG,EAAE,CAJoC;AAKzC1C,cAAM,EAAE,CALiC;AAMzCzF,cAAM,EAAE;AANiC,OAA7C,CADJ,CADJ,EAPQ,CAoBR;;AACA,UAAI,KAAKG,iBAAT,EAA4B;AACxB+I,aAAK,CAACI,YAAN,CACI,KAAK1B,YAAL,CAAkBpE,WAAlB,CACI,KAAKD,KAAL,CAAWE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAX,EAA6C;AACzCE,kBAAQ,EAAE,UAD+B;AAEzCqB,cAAI,EAAEmE,UAAU,GAAG,IAFsB;AAGzCjB,aAAG,EAAE,CAHoC;AAIzC1C,gBAAM,EAAE,CAJiC;AAKzCzF,gBAAM,EAAE;AALiC,SAA7C,CADJ,CADJ;AAWH;;AAED,WAAK2H,QAAL,CAAc4B,IAAd,CAAmBL,KAAnB;AACH;AAED;;;;;;;;mCAKe;AACX,UAAIM,SAAS,GAAG,KAAK7B,QAAL,CAAc,KAAKA,QAAL,CAAcxG,MAAd,GAAuB,CAArC,CAAhB,CADW,CAGX;;AACAqI,eAAS,CAACvK,IAAV,CAAewK,aAAf,CAA6BpC,WAA7B,CAAyCmC,SAAS,CAACvK,IAAnD,EAJW,CAMX;;AACA,UAAI,KAAKkB,iBAAT,EAA4B;AACxBqJ,iBAAS,CAACrK,QAAV,CAAmBsK,aAAnB,CAAiCpC,WAAjC,CAA6CmC,SAAS,CAACrK,QAAvD;AACH,OATU,CAWX;;;AACA,UAAIqK,SAAJ,EAAe;AACXA,iBAAS,CAACE,OAAV;AACAF,iBAAS,GAAG,IAAZ;AACH;;AAED,WAAK7B,QAAL,CAAcgC,GAAd;AACH;AAED;;;;;;;;;;;qCAQiBT,K,EAAOnJ,K,EAAOC,M,EAAQ;AACnC,UAAMH,YAAY,GAAGwB,IAAI,CAACC,KAAL,CAAWvB,KAAK,GAAG,KAAKiD,MAAL,CAAYC,UAA/B,CAArB;AACA,UAAMnD,UAAU,GAAGuB,IAAI,CAACC,KAAL,CAAW,KAAKvB,KAAL,GAAa,KAAKiD,MAAL,CAAYC,UAApC,CAAnB,CAFmC,CAInC;;AACAiG,WAAK,CAACC,gBAAN,CAAuBtJ,YAAvB,EAAqCC,UAArC,EAAiDC,KAAjD,EAAwDC,MAAxD,EALmC,CAOnC;;AACA,WAAKuD,KAAL,CAAW,KAAKqE,YAAhB,EAA8B;AAAEjE,eAAO,EAAE;AAAX,OAA9B;AACH;AAED;;;;;;gCAGY;AACR,WAAKgE,QAAL,CAAcsB,OAAd,CAAsB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACpD,SAAN,EAAJ;AAAA,OAA3B;AACH;AAED;;;;;;;;;;;;;;;;6BAaShF,K,EAAOwG,Y,EAAcjI,K,EAAOC,G,EAAK;AAAA;;AACtC,aAAO,KAAKsK,WAAL,CACH9I,KADG,EAEHwG,YAFG,EAGHjI,KAHG,EAIHC,GAJG,EAKH,gBAA2D;AAAA,YAAxDyB,MAAwD,QAAxDA,MAAwD;AAAA,YAAhD8I,UAAgD,QAAhDA,UAAgD;AAAA,YAApC7J,MAAoC,QAApCA,MAAoC;AAAA,YAA5BiB,OAA4B,QAA5BA,OAA4B;AAAA,YAAnBD,KAAmB,QAAnBA,KAAmB;AAAA,YAAZF,KAAY,QAAZA,KAAY;;AACvD;AACA;AACA,YAAIzB,KAAK,KAAKyK,SAAd,EAAyB;AACrB;AACH,SALsD,CAMvD;;;AACA,YAAMC,cAAc,GAAGF,UAAU,GAAG,CAAH,GAAO,CAAxC;AACA,YAAM1I,MAAM,GAAGL,KAAK,CAACK,MAAN,GAAe4I,cAA9B;AACA,YAAMC,GAAG,GAAG,MAAI,CAAChH,MAAL,CAAY+C,QAAZ,GAAuB,MAAI,CAAC/C,MAAL,CAAYC,UAA/C;AACA,YAAMgH,GAAG,GACL,MAAI,CAACjH,MAAL,CAAYkH,MAAZ,KAAuB,IAAvB,GACM7I,IAAI,CAACsF,GAAL,CAAS,MAAI,CAAC3D,MAAL,CAAYC,UAArB,EAAiC,CAAC,EAAE+G,GAAG,GAAG,CAAR,CAAlC,CADN,GAEM3I,IAAI,CAACsF,GAAL,CACI,MAAI,CAAC3D,MAAL,CAAYC,UADhB,EAEI,MAAI,CAACD,MAAL,CAAYkH,MAAZ,GAAqB,MAAI,CAAClH,MAAL,CAAYC,UAFrC,CAHV;AAOA,YAAMkH,IAAI,GAAGH,GAAG,GAAGC,GAAnB;AAEA,YAAMvI,KAAK,GAAGP,MAAM,GAAG,MAAI,CAACpB,KAA5B;AACA,YAAMqB,KAAK,GAAG/B,KAAd;AACA,YAAMkC,IAAI,GAAGjC,GAAb;AACA,YAAI0C,CAAC,GAAGZ,KAAR;;AAEA,aAAKY,CAAL,EAAQA,CAAC,GAAGT,IAAZ,EAAkBS,CAAC,IAAImI,IAAvB,EAA6B;AACzB,cAAMlI,IAAI,GACNnB,KAAK,CAACO,IAAI,CAAC+I,KAAL,CAAWpI,CAAC,GAAGN,KAAJ,GAAYqI,cAAvB,CAAD,CAAL,IAAiD,CADrD;AAEA,cAAM7H,CAAC,GAAGb,IAAI,CAACC,KAAL,CAAYW,IAAI,GAAGlB,MAAR,GAAkBC,KAA7B,CAAV;;AACA,gBAAI,CAACH,QAAL,CACImB,CAAC,GAAG,MAAI,CAACG,SADb,EAEInB,KAAK,GAAGkB,CAAR,GAAYjB,OAFhB,EAGI+I,GAAG,GAAG,MAAI,CAAC7H,SAHf,EAIID,CAAC,GAAG,CAJR;AAMH;AACJ,OAxCE,CAAP;AA0CH;AAED;;;;;;;;;;;;;;;;6BAaSpB,K,EAAOwG,Y,EAAcjI,K,EAAOC,G,EAAK;AAAA;;AACtC,aAAO,KAAKsK,WAAL,CACH9I,KADG,EAEHwG,YAFG,EAGHjI,KAHG,EAIHC,GAJG,EAKH,iBAA2D;AAAA,YAAxDyB,MAAwD,SAAxDA,MAAwD;AAAA,YAAhD8I,UAAgD,SAAhDA,UAAgD;AAAA,YAApC7J,MAAoC,SAApCA,MAAoC;AAAA,YAA5BiB,OAA4B,SAA5BA,OAA4B;AAAA,YAAnBD,KAAmB,SAAnBA,KAAmB;AAAA,YAAZF,KAAY,SAAZA,KAAY;;AACvD,YAAI,CAAC+I,UAAL,EAAiB;AACb,cAAMQ,cAAc,GAAG,EAAvB;AACA,cAAMC,GAAG,GAAGxJ,KAAK,CAACK,MAAlB;AACA,cAAIa,CAAC,GAAG,CAAR;;AACA,eAAKA,CAAL,EAAQA,CAAC,GAAGsI,GAAZ,EAAiBtI,CAAC,EAAlB,EAAsB;AAClBqI,0BAAc,CAAC,IAAIrI,CAAL,CAAd,GAAwBlB,KAAK,CAACkB,CAAD,CAA7B;AACAqI,0BAAc,CAAC,IAAIrI,CAAJ,GAAQ,CAAT,CAAd,GAA4B,CAAClB,KAAK,CAACkB,CAAD,CAAlC;AACH;;AACDlB,eAAK,GAAGuJ,cAAR;AACH,SAVsD,CAYvD;AACA;;;AACA,YAAIhL,KAAK,KAAKyK,SAAd,EAAyB;AACrB,gBAAI,CAACS,QAAL,CAAczJ,KAAd,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6C5B,KAA7C,EAAoDC,GAApD;AACH,SAhBsD,CAkBvD;;;AACA,cAAI,CAACuB,QAAL,CACI,CADJ,EAEIG,KAAK,GAAGC,OAAR,GAAkB,MAAI,CAACkB,SAF3B,EAGI,MAAI,CAACpC,KAHT,EAII,MAAI,CAACoC,SAJT;AAMH,OA9BE,CAAP;AAgCH;AAED;;;;;;;;;;;;;;;;6BAaSrB,K,EAAOC,M,EAAQC,K,EAAOC,O,EAAS5B,K,EAAOC,G,EAAK;AAAA;;AAChD,WAAKqI,QAAL,CAAcsB,OAAd,CAAsB,UAAAC,KAAK,EAAI;AAC3B,cAAI,CAACsB,aAAL,CAAmBtB,KAAnB;;AACAA,aAAK,CAACuB,SAAN,CAAgB3J,KAAhB,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+C5B,KAA/C,EAAsDC,GAAtD;AACH,OAHD;AAIH;AAED;;;;;;;;;;;6BAQSmB,C,EAAGC,C,EAAGX,K,EAAOC,M,EAAQ;AAC1B,UAAM0K,WAAW,GAAGrJ,IAAI,CAAC+I,KAAL,CAAW3J,CAAC,GAAG,KAAKgH,cAApB,CAApB;AACA,UAAMkD,SAAS,GAAGtJ,IAAI,CAACuF,GAAL,CACdvF,IAAI,CAAC0G,IAAL,CAAU,CAACtH,CAAC,GAAGV,KAAL,IAAc,KAAK0H,cAA7B,IAA+C,CADjC,EAEd,KAAKE,QAAL,CAAcxG,MAFA,CAAlB;AAIA,UAAIa,CAAC,GAAG0I,WAAR;;AACA,WAAK1I,CAAL,EAAQA,CAAC,GAAG2I,SAAZ,EAAuB3I,CAAC,EAAxB,EAA4B;AACxB,YAAMkH,KAAK,GAAG,KAAKvB,QAAL,CAAc3F,CAAd,CAAd;AACA,YAAMoH,UAAU,GAAGpH,CAAC,GAAG,KAAKyF,cAA5B;AAEA,YAAMmD,YAAY,GAAG;AACjBC,YAAE,EAAExJ,IAAI,CAACsF,GAAL,CAASlG,CAAT,EAAYuB,CAAC,GAAG,KAAKyF,cAArB,CADa;AAEjBqD,YAAE,EAAEpK,CAFa;AAGjBqK,YAAE,EAAE1J,IAAI,CAACuF,GAAL,CACAnG,CAAC,GAAGV,KADJ,EAEAiC,CAAC,GAAG,KAAKyF,cAAT,GAA0ByB,KAAK,CAACjK,IAAN,CAAWc,KAFrC,CAHa;AAOjBiL,YAAE,EAAEtK,CAAC,GAAGV;AAPS,SAArB;;AAUA,YAAI4K,YAAY,CAACC,EAAb,GAAkBD,YAAY,CAACG,EAAnC,EAAuC;AACnC,eAAKP,aAAL,CAAmBtB,KAAnB;AAEAA,eAAK,CAAC+B,SAAN,CACIL,YAAY,CAACC,EAAb,GAAkBzB,UADtB,EAEIwB,YAAY,CAACE,EAFjB,EAGIF,YAAY,CAACG,EAAb,GAAkBH,YAAY,CAACC,EAHnC,EAIID,YAAY,CAACI,EAAb,GAAkBJ,YAAY,CAACE,EAJnC;AAMH;AACJ;AACJ;AAED;;;;;;;;;;;;;;;;;;;gCAgBYhK,K,EAAOwG,Y,EAAcjI,K,EAAOC,G,EAAK4L,E,EAAI;AAAA;;AAC7C,aAAO5H,IAAI,CAAC6H,KAAL,CAAW,YAAM;AACpB;AACA,YAAIrK,KAAK,CAAC,CAAD,CAAL,YAAoBsK,KAAxB,EAA+B;AAC3B,cAAMC,QAAQ,GAAGvK,KAAjB;;AACA,cAAI,MAAI,CAACkC,MAAL,CAAYsI,aAAhB,EAA+B;AAC3B,kBAAI,CAACC,SAAL,CACIF,QAAQ,CAAClK,MAAT,GACI,MAAI,CAAC6B,MAAL,CAAYhD,MADhB,GAEI,MAAI,CAACgD,MAAL,CAAYC,UAHpB;;AAKA,mBAAOoI,QAAQ,CAACpC,OAAT,CAAiB,UAACuC,YAAD,EAAexJ,CAAf;AAAA,qBACpB,MAAI,CAAC4H,WAAL,CAAiB4B,YAAjB,EAA+BxJ,CAA/B,EAAkC3C,KAAlC,EAAyCC,GAAzC,EAA8C4L,EAA9C,CADoB;AAAA,aAAjB,CAAP;AAGH;;AACDpK,eAAK,GAAGuK,QAAQ,CAAC,CAAD,CAAhB;AACH,SAfmB,CAgBpB;AACA;AACA;;;AACA,YAAItK,MAAM,GAAG,IAAI,MAAI,CAACiC,MAAL,CAAYyI,SAA7B;;AACA,YAAI,MAAI,CAACzI,MAAL,CAAY0I,SAAhB,EAA2B;AACvB,cAAM/E,GAAG,GAAGrD,IAAI,CAACqD,GAAL,CAAS7F,KAAT,CAAZ;AACA,cAAM8F,GAAG,GAAGtD,IAAI,CAACsD,GAAL,CAAS9F,KAAT,CAAZ;AACAC,gBAAM,GAAG,CAAC6F,GAAD,GAAOD,GAAP,GAAa,CAACC,GAAd,GAAoBD,GAA7B;AACH,SAxBmB,CA0BpB;AACA;;;AACA,YAAMkD,UAAU,GAAG,GAAG8B,IAAH,CAAQC,IAAR,CAAa9K,KAAb,EAAoB,UAAA+K,GAAG;AAAA,iBAAIA,GAAG,GAAG,CAAV;AAAA,SAAvB,CAAnB;AACA,YAAM7L,MAAM,GAAG,MAAI,CAACgD,MAAL,CAAYhD,MAAZ,GAAqB,MAAI,CAACgD,MAAL,CAAYC,UAAhD;AACA,YAAMhC,OAAO,GAAGjB,MAAM,GAAGsH,YAAT,IAAyB,CAAzC;AACA,YAAMtG,KAAK,GAAGhB,MAAM,GAAG,CAAvB;AAEA,eAAOkL,EAAE,CAAC;AACNnK,gBAAM,EAAEA,MADF;AAEN8I,oBAAU,EAAEA,UAFN;AAGN7J,gBAAM,EAAEA,MAHF;AAINiB,iBAAO,EAAEA,OAJH;AAKND,eAAK,EAAEA,KALD;AAMNF,eAAK,EAAEA;AAND,SAAD,CAAT;AAQH,OAzCM,GAAP;AA0CH;AAED;;;;;;;;;kCAMcoI,K,EAAO;AACjBA,WAAK,CAACsB,aAAN,CAAoB,KAAKxH,MAAL,CAAY1C,SAAhC,EAA2C,KAAK0C,MAAL,CAAYzC,aAAvD;AACH;AAED;;;;;;;;;;;;;;;;;6BAcSgC,M,EAAQC,O,EAASC,I,EAAM;AAC5B,UAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,eAAOC,OAAO,CAACoJ,GAAR,CACH,KAAKnE,QAAL,CAAcoE,GAAd,CAAkB,UAAA7C,KAAK,EAAI;AACvB,iBAAOA,KAAK,CAAC8C,QAAN,CAAezJ,MAAf,EAAuBC,OAAvB,EAAgCC,IAAhC,CAAP;AACH,SAFD,CADG,CAAP;AAKH,OAND,MAMO,IAAIA,IAAI,KAAK,SAAb,EAAwB;AAC3B,YAAIwJ,MAAM,GAAG,KAAKtE,QAAL,CAAcoE,GAAd,CAAkB,UAAA7C,KAAK;AAAA,iBAChCA,KAAK,CAAC8C,QAAN,CAAezJ,MAAf,EAAuBC,OAAvB,EAAgCC,IAAhC,CADgC;AAAA,SAAvB,CAAb;AAGA,eAAOwJ,MAAM,CAAC9K,MAAP,GAAgB,CAAhB,GAAoB8K,MAApB,GAA6BA,MAAM,CAAC,CAAD,CAA1C;AACH;AACJ;AAED;;;;;;;;mCAKerI,Q,EAAU;AACrB,WAAKL,KAAL,CAAW,KAAKqE,YAAhB,EAA8B;AAAE7H,aAAK,EAAE6D,QAAQ,GAAG;AAApB,OAA9B;AACH;;;;EA9foCd,e;;;;;;;;;;;;;;;;;;;;;;ACXzC;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAGqBoJ,Y;;;;;AACjB;;;;;AAKA,wBAAYlJ,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,sFAAMA,MAAN;AACA;;AACA,UAAKA,MAAL,GAAcA,MAAd,CAHgB,CAKhB;;AACA;;AACA,UAAKmJ,KAAL,GAAa;AACTC,iBAAW,EAAE,CADJ;AAETC,cAAQ,EAAE,CAFD;AAGTC,YAAM,EAAE,IAHC;AAITC,kBAAY,EAAE,CAJL;AAKTC,UALS,kBAKF,CAAE,CALA;AAMTC,WANS,mBAMD,CAAE,CAND;AAOTC,YAAM,EAAE;AAPC,KAAb;AAUA;;AACA,UAAKC,SAAL,GAAiB3J,MAAM,CAAC2J,SAAP,CAAiBjN,WAAjB,EAAjB;AACA;;AACA,UAAKkN,eAAL,GAAuB5J,MAAM,CAAC4J,eAA9B;AACA;;AACA,UAAK9L,KAAL,GAAa,IAAb;AACA;;AACA,UAAKyL,YAAL,GAAoB,CAApB;AACA;;AACA,UAAKG,MAAL,GAAc,CAAd;AACA;;AACA,UAAKG,MAAL,GAAc,IAAd;AACA;;AACA,UAAKC,SAAL,GAAiB,IAAjB;AA9BgB;AA+BnB;AAED;;;;;;;2BAGO;AACH,WAAKC,eAAL,CAAqB,KAAK/J,MAAL,CAAYgK,SAAjC;AACA,WAAKC,WAAL;AACH;AAED;;;;;;;;kCAKc;AAAA;;AACV,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,YAAI,MAAI,CAACC,QAAL,EAAJ,EAAqB;AACjB;AACH;;AACD,cAAI,CAACxH,SAAL,CAAe,cAAf,EAA+B,MAAI,CAACyH,cAAL,EAA/B,EAJyB,CAMzB;;;AACA9J,YAAI,CAAC6H,KAAL,CAAW+B,cAAX;AACH,OARD;;AAUA,WAAKG,EAAL,CAAQ,MAAR,EAAgBH,cAAhB,EAXU,CAaV;AACA;;AACA,WAAKG,EAAL,CAAQ,OAAR,EAAiB,YAAM;AACnB,cAAI,CAAC1H,SAAL,CAAe,cAAf,EAA+B,MAAI,CAACyH,cAAL,EAA/B;AACH,OAFD;AAGH;AAED;;;;;;;;;;;;yBASKE,G,EAAKvK,S,EAAWjC,K,EAAOyM,O,EAAS;AACjC,UAAMpB,KAAK,GAAG1I,QAAQ,CAACC,aAAT,CAAuB,KAAKiJ,SAA5B,CAAd;AACAR,WAAK,CAACqB,QAAN,GAAiB,KAAKxK,MAAL,CAAYyK,aAA7B;AACAtB,WAAK,CAACuB,QAAN,GAAiB,KAAK1K,MAAL,CAAY0K,QAAZ,IAAwB,KAAzC;AACAvB,WAAK,CAACoB,OAAN,GAAgBA,OAAO,IAAI,IAAX,GAAkB,MAAlB,GAA2BA,OAA3C;AACApB,WAAK,CAACwB,GAAN,GAAYL,GAAZ;AACAnB,WAAK,CAAC5I,KAAN,CAAYxD,KAAZ,GAAoB,MAApB;AAEA,UAAM6N,SAAS,GAAG7K,SAAS,CAAC8K,aAAV,CAAwB,KAAKlB,SAA7B,CAAlB;;AACA,UAAIiB,SAAJ,EAAe;AACX7K,iBAAS,CAACsE,WAAV,CAAsBuG,SAAtB;AACH;;AACD7K,eAAS,CAACS,WAAV,CAAsB2I,KAAtB;;AAEA,WAAK2B,KAAL,CAAW3B,KAAX,EAAkBrL,KAAlB;AACH;AAED;;;;;;;;;4BAMQiN,G,EAAKjN,K,EAAO;AAChBiN,SAAG,CAACP,QAAJ,GAAe,KAAKxK,MAAL,CAAYyK,aAA3B;AACAM,SAAG,CAACL,QAAJ,GAAe,KAAK1K,MAAL,CAAY0K,QAAZ,IAAwB,KAAvC;;AAEA,WAAKI,KAAL,CAAWC,GAAX,EAAgBjN,KAAhB;AACH;AAED;;;;;;;;;;;0BAQMqL,K,EAAOrL,K,EAAO;AAAA;;AAChB;AACA;AACA,UAAI,OAAOqL,KAAK,CAAC6B,IAAb,IAAqB,UAAzB,EAAqC;AACjC;AACA;AACA;AACA7B,aAAK,CAAC6B,IAAN;AACH;;AAED7B,WAAK,CAAC/G,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AAClC,cAAI,CAACO,SAAL,CAAe,OAAf,EAAwB,6BAAxB;AACH,OAFD;AAIAwG,WAAK,CAAC/G,gBAAN,CAAuB,SAAvB,EAAkC,YAAM;AACpC,cAAI,CAACO,SAAL,CAAe,SAAf;AACH,OAFD;AAIAwG,WAAK,CAAC/G,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AAClC,cAAI,CAACO,SAAL,CAAe,QAAf;AACH,OAFD,EAlBgB,CAsBhB;AACA;;AACAwG,WAAK,CAAC/G,gBAAN,CAAuB,MAAvB,EAA+B,YAAM;AACjC,cAAI,CAACO,SAAL,CAAe,MAAf;AACH,OAFD;AAIAwG,WAAK,CAAC/G,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AAClC,cAAI,CAACO,SAAL,CAAe,OAAf;AACH,OAFD;AAIAwG,WAAK,CAAC/G,gBAAN,CAAuB,QAAvB,EAAiC,UAAA6I,KAAK,EAAI;AACtC,cAAI,CAACtI,SAAL,CAAe,MAAf;AACH,OAFD;AAIA,WAAKwG,KAAL,GAAaA,KAAb;AACA,WAAKrL,KAAL,GAAaA,KAAb;AACA,WAAKgM,SAAL,GAAiB,IAAjB;AACA,WAAKD,MAAL,GAAc,IAAd;AACA,WAAKE,eAAL,CAAqB,KAAKR,YAA1B;AACA,WAAK2B,SAAL,CAAe,KAAKxB,MAApB;AACH;AAED;;;;;;;;+BAKW;AACP,aAAO,CAAC,KAAKP,KAAN,IAAe,KAAKA,KAAL,CAAWG,MAAjC;AACH;AAED;;;;;;;;kCAKc;AACV,UAAI,KAAK6B,gBAAT,EAA2B;AACvB,eAAO,KAAKA,gBAAZ;AACH;;AACD,UAAI9B,QAAQ,GAAG,CAAC,KAAKQ,MAAL,IAAe,KAAKV,KAArB,EAA4BE,QAA3C;;AACA,UAAIA,QAAQ,IAAI+B,QAAhB,EAA0B;AACtB;AACA/B,gBAAQ,GAAG,KAAKF,KAAL,CAAWkC,QAAX,CAAoB/O,GAApB,CAAwB,CAAxB,CAAX;AACH;;AACD,aAAO+M,QAAP;AACH;AAED;;;;;;;;;qCAMiB;AACb,aAAO,KAAKF,KAAL,IAAc,KAAKA,KAAL,CAAWC,WAAhC;AACH;AAED;;;;;;;;wCAKoB;AAChB,aAAO,KAAKgB,cAAL,KAAwB,KAAKkB,WAAL,EAAxB,IAA8C,CAArD;AACH;AAED;;;;;;;;sCAKkB;AACd,aAAO,KAAK/B,YAAL,IAAqB,KAAKJ,KAAL,CAAWI,YAAvC;AACH;AAED;;;;;;;;oCAKgBgC,K,EAAO;AACnB,WAAKhC,YAAL,GAAoBgC,KAAK,IAAI,CAA7B;AACA,WAAKpC,KAAL,CAAWI,YAAX,GAA0B,KAAKA,YAA/B;AACH;AAED;;;;;;;;2BAKOlN,K,EAAO;AACV,UAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,aAAK8M,KAAL,CAAWC,WAAX,GAAyB/M,KAAzB;AACH;;AACD,WAAKmP,YAAL;AACH;AAED;;;;;;;;;;;;yBASKnP,K,EAAOC,G,EAAK;AACb,WAAKmP,MAAL,CAAYpP,KAAZ;AACA,UAAMqP,OAAO,GAAG,KAAKvC,KAAL,CAAWK,IAAX,EAAhB;AACAlN,SAAG,IAAI,KAAKqP,UAAL,CAAgBrP,GAAhB,CAAP;AAEA,aAAOoP,OAAP;AACH;AAED;;;;;;;;;4BAMQ;AACJ,UAAIA,OAAJ;;AAEA,UAAI,KAAKvC,KAAT,EAAgB;AACZuC,eAAO,GAAG,KAAKvC,KAAL,CAAWM,KAAX,EAAV;AACH;;AACD,WAAK+B,YAAL;AAEA,aAAOE,OAAP;AACH;AAED;;;;;;;;;+BAMWpP,G,EAAK;AAAA;;AACZ,WAAKsP,UAAL,GAAkB,UAAAC,IAAI,EAAI;AACtB,YAAIA,IAAI,IAAIvP,GAAZ,EAAiB;AACb,gBAAI,CAACmN,KAAL;;AACA,gBAAI,CAACgC,MAAL,CAAYnP,GAAZ;AACH;AACJ,OALD;;AAMA,WAAK+N,EAAL,CAAQ,cAAR,EAAwB,KAAKuB,UAA7B;AACH;AAED;;;;mCACe;AACX,UAAI,KAAKA,UAAT,EAAqB;AACjB,aAAKE,EAAL,CAAQ,cAAR,EAAwB,KAAKF,UAA7B;AACA,aAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;AAED;;;;;;;;;;;;;6BAUSzN,M,EAAQC,K,EAAOG,I,EAAM;AAC1B,UAAI,KAAKsL,MAAT,EAAiB;AACb,0FAAsB1L,MAAtB,EAA8BC,KAA9B,EAAqCG,IAArC;AACH;;AACD,aAAO,KAAKT,KAAL,IAAc,EAArB;AACH;AAED;;;;;;;;;;8BAOUiO,Q,EAAU;AAChB,UAAIA,QAAJ,EAAc;AACV,YAAI,CAAC,KAAK5C,KAAL,CAAW6C,SAAhB,EAA2B;AACvB,iBAAOtM,OAAO,CAACuM,MAAR,CACH,IAAIC,KAAJ,CAAU,4CAAV,CADG,CAAP;AAGH;;AACD,eAAO,KAAK/C,KAAL,CAAW6C,SAAX,CAAqBD,QAArB,CAAP;AACH;;AAED,aAAOrM,OAAO,CAACuM,MAAR,CAAe,IAAIC,KAAJ,CAAU,uBAAuBH,QAAjC,CAAf,CAAP;AACH;AAED;;;;;;;;gCAKY;AACR,aAAO,KAAKrC,MAAL,IAAe,KAAKP,KAAL,CAAWO,MAAjC;AACH;AAED;;;;;;;;8BAKU6B,K,EAAO;AACb,WAAK7B,MAAL,GAAc6B,KAAd;AACA,WAAKpC,KAAL,CAAWO,MAAX,GAAoB,KAAKA,MAAzB;AACH;AAED;;;;;;;8BAIU;AACN,WAAKD,KAAL;AACA,WAAKtF,KAAL;;AAEA,UACI,KAAKnE,MAAL,CAAYmM,2BAAZ,IACA,KAAKhD,KADL,IAEA,KAAKA,KAAL,CAAW/E,UAHf,EAIE;AACE,aAAK+E,KAAL,CAAW/E,UAAX,CAAsBC,WAAtB,CAAkC,KAAK8E,KAAvC;AACH;;AAED,WAAKA,KAAL,GAAa,IAAb;AACH;;;;EAlXqCiD,iB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN1C;;;;;IAKqBC,S;;;AACjB;;;AAGA,uBAAc;AAAA;;AACV,SAAKC,cAAL;AACH;AAED;;;;;;;qCAGiB;AACb;;;;;;AAMA,WAAKC,eAAL,GAAuB,EAAvB;AACA;;;;;;AAKA,WAAKC,eAAL,GAAuB,CAAC,CAAxB;AACH;AAED;;;;;;;;;;;wCAQoBrO,M,EAAQ9B,K,EAAOC,G,EAAK;AACpC,UAAI6B,MAAM,IAAI,KAAKqO,eAAnB,EAAoC;AAChC,aAAKF,cAAL;AACA,aAAKE,eAAL,GAAuBrO,MAAvB;AACH,OAJmC,CAMpC;;;AACA,UAAIsO,cAAc,GAAG,EAArB;AACA,UAAIzN,CAAC,GAAG,CAAR,CARoC,CASpC;;AACA,aACIA,CAAC,GAAG,KAAKuN,eAAL,CAAqBpO,MAAzB,IACA,KAAKoO,eAAL,CAAqBvN,CAArB,IAA0B3C,KAF9B,EAGE;AACE2C,SAAC;AACJ,OAfmC,CAgBpC;AACA;AACA;AACA;;;AACA,UAAIA,CAAC,GAAG,CAAJ,IAAS,CAAb,EAAgB;AACZyN,sBAAc,CAAClG,IAAf,CAAoBlK,KAApB;AACH;;AACD,aACI2C,CAAC,GAAG,KAAKuN,eAAL,CAAqBpO,MAAzB,IACA,KAAKoO,eAAL,CAAqBvN,CAArB,KAA2B1C,GAF/B,EAGE;AACEmQ,sBAAc,CAAClG,IAAf,CAAoB,KAAKgG,eAAL,CAAqBvN,CAArB,CAApB;AACAA,SAAC;AACJ,OA7BmC,CA8BpC;;;AACA,UAAIA,CAAC,GAAG,CAAJ,IAAS,CAAb,EAAgB;AACZyN,sBAAc,CAAClG,IAAf,CAAoBjK,GAApB;AACH,OAjCmC,CAmCpC;;;AACAmQ,oBAAc,GAAGA,cAAc,CAACC,MAAf,CAAsB,UAACC,IAAD,EAAO5I,GAAP,EAAY6I,GAAZ,EAAoB;AACvD,YAAI7I,GAAG,IAAI,CAAX,EAAc;AACV,iBAAO4I,IAAI,IAAIC,GAAG,CAAC7I,GAAG,GAAG,CAAP,CAAlB;AACH,SAFD,MAEO,IAAIA,GAAG,IAAI6I,GAAG,CAACzO,MAAJ,GAAa,CAAxB,EAA2B;AAC9B,iBAAOwO,IAAI,IAAIC,GAAG,CAAC7I,GAAG,GAAG,CAAP,CAAlB;AACH;;AACD,eAAO4I,IAAI,IAAIC,GAAG,CAAC7I,GAAG,GAAG,CAAP,CAAX,IAAwB4I,IAAI,IAAIC,GAAG,CAAC7I,GAAG,GAAG,CAAP,CAA1C;AACH,OAPgB,CAAjB,CApCoC,CA6CpC;AACA;AACA;;AACA,WAAKwI,eAAL,GAAuB,KAAKA,eAAL,CAAqBM,MAArB,CAA4BJ,cAA5B,CAAvB;AACA,WAAKF,eAAL,GAAuB,KAAKA,eAAL,CAClBO,IADkB,CACb,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,GAAGC,CAAd;AAAA,OADa,EAElBN,MAFkB,CAEX,UAACC,IAAD,EAAO5I,GAAP,EAAY6I,GAAZ,EAAoB;AACxB,YAAI7I,GAAG,IAAI,CAAX,EAAc;AACV,iBAAO4I,IAAI,IAAIC,GAAG,CAAC7I,GAAG,GAAG,CAAP,CAAlB;AACH,SAFD,MAEO,IAAIA,GAAG,IAAI6I,GAAG,CAACzO,MAAJ,GAAa,CAAxB,EAA2B;AAC9B,iBAAOwO,IAAI,IAAIC,GAAG,CAAC7I,GAAG,GAAG,CAAP,CAAlB;AACH;;AACD,eAAO4I,IAAI,IAAIC,GAAG,CAAC7I,GAAG,GAAG,CAAP,CAAX,IAAwB4I,IAAI,IAAIC,GAAG,CAAC7I,GAAG,GAAG,CAAP,CAA1C;AACH,OATkB,CAAvB,CAjDoC,CA4DpC;AACA;;AACA,UAAMkJ,kBAAkB,GAAG,EAA3B;;AACA,WAAKjO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyN,cAAc,CAACtO,MAA/B,EAAuCa,CAAC,IAAI,CAA5C,EAA+C;AAC3CiO,0BAAkB,CAAC1G,IAAnB,CAAwB,CAACkG,cAAc,CAACzN,CAAD,CAAf,EAAoByN,cAAc,CAACzN,CAAC,GAAG,CAAL,CAAlC,CAAxB;AACH;;AAED,aAAOiO,kBAAP;AACH;AAED;;;;;;;;qCAKiB;AACb,UAAMC,mBAAmB,GAAG,EAA5B;AACA,UAAIlO,CAAJ;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKuN,eAAL,CAAqBpO,MAArC,EAA6Ca,CAAC,IAAI,CAAlD,EAAqD;AACjDkO,2BAAmB,CAAC3G,IAApB,CAAyB,CACrB,KAAKgG,eAAL,CAAqBvN,CAArB,CADqB,EAErB,KAAKuN,eAAL,CAAqBvN,CAAC,GAAG,CAAzB,CAFqB,CAAzB;AAIH;;AACD,aAAOkO,mBAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HL;;;;AAGA;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAASC,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,KAA7C,EAAoD;AAC5D,OAAKH,UAAL,GAAkBA,UAAlB;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKG,SAAL,GAAkB,IAAIJ,UAAL,IAAoBC,UAAU,GAAG,CAAjC,CAAjB;AAEA,OAAKI,QAAL,GAAgB,IAAIC,YAAJ,CAAiBN,UAAjB,CAAhB;AACA,OAAKO,QAAL,GAAgB,IAAID,YAAJ,CAAiBN,UAAjB,CAAhB;AACA,OAAKQ,YAAL,GAAoB,IAAIF,YAAJ,CAAiBN,UAAjB,CAApB;AACA,OAAKS,YAAL,GAAoB,IAAIC,WAAJ,CAAgBV,UAAhB,CAApB;AAEA,OAAKW,QAAL,GAAgB,CAAhB;AACA,OAAK9O,IAAL,GAAY,CAAZ;AAEA,MAAID,CAAJ;;AACA,UAAQsO,UAAR;AACI,SAAK,UAAL;AACI,WAAKtO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IACK,KAAKoO,UAAU,GAAG,CAAlB,CAAD,IACC,CAACA,UAAU,GAAG,CAAd,IAAmB,CAAnB,GAAuB/O,IAAI,CAAC2P,GAAL,CAAShP,CAAC,GAAG,CAACoO,UAAU,GAAG,CAAd,IAAmB,CAAhC,CADxB,CADJ;AAGH;;AACD;;AACJ,SAAK,cAAL;AACI,WAAKpO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IACI,OACA,OAAOX,IAAI,CAAC2P,GAAL,CAAShP,CAAC,IAAIoO,UAAU,GAAG,CAAjB,CAAD,GAAuB,GAAhC,CADP,GAEA,OAAO/O,IAAI,CAAC4P,GAAL,CAAU5P,IAAI,CAAC6P,EAAL,GAAU,CAAV,GAAclP,CAAf,IAAqBoO,UAAU,GAAG,CAAlC,CAAT,CAHX;AAIH;;AACD;;AACJ,SAAK,UAAL;AACIG,WAAK,GAAGA,KAAK,IAAI,IAAjB;;AACA,WAAKvO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IACI,CAAC,IAAIuO,KAAL,IAAc,CAAd,GACA,MAAMlP,IAAI,CAAC4P,GAAL,CAAU5P,IAAI,CAAC6P,EAAL,GAAU,CAAV,GAAclP,CAAf,IAAqBoO,UAAU,GAAG,CAAlC,CAAT,CADN,GAECG,KAAK,GAAG,CAAT,GACIlP,IAAI,CAAC4P,GAAL,CAAU,IAAI5P,IAAI,CAAC6P,EAAT,GAAclP,CAAf,IAAqBoO,UAAU,GAAG,CAAlC,CAAT,CAJR;AAKH;;AACD;;AACJ,SAAK,QAAL;AACI,WAAKpO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IAAuBX,IAAI,CAAC4P,GAAL,CAClB5P,IAAI,CAAC6P,EAAL,GAAUlP,CAAX,IAAiBoO,UAAU,GAAG,CAA9B,IAAmC/O,IAAI,CAAC6P,EAAL,GAAU,CAD1B,CAAvB;AAGH;;AACD;;AACJ,SAAK,OAAL;AACIX,WAAK,GAAGA,KAAK,IAAI,IAAjB;;AACA,WAAKvO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IAAuBX,IAAI,CAAC8P,GAAL,CACnB9P,IAAI,CAAC+P,CADc,EAEnB,CAAC,GAAD,GACI/P,IAAI,CAAC8P,GAAL,CACI,CAACnP,CAAC,GAAG,CAACoO,UAAU,GAAG,CAAd,IAAmB,CAAxB,KACMG,KAAK,IAAIH,UAAU,GAAG,CAAjB,CAAN,GAA6B,CADlC,CADJ,EAGI,CAHJ,CAHe,CAAvB;AASH;;AACD;;AACJ,SAAK,SAAL;AACI,WAAKpO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IACI,CAAC,OAAO,IAAR,IACAX,IAAI,CAAC4P,GAAL,CAAU5P,IAAI,CAAC6P,EAAL,GAAU,CAAV,GAAclP,CAAf,IAAqBoO,UAAU,GAAG,CAAlC,CAAT,CAFJ;AAGH;;AACD;;AACJ,SAAK,MAAL;AACA,SAAKtG,SAAL;AACI,WAAK9H,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IACI,OAAO,IAAIX,IAAI,CAAC4P,GAAL,CAAU5P,IAAI,CAAC6P,EAAL,GAAU,CAAV,GAAclP,CAAf,IAAqBoO,UAAU,GAAG,CAAlC,CAAT,CAAX,CADJ;AAEH;;AACD;;AACJ,SAAK,SAAL;AACI,WAAKpO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IACIX,IAAI,CAACgQ,GAAL,CAAShQ,IAAI,CAAC6P,EAAL,IAAY,IAAIlP,CAAL,IAAWoO,UAAU,GAAG,CAAxB,IAA6B,CAAxC,CAAT,KACC/O,IAAI,CAAC6P,EAAL,IAAY,IAAIlP,CAAL,IAAWoO,UAAU,GAAG,CAAxB,IAA6B,CAAxC,CADD,CADJ;AAGH;;AACD;;AACJ,SAAK,aAAL;AACI,WAAKpO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IAAuB,CAAvB;AACH;;AACD;;AACJ,SAAK,YAAL;AACI,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,aAAK4O,YAAL,CAAkB5O,CAAlB,IACK,IAAIoO,UAAL,IACCA,UAAU,GAAG,CAAb,GAAiB/O,IAAI,CAAC2P,GAAL,CAAShP,CAAC,GAAG,CAACoO,UAAU,GAAG,CAAd,IAAmB,CAAhC,CADlB,CADJ;AAGH;;AACD;;AACJ;AACI,YAAMlB,KAAK,CAAC,8BAA8BoB,UAA9B,GAA2C,GAA5C,CAAX;AAjFR;;AAoFA,MAAIgB,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGnB,UAAU,IAAI,CAAxB;AACA,MAAIpO,CAAJ;;AAEA,SAAOsP,KAAK,GAAGlB,UAAf,EAA2B;AACvB,SAAKpO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsP,KAAhB,EAAuBtP,CAAC,EAAxB,EAA4B;AACxB,WAAK6O,YAAL,CAAkB7O,CAAC,GAAGsP,KAAtB,IAA+B,KAAKT,YAAL,CAAkB7O,CAAlB,IAAuBuP,GAAtD;AACH;;AAEDD,SAAK,GAAGA,KAAK,IAAI,CAAjB;AACAC,OAAG,GAAGA,GAAG,IAAI,CAAb;AACH;;AAED,OAAKvP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoO,UAAhB,EAA4BpO,CAAC,EAA7B,EAAiC;AAC7B,SAAKyO,QAAL,CAAczO,CAAd,IAAmBX,IAAI,CAACgQ,GAAL,CAAS,CAAChQ,IAAI,CAAC6P,EAAN,GAAWlP,CAApB,CAAnB;AACA,SAAK2O,QAAL,CAAc3O,CAAd,IAAmBX,IAAI,CAAC4P,GAAL,CAAS,CAAC5P,IAAI,CAAC6P,EAAN,GAAWlP,CAApB,CAAnB;AACH;;AAED,OAAKwP,iBAAL,GAAyB,UAAS3E,MAAT,EAAiB;AACtC;AACA,QAAIuD,UAAU,GAAG,KAAKA,UAAtB;AAAA,QACIO,QAAQ,GAAG,KAAKA,QADpB;AAAA,QAEIF,QAAQ,GAAG,KAAKA,QAFpB;AAAA,QAGII,YAAY,GAAG,KAAKA,YAHxB;AAAA,QAIIY,IAAI,GAAG,IAAIf,YAAJ,CAAiBN,UAAjB,CAJX;AAAA,QAKIsB,IAAI,GAAG,IAAIhB,YAAJ,CAAiBN,UAAjB,CALX;AAAA,QAMIuB,GAAG,GAAG,IAAI,KAAKvB,UANnB;AAAA,QAOIwB,IAAI,GAAGvQ,IAAI,CAACuQ,IAPhB;AAAA,QAQIC,IARJ;AAAA,QASIC,IATJ;AAAA,QAUIC,GAVJ;AAAA,QAWIC,QAAQ,GAAG,IAAItB,YAAJ,CAAiBN,UAAU,GAAG,CAA9B,CAXf;AAaA,QAAI6B,CAAC,GAAG5Q,IAAI,CAAC+I,KAAL,CAAW/I,IAAI,CAAC6Q,GAAL,CAAS9B,UAAT,IAAuB/O,IAAI,CAAC8Q,GAAvC,CAAR;;AAEA,QAAI9Q,IAAI,CAAC8P,GAAL,CAAS,CAAT,EAAYc,CAAZ,MAAmB7B,UAAvB,EAAmC;AAC/B,YAAM,4CAAN;AACH;;AACD,QAAIA,UAAU,KAAKvD,MAAM,CAAC1L,MAA1B,EAAkC;AAC9B,YAAM,oEACFiP,UADE,GAEF,gBAFE,GAGFvD,MAAM,CAAC1L,MAHX;AAIH;;AAED,QAAIiR,QAAQ,GAAG,CAAf;AAAA,QACIC,kBADJ;AAAA,QAEIC,kBAFJ;AAAA,QAGIC,qBAHJ;AAAA,QAIIC,qBAJJ;AAAA,QAKIC,GALJ;AAAA,QAMIC,EANJ;AAAA,QAOIC,EAPJ;AAAA,QAQIC,OARJ;;AAUA,SAAK,IAAI5Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoO,UAApB,EAAgCpO,CAAC,EAAjC,EAAqC;AACjCyP,UAAI,CAACzP,CAAD,CAAJ,GACI6K,MAAM,CAACgE,YAAY,CAAC7O,CAAD,CAAb,CAAN,GAA0B,KAAK4O,YAAL,CAAkBC,YAAY,CAAC7O,CAAD,CAA9B,CAD9B;AAEA0P,UAAI,CAAC1P,CAAD,CAAJ,GAAU,CAAV;AACH;;AAED,WAAOoQ,QAAQ,GAAGhC,UAAlB,EAA8B;AAC1BiC,wBAAkB,GAAG1B,QAAQ,CAACyB,QAAD,CAA7B;AACAE,wBAAkB,GAAG7B,QAAQ,CAAC2B,QAAD,CAA7B;AAEAG,2BAAqB,GAAG,CAAxB;AACAC,2BAAqB,GAAG,CAAxB;;AAEA,WAAK,IAAIK,OAAO,GAAG,CAAnB,EAAsBA,OAAO,GAAGT,QAAhC,EAA0CS,OAAO,EAAjD,EAAqD;AACjD,YAAI7Q,CAAC,GAAG6Q,OAAR;;AAEA,eAAO7Q,CAAC,GAAGoO,UAAX,EAAuB;AACnBqC,aAAG,GAAGzQ,CAAC,GAAGoQ,QAAV;AACAM,YAAE,GACEH,qBAAqB,GAAGd,IAAI,CAACgB,GAAD,CAA5B,GACAD,qBAAqB,GAAGd,IAAI,CAACe,GAAD,CAFhC;AAGAE,YAAE,GACEJ,qBAAqB,GAAGb,IAAI,CAACe,GAAD,CAA5B,GACAD,qBAAqB,GAAGf,IAAI,CAACgB,GAAD,CAFhC;AAIAhB,cAAI,CAACgB,GAAD,CAAJ,GAAYhB,IAAI,CAACzP,CAAD,CAAJ,GAAU0Q,EAAtB;AACAhB,cAAI,CAACe,GAAD,CAAJ,GAAYf,IAAI,CAAC1P,CAAD,CAAJ,GAAU2Q,EAAtB;AACAlB,cAAI,CAACzP,CAAD,CAAJ,IAAW0Q,EAAX;AACAhB,cAAI,CAAC1P,CAAD,CAAJ,IAAW2Q,EAAX;AAEA3Q,WAAC,IAAIoQ,QAAQ,IAAI,CAAjB;AACH;;AAEDQ,eAAO,GAAGL,qBAAV;AACAA,6BAAqB,GACjBK,OAAO,GAAGP,kBAAV,GACAG,qBAAqB,GAAGF,kBAF5B;AAGAE,6BAAqB,GACjBI,OAAO,GAAGN,kBAAV,GACAE,qBAAqB,GAAGH,kBAF5B;AAGH;;AAEDD,cAAQ,GAAGA,QAAQ,IAAI,CAAvB;AACH;;AAED,SAAK,IAAIpQ,CAAC,GAAG,CAAR,EAAW8Q,CAAC,GAAG1C,UAAU,GAAG,CAAjC,EAAoCpO,CAAC,GAAG8Q,CAAxC,EAA2C9Q,CAAC,EAA5C,EAAgD;AAC5C6P,UAAI,GAAGJ,IAAI,CAACzP,CAAD,CAAX;AACA8P,UAAI,GAAGJ,IAAI,CAAC1P,CAAD,CAAX;AACA+P,SAAG,GAAGJ,GAAG,GAAGC,IAAI,CAACC,IAAI,GAAGA,IAAP,GAAcC,IAAI,GAAGA,IAAtB,CAAhB;;AAEA,UAAIC,GAAG,GAAG,KAAK9P,IAAf,EAAqB;AACjB,aAAK8O,QAAL,GAAgB/O,CAAhB;AACA,aAAKC,IAAL,GAAY8P,GAAZ;AACH;;AACDC,cAAQ,CAAChQ,CAAD,CAAR,GAAc+P,GAAd;AACH;;AACD,WAAOC,QAAP;AACH,GA9FD;AA+FH,CAnND;AAoNA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyBqBe,iB;;;;;;AACjB;;;;;;;;;2BASc/P,M,EAAQ;AAClB,aAAO;AACHvD,YAAI,EAAE,aADH;AAEHuT,iBAAS,EAAEhQ,MAAM,IAAIA,MAAM,CAACgQ,SAAjB,GAA6BhQ,MAAM,CAACgQ,SAApC,GAAgD,KAFxD;AAGHhQ,cAAM,EAAEA,MAHL;AAIHiQ,mBAAW,EAAE;AACT9C,aAAG,EAAEA;AADI,SAJV;AAOH+C,gBAAQ,EAAEH;AAPP,OAAP;AASH;;;AAED,6BAAY/P,MAAZ,EAAoBmQ,EAApB,EAAwB;AAAA;;AAAA;;AACpB,SAAKnQ,MAAL,GAAcA,MAAd;AACA,SAAKoQ,UAAL,GAAkBD,EAAlB;AACA,SAAK7P,IAAL,GAAY6P,EAAE,CAAC7P,IAAf;AAEA,SAAK+P,kBAAL,GAA0BrQ,MAAM,CAACqQ,kBAAjC;;AACA,SAAKC,SAAL,GAAiB,UAAAjP,CAAC,EAAI;AAClB,WAAI,CAACkP,YAAL,CAAkBlP,CAAlB;AACH,KAFD;;AAGA,SAAKmP,SAAL,GAAiB,YAAM;AACnB,WAAI,CAACC,MAAL;AACH,KAFD;;AAGA,SAAKC,eAAL,GAAuB,UAAArP,CAAC,EAAI;AACxB,WAAI,CAACsP,oBAAL,CAA0BtP,CAA1B;AACH,KAFD;;AAGA,SAAKuP,QAAL,GAAgB,YAAM;AAClB,UAAMC,MAAM,GAAI,KAAI,CAACA,MAAL,GAAcV,EAAE,CAACU,MAAjC;AAEA,WAAI,CAAC9Q,SAAL,GACI,YAAY,OAAOC,MAAM,CAACD,SAA1B,GACMU,QAAQ,CAACoK,aAAT,CAAuB7K,MAAM,CAACD,SAA9B,CADN,GAEMC,MAAM,CAACD,SAHjB;;AAKA,UAAI,CAAC,KAAI,CAACA,SAAV,EAAqB;AACjB,cAAMmM,KAAK,CAAC,yCAAD,CAAX;AACH;;AAED,WAAI,CAACnP,KAAL,GAAa8T,MAAM,CAAC9T,KAApB;AACA,WAAI,CAACkD,UAAL,GAAkB,KAAI,CAACD,MAAL,CAAYC,UAAZ,IAA0BkQ,EAAE,CAACnQ,MAAH,CAAUC,UAAtD;AACA,WAAI,CAAC6Q,UAAL,GACI,KAAI,CAAC9Q,MAAL,CAAY8Q,UAAZ,IAA0BX,EAAE,CAACnQ,MAAH,CAAU8Q,UAApC,IAAkD,GADtD;AAEA,WAAI,CAAC9T,MAAL,GAAc,KAAI,CAAC8T,UAAL,GAAkB,CAAhC;AACA,WAAI,CAACC,QAAL,GAAgB/Q,MAAM,CAAC+Q,QAAvB;AACA,WAAI,CAACzD,UAAL,GAAkBtN,MAAM,CAACsN,UAAzB;AACA,WAAI,CAACC,KAAL,GAAavN,MAAM,CAACuN,KAApB;AACA,WAAI,CAACyD,QAAL,GAAgBhR,MAAM,CAACgR,QAAvB;;AAEA,WAAI,CAAChM,aAAL;;AACA,WAAI,CAACiM,YAAL;;AACA,WAAI,CAACR,MAAL;;AAEAI,YAAM,CAAC1Q,OAAP,CAAeiC,gBAAf,CAAgC,QAAhC,EAA0C,KAAI,CAACkO,SAA/C;AACAH,QAAE,CAAC9F,EAAH,CAAM,QAAN,EAAgB,KAAI,CAACmG,SAArB;AACH,KA5BD;AA6BH;;;;2BAEM;AACH;AACA,UAAI,KAAKJ,UAAL,CAAgBc,OAApB,EAA6B;AACzB,aAAKN,QAAL;AACH,OAFD,MAEO;AACH,aAAKR,UAAL,CAAgBe,IAAhB,CAAqB,OAArB,EAA8B,KAAKP,QAAnC;AACH;AACJ;;;8BAES;AACN,WAAKzM,KAAL;AACA,WAAKiM,UAAL,CAAgBtE,EAAhB,CAAmB,OAAnB,EAA4B,KAAK8E,QAAjC;AACA,WAAKR,UAAL,CAAgBtE,EAAhB,CAAmB,QAAnB,EAA6B,KAAK0E,SAAlC;AACA,WAAKK,MAAL,CAAY1Q,OAAZ,CAAoBiR,mBAApB,CAAwC,QAAxC,EAAkD,KAAKd,SAAvD;AACA,WAAKF,UAAL,GAAkB,IAAlB;AACA,WAAK9P,IAAL,GAAY,IAAZ;AACA,WAAKN,MAAL,GAAc,IAAd;;AACA,UAAI,KAAKG,OAAT,EAAkB;AACd,aAAKA,OAAL,CAAaiR,mBAAb,CAAiC,OAAjC,EAA0C,KAAKV,eAA/C;AACA,aAAKvQ,OAAL,CAAaiE,UAAb,CAAwBC,WAAxB,CAAoC,KAAKlE,OAAzC;AACA,aAAKA,OAAL,GAAe,IAAf;AACH;AACJ;;;oCAEe;AACZ,UAAMkR,eAAe,GAAG,KAAKtR,SAAL,CAAe8K,aAAf,CAA6B,aAA7B,CAAxB;;AACA,UAAIwG,eAAJ,EAAqB;AACjB,aAAKtR,SAAL,CAAesE,WAAf,CAA2BgN,eAA3B;AACH;;AACD,UAAMC,QAAQ,GAAG,KAAKlB,UAAL,CAAgBpQ,MAAjC;AACA,WAAKG,OAAL,GAAeM,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAf,CANY,CAOZ;;AACA,UAAI,KAAKV,MAAL,CAAYuR,MAAhB,EAAwB;AACpB,YAAMC,QAAQ,GAAI,KAAKA,QAAL,GAAgB/Q,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAlC;AACA8Q,gBAAQ,CAACC,SAAT,CAAmBC,GAAnB,CAAuB,aAAvB;AACA,aAAKb,MAAL,CAAYtQ,KAAZ,CAAkBiR,QAAlB,EAA4B;AACxBvP,cAAI,EAAE,CADkB;AAExBrB,kBAAQ,EAAE,UAFc;AAGxBsE,gBAAM,EAAE,CAHgB;AAIxBlI,gBAAM,YAAK,KAAKA,MAAL,GAAc,KAAKiD,UAAxB,OAJkB;AAKxBlD,eAAK,YAAK,KAAK,KAAKkD,UAAf;AALmB,SAA5B;AAOA,aAAKE,OAAL,CAAaK,WAAb,CAAyBgR,QAAzB;AACA,aAAKG,UAAL,CACI,oBADJ,EAEI,MAFJ,EAGI,MAHJ,EAII,EAJJ,EAKI,MALJ,EAMI,SANJ,EAOI,QAPJ,EAQI,aARJ;AAUH;;AAED,WAAKd,MAAL,CAAYtQ,KAAZ,CAAkB,KAAKJ,OAAvB,EAAgC;AAC5BQ,eAAO,EAAE,OADmB;AAE5BC,gBAAQ,EAAE,UAFkB;AAG5BuE,WAAG,EAAE,QAHuB;AAI5BtE,kBAAU,EAAE,MAJgB;AAK5BC,wBAAgB,EAAE,MALU;AAM5B9D,cAAM,YAAK,KAAKA,MAAL,GAAc,KAAKiD,UAAxB;AANsB,OAAhC;;AASA,UAAIqR,QAAQ,CAACvQ,UAAT,IAAuBuQ,QAAQ,CAACtQ,YAApC,EAAkD;AAC9C,aAAK6P,MAAL,CAAYtQ,KAAZ,CAAkB,KAAKJ,OAAvB,EAAgC;AAC5Bc,mBAAS,EAAE,MADiB;AAE5BE,mBAAS,EAAE;AAFiB,SAAhC;AAIH;;AACD,WAAKpB,SAAL,CAAeS,WAAf,CAA2B,KAAKL,OAAhC;AAEA,WAAKA,OAAL,CAAaiC,gBAAb,CAA8B,OAA9B,EAAuC,KAAKsO,eAA5C;AACH;;;yCAEoBzF,K,EAAO;AACxBA,WAAK,CAAC1J,cAAN;;AAEA,UAAI,KAAKvB,MAAL,CAAY4R,aAAZ,KAA8B,aAAlC,EAAiD;AAC7C;AACH,OAFD,MAEO;AACH,YAAMC,IAAI,GAAG,aAAa5G,KAAb,GAAqBA,KAAK,CAAC6G,OAA3B,GAAqC7G,KAAK,CAAC8G,MAAxD;AACA,aAAKpP,SAAL,CAAe,OAAf,EAAwBkP,IAAI,GAAG,KAAK1P,WAAZ,IAA2B,CAAnD;AACH;AACJ;;;mCAEc;AACX,UAAM9E,MAAM,GAAI,KAAKA,MAAL,GAAc,KAAK8C,OAAL,CAAaK,WAAb,CAC1BC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAD0B,CAA9B;AAIA,WAAKsR,QAAL,GAAgB3U,MAAM,CAACT,UAAP,CAAkB,IAAlB,CAAhB;AAEA,WAAK0D,IAAL,CAAUC,KAAV,CAAgBlD,MAAhB,EAAwB;AACpBuD,gBAAQ,EAAE,UADU;AAEpBsE,cAAM,EAAE;AAFY,OAAxB;AAIH;;;6BAEQ;AACL,WAAK+M,iBAAL;;AAEA,UAAI,KAAK5B,kBAAT,EAA6B;AACzB,aAAK6B,mBAAL,CAAyB,KAAK7B,kBAA9B;AACH,OAFD,MAEO;AACH,aAAK8B,cAAL,CAAoB,KAAKC,eAAzB;AACH;AACJ;;;wCAEmB;AAChB,UAAMrV,KAAK,GAAGsB,IAAI,CAACC,KAAL,CAAW,KAAKvB,KAAL,GAAa,KAAKkD,UAA7B,IAA2C,IAAzD;AACA,WAAK5C,MAAL,CAAYN,KAAZ,GAAoB,KAAKA,KAAzB;AACA,WAAKM,MAAL,CAAYL,MAAZ,GAAqB,KAAKA,MAA1B;AACA,WAAKK,MAAL,CAAYkD,KAAZ,CAAkBxD,KAAlB,GAA0BA,KAA1B;AACH;;;oCAEesV,e,EAAiBC,E,EAAI;AACjC,UAAMN,QAAQ,GAAGM,EAAE,CAACN,QAApB;AACA,UAAM7T,MAAM,GAAGmU,EAAE,CAAClC,UAAH,CAAcmC,OAAd,CAAsBjH,WAAtB,EAAf;AACA,UAAMtO,MAAM,GAAGsV,EAAE,CAACtV,MAAlB;AACA,UAAMwV,MAAM,GAAGF,EAAE,CAACG,QAAH,CAAYJ,eAAZ,CAAf;AACA,UAAMK,YAAY,GAAGJ,EAAE,CAACzI,MAAH,GAAY,IAAIyI,EAAE,CAACzI,MAAH,CAAU8I,gBAA1B,GAA6C,CAAlE;AACA,UAAI3T,CAAJ;AACA,UAAII,CAAJ;;AAEA,WAAKJ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwT,MAAM,CAACrU,MAAvB,EAA+Ba,CAAC,EAAhC,EAAoC;AAChC,aAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoT,MAAM,CAACxT,CAAD,CAAN,CAAUb,MAA1B,EAAkCiB,CAAC,EAAnC,EAAuC;AACnC,cAAMwT,GAAG,GAAGN,EAAE,CAACtB,QAAH,CAAYwB,MAAM,CAACxT,CAAD,CAAN,CAAUI,CAAV,CAAZ,CAAZ;AAEAkT,YAAE,CAACN,QAAH,CAAYxU,SAAZ,iBAA+BoV,GAAG,CAAC,CAAD,CAAlC,eAA0CA,GAAG,CAAC,CAAD,CAA7C,eAAqDA,GAAG,CAAC,CAAD,CAAxD;AACAN,YAAE,CAACN,QAAH,CAAYnU,QAAZ,CACImB,CADJ,EAEIhC,MAAM,GAAGoC,CAAC,GAAGsT,YAFjB,EAGI,CAHJ,EAIIA,YAJJ;AAMH;AACJ;AACJ;;;mCAEcG,Q,EAAU;AACrB,UAAM/B,UAAU,GAAG,KAAKA,UAAxB;AACA,UAAMjH,MAAM,GAAI,KAAKA,MAAL,GAAc,KAAKuG,UAAL,CAAgBmC,OAAhB,CAAwB1I,MAAtD;AACA,UAAMiJ,UAAU,GAAGjJ,MAAM,CAACkJ,cAAP,CAAsB,CAAtB,CAAnB;AACA,UAAMC,YAAY,GAAGnJ,MAAM,CAAC1L,MAA5B;AACA,UAAMkP,UAAU,GAAGxD,MAAM,CAACwD,UAA1B;AACA,UAAM4F,WAAW,GAAG,EAApB;;AAEA,UAAI,CAACpJ,MAAL,EAAa;AACT,aAAKlH,SAAL,CAAe,OAAf,EAAwB,mCAAxB;AACA;AACH;;AAED,UAAIoO,QAAQ,GAAG,KAAKA,QAApB;;AACA,UAAI,CAACA,QAAL,EAAe;AACX,YAAMmC,kBAAkB,GAAGrJ,MAAM,CAAC1L,MAAP,GAAgB,KAAKd,MAAL,CAAYN,KAAvD;AACAgU,gBAAQ,GAAG1S,IAAI,CAACsF,GAAL,CAAS,CAAT,EAAYtF,IAAI,CAACC,KAAL,CAAWwS,UAAU,GAAGoC,kBAAxB,CAAZ,CAAX;AACH;;AAED,UAAMC,GAAG,GAAG,IAAIhG,GAAJ,CACR2D,UADQ,EAERzD,UAFQ,EAGR,KAAKC,UAHG,EAIR,KAAKC,KAJG,CAAZ;AAMA,UAAM6F,cAAc,GAAG/U,IAAI,CAAC+I,KAAL,CACnB4L,YAAY,IAAIlC,UAAU,GAAGC,QAAjB,CADO,CAAvB;AAGA,UAAIsC,aAAa,GAAG,CAApB;;AAEA,aAAOA,aAAa,GAAGvC,UAAhB,GAA6BgC,UAAU,CAAC3U,MAA/C,EAAuD;AACnD,YAAMmV,OAAO,GAAGR,UAAU,CAACS,KAAX,CACZF,aADY,EAEZA,aAAa,GAAGvC,UAFJ,CAAhB;AAIA,YAAM9B,QAAQ,GAAGmE,GAAG,CAAC3E,iBAAJ,CAAsB8E,OAAtB,CAAjB;AACA,YAAME,KAAK,GAAG,IAAIC,UAAJ,CAAe3C,UAAU,GAAG,CAA5B,CAAd;AACA,YAAI1R,CAAC,SAAL;;AACA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0R,UAAU,GAAG,CAA7B,EAAgC1R,CAAC,EAAjC,EAAqC;AACjCoU,eAAK,CAACpU,CAAD,CAAL,GAAWf,IAAI,CAACsF,GAAL,CAAS,CAAC,GAAV,EAAetF,IAAI,CAACqV,KAAL,CAAW1E,QAAQ,CAAC5P,CAAD,CAAnB,IAA0B,EAAzC,CAAX;AACH;;AACD6T,mBAAW,CAAC1M,IAAZ,CAAiBiN,KAAjB;AACAH,qBAAa,IAAIvC,UAAU,GAAGC,QAA9B;AACH;;AACD8B,cAAQ,CAACI,WAAD,EAAc,IAAd,CAAR;AACH;;;wCAEmB3I,G,EAAK;AAAA;;AACrB,UAAMqJ,IAAI,GAAG,KAAKrT,IAAL,CAAUqT,IAAV,CAAe;AAAErJ,WAAG,EAAEA;AAAP,OAAf,CAAb;AAEAqJ,UAAI,CAACtJ,EAAL,CAAQ,SAAR,EAAmB,UAAAuJ,IAAI;AAAA,eACnB,MAAI,CAACxB,eAAL,CAAqByB,IAAI,CAACC,KAAL,CAAWF,IAAX,CAArB,EAAuC,MAAvC,CADmB;AAAA,OAAvB;AAGAD,UAAI,CAACtJ,EAAL,CAAQ,OAAR,EAAiB,UAAAhJ,CAAC;AAAA,eACd,MAAI,CAACsB,SAAL,CAAe,OAAf,EAAwB,gBAAgBtB,CAAC,CAACmC,MAAF,CAASuQ,UAAjD,CADc;AAAA,OAAlB;AAIA,aAAOJ,IAAP;AACH;;;6BAEQK,I,EAAM;AACX,aAAOA,IAAI,IAAI,IAAR,GAAe,CAACA,IAAI,GAAG,IAAR,EAAcC,OAAd,CAAsB,CAAtB,CAAf,GAA0C5V,IAAI,CAACC,KAAL,CAAW0V,IAAX,CAAjD;AACH;;;6BAEQA,I,EAAM;AACX,aAAOA,IAAI,IAAI,IAAR,GAAe,KAAf,GAAuB,IAA9B;AACH;;;+BAGGE,M,EACAC,Y,EACAC,Y,EACAC,Q,EACAC,a,EACAC,a,EACAC,S,EACAzU,S,EACF;AACE,UAAM0U,iBAAiB,GAAG,KAAKzX,MAA/B;AACAkX,YAAM,GAAGA,MAAM,IAAI,kBAAnB;AACAC,kBAAY,GAAGA,YAAY,IAAI,MAA/B;AACAC,kBAAY,GAAGA,YAAY,IAAI,MAA/B;AACAC,cAAQ,GAAGA,QAAQ,IAAI,WAAvB;AACAC,mBAAa,GAAGA,aAAa,IAAI,MAAjC;AACAC,mBAAa,GAAGA,aAAa,IAAI,MAAjC;AACAC,eAAS,GAAGA,SAAS,IAAI,QAAzB;AACAzU,eAAS,GAAGA,SAAS,IAAI,aAAzB;AACA,UAAM2U,OAAO,GAAGD,iBAAiB,IAAI,GAArC;AACA,UAAME,UAAU,GAAG,KAAKD,OAAO,GAAG,GAAf,CAAnB;AACA,UAAME,SAAS,GAAG,CAAlB;AACA,UAAMzN,IAAI,GACN,CAAC,KAAKiJ,UAAL,CAAgBmC,OAAhB,CAAwBsC,EAAxB,CAA2BxH,UAA3B,GAAwC,CAAxC,GAA4CuH,SAA7C,IACAD,UAFJ;AAIA,UAAM/W,GAAG,GAAG,KAAK4T,QAAL,CAAc5U,UAAd,CAAyB,IAAzB,CAAZ;AACA,WAAK4U,QAAL,CAAcxU,MAAd,GAAuB,KAAKA,MAA5B;AACA,WAAKwU,QAAL,CAAczU,KAAd,GAAsB,EAAtB;AAEAa,SAAG,CAACJ,SAAJ,GAAgB0W,MAAhB;AACAtW,SAAG,CAACC,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB6W,OAAvB;AACA9W,SAAG,CAAC0B,IAAJ;AACA,UAAIN,CAAJ;;AAEA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI2V,UAAjB,EAA6B3V,CAAC,EAA9B,EAAkC;AAC9BpB,WAAG,CAAC4W,SAAJ,GAAgBA,SAAhB;AACA5W,WAAG,CAACkX,YAAJ,GAAmB,QAAnB;AAEA,YAAMd,IAAI,GAAGY,SAAS,GAAGzN,IAAI,GAAGnI,CAAhC;AACA,YAAM+V,KAAK,GAAG1W,IAAI,CAACC,KAAL,CACT0V,IAAI,IAAI,KAAK3G,UAAL,GAAkB,CAAtB,CAAL,GAAiC,KAAKyD,UAD5B,CAAd;AAGA,YAAMkE,KAAK,GAAG,KAAKC,QAAL,CAAcjB,IAAd,CAAd;AACA,YAAMkB,KAAK,GAAG,KAAKC,QAAL,CAAcnB,IAAd,CAAd;AACA,YAAMvW,CAAC,GAAG,EAAV;AACA,YAAM2X,YAAY,GAAG,CAArB;;AAEA,YAAIpW,CAAC,IAAI,CAAT,EAAY;AACRpB,aAAG,CAACJ,SAAJ,GAAgB+W,aAAhB;AACA3W,aAAG,CAACyX,IAAJ,GAAWjB,YAAY,GAAG,GAAf,GAAqBC,QAAhC;AACAzW,aAAG,CAAC0X,QAAJ,CAAaJ,KAAb,EAAoBzX,CAAC,GAAG,EAAxB,EAA4BiX,OAAO,GAAG1V,CAAV,GAAc,EAA1C;AACApB,aAAG,CAACJ,SAAJ,GAAgB8W,aAAhB;AACA1W,aAAG,CAACyX,IAAJ,GAAWlB,YAAY,GAAG,GAAf,GAAqBE,QAAhC;AACAzW,aAAG,CAAC0X,QAAJ,CAAaN,KAAb,EAAoBvX,CAApB,EAAuBiX,OAAO,GAAG1V,CAAV,GAAc,EAArC;AACH,SAPD,MAOO;AACHpB,aAAG,CAACJ,SAAJ,GAAgB+W,aAAhB;AACA3W,aAAG,CAACyX,IAAJ,GAAWjB,YAAY,GAAG,GAAf,GAAqBC,QAAhC;AACAzW,aAAG,CAAC0X,QAAJ,CAAaJ,KAAb,EAAoBzX,CAAC,GAAG,EAAxB,EAA4BiX,OAAO,GAAG1V,CAAC,GAAG,EAAd,GAAmBoW,YAA/C;AACAxX,aAAG,CAACJ,SAAJ,GAAgB8W,aAAhB;AACA1W,aAAG,CAACyX,IAAJ,GAAWlB,YAAY,GAAG,GAAf,GAAqBE,QAAhC;AACAzW,aAAG,CAAC0X,QAAJ,CAAaN,KAAb,EAAoBvX,CAApB,EAAuBiX,OAAO,GAAG1V,CAAC,GAAG,EAAd,GAAmBoW,YAA1C;AACH;AACJ;AACJ;;;iCAEY/T,C,EAAG;AACZ,UAAI,KAAKlB,OAAT,EAAkB;AACd,aAAKA,OAAL,CAAa+B,UAAb,GAA0Bb,CAAC,CAACmC,MAAF,CAAStB,UAAnC;AACH;AACJ;;;6BAEQqT,S,EAAW;AAChB,UAAMC,aAAa,GAAG,KAAKzY,KAA3B;AACA,UAAM0Y,SAAS,GAAG,EAAlB;AAEA,UAAMC,QAAQ,GAAG,IAAIH,SAAS,CAACpX,MAA/B;AACA,UAAMwX,QAAQ,GAAG,IAAIH,aAArB;AACA,UAAIxW,CAAJ;;AAEA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwW,aAAhB,EAA+BxW,CAAC,EAAhC,EAAoC;AAChC,YAAM4W,MAAM,GAAG,IAAIxN,KAAJ,CAAUmN,SAAS,CAAC,CAAD,CAAT,CAAapX,MAAvB,CAAf;AACA,YAAIiB,CAAC,SAAL;;AAEA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmW,SAAS,CAACpX,MAA1B,EAAkCiB,CAAC,EAAnC,EAAuC;AACnC,cAAMyW,QAAQ,GAAGzW,CAAC,GAAGsW,QAArB;AACA,cAAMI,MAAM,GAAGD,QAAQ,GAAGH,QAA1B;AACA,cAAMK,QAAQ,GAAG/W,CAAC,GAAG2W,QAArB;AACA,cAAMK,MAAM,GAAGD,QAAQ,GAAGJ,QAA1B;AAEA,cAAM7Q,OAAO,GACTgR,MAAM,IAAIC,QAAV,IAAsBC,MAAM,IAAIH,QAAhC,GACM,CADN,GAEMxX,IAAI,CAACuF,GAAL,CACIvF,IAAI,CAACsF,GAAL,CAASmS,MAAT,EAAiBC,QAAjB,CADJ,EAEI1X,IAAI,CAACsF,GAAL,CAASqS,MAAT,EAAiBH,QAAjB,CAFJ,IAIAxX,IAAI,CAACsF,GAAL,CACItF,IAAI,CAACuF,GAAL,CAASkS,MAAT,EAAiBC,QAAjB,CADJ,EAEI1X,IAAI,CAACuF,GAAL,CAASoS,MAAT,EAAiBH,QAAjB,CAFJ,CAPV;AAWA,cAAI5G,CAAC,SAAL;AACA;;AACA,cAAInK,OAAO,GAAG,CAAd,EAAiB;AACb,iBAAKmK,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsG,SAAS,CAAC,CAAD,CAAT,CAAapX,MAA7B,EAAqC8Q,CAAC,EAAtC,EAA0C;AACtC,kBAAI2G,MAAM,CAAC3G,CAAD,CAAN,IAAa,IAAjB,EAAuB;AACnB2G,sBAAM,CAAC3G,CAAD,CAAN,GAAY,CAAZ;AACH;;AACD2G,oBAAM,CAAC3G,CAAD,CAAN,IAAcnK,OAAO,GAAG6Q,QAAX,GAAuBJ,SAAS,CAACnW,CAAD,CAAT,CAAa6P,CAAb,CAApC;AACH;AACJ;AACD;;AACH;;AAED,YAAMgH,SAAS,GAAG,IAAIxC,UAAJ,CAAe8B,SAAS,CAAC,CAAD,CAAT,CAAapX,MAA5B,CAAlB;AACA,YAAI+X,CAAC,SAAL;;AAEA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAapX,MAA7B,EAAqC+X,CAAC,EAAtC,EAA0C;AACtCD,mBAAS,CAACC,CAAD,CAAT,GAAeN,MAAM,CAACM,CAAD,CAArB;AACH;;AAEDT,iBAAS,CAAClP,IAAV,CAAe0P,SAAf;AACH;;AAED,aAAOR,SAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;AC1pBL;;;;AAEA;;;;;;;AAOe,SAAS9B,IAAT,CAAcwC,OAAd,EAAuB;AAClC,MAAMjG,QAAQ,GAAG,IAAI3L,iBAAJ,EAAjB;AACA,MAAM6R,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,MAAIC,QAAQ,GAAG,KAAf;AACAF,KAAG,CAACG,IAAJ,CAASJ,OAAO,CAACK,MAAR,IAAkB,KAA3B,EAAkCL,OAAO,CAAC7L,GAA1C,EAA+C,IAA/C;AACA8L,KAAG,CAACK,YAAJ,GAAmBN,OAAO,CAACM,YAAR,IAAwB,MAA3C;;AAEA,MAAIN,OAAO,CAACC,GAAZ,EAAiB;AACb,QAAID,OAAO,CAACC,GAAR,CAAYM,cAAhB,EAAgC;AAC5B;AACAP,aAAO,CAACC,GAAR,CAAYM,cAAZ,CAA2BzQ,OAA3B,CAAmC,UAAA0Q,MAAM,EAAI;AACzCP,WAAG,CAACQ,gBAAJ,CAAqBD,MAAM,CAACE,GAA5B,EAAiCF,MAAM,CAACpL,KAAxC;AACH,OAFD;AAGH;;AACD,QAAI4K,OAAO,CAACC,GAAR,CAAYU,eAAhB,EAAiC;AAC7B;AACAV,SAAG,CAACU,eAAJ,GAAsB,IAAtB;AACH;AACJ;;AAEDV,KAAG,CAAChU,gBAAJ,CAAqB,UAArB,EAAiC,UAAAf,CAAC,EAAI;AAClC6O,YAAQ,CAACvN,SAAT,CAAmB,UAAnB,EAA+BtB,CAA/B;;AACA,QAAIA,CAAC,CAAC0V,gBAAF,IAAsB1V,CAAC,CAAC2V,MAAF,IAAY3V,CAAC,CAAC4V,KAAxC,EAA+C;AAC3CX,cAAQ,GAAG,IAAX;AACH;AACJ,GALD;AAMAF,KAAG,CAAChU,gBAAJ,CAAqB,MAArB,EAA6B,UAAAf,CAAC,EAAI;AAC9B,QAAI,CAACiV,QAAL,EAAe;AACXpG,cAAQ,CAACvN,SAAT,CAAmB,UAAnB,EAA+BtB,CAA/B;AACH;;AACD6O,YAAQ,CAACvN,SAAT,CAAmB,MAAnB,EAA2BtB,CAA3B;;AACA,QAAI,OAAO+U,GAAG,CAACc,MAAX,IAAqB,OAAOd,GAAG,CAACc,MAApC,EAA4C;AACxChH,cAAQ,CAACvN,SAAT,CAAmB,SAAnB,EAA8ByT,GAAG,CAACe,QAAlC,EAA4C9V,CAA5C;AACH,KAFD,MAEO;AACH6O,cAAQ,CAACvN,SAAT,CAAmB,OAAnB,EAA4BtB,CAA5B;AACH;AACJ,GAVD;AAWA+U,KAAG,CAAChU,gBAAJ,CAAqB,OAArB,EAA8B,UAAAf,CAAC;AAAA,WAAI6O,QAAQ,CAACvN,SAAT,CAAmB,OAAnB,EAA4BtB,CAA5B,CAAJ;AAAA,GAA/B;AACA+U,KAAG,CAACgB,IAAJ;AACAlH,UAAQ,CAACkG,GAAT,GAAeA,GAAf;AACA,SAAOlG,QAAP;AACH;;;;;;;;;;;;;;;;;;;;;AClDD;;;;;;;;AAQe,SAASmH,MAAT,CAAgBC,IAAhB,EAAkC;AAAA,oCAATC,OAAS;AAATA,WAAS;AAAA;;AAC7CA,SAAO,CAACtR,OAAR,CAAgB,UAAAuR,MAAM,EAAI;AACtBC,UAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBvR,OAApB,CAA4B,UAAA4Q,GAAG,EAAI;AAC/BS,UAAI,CAACT,GAAD,CAAJ,GAAYW,MAAM,CAACX,GAAD,CAAlB;AACH,KAFD;AAGH,GAJD;AAKA,SAAOS,IAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACfD;;;;AAEA;;;;;;;;AAQe,SAASnP,KAAT,CAAewP,IAAf,EAAqB;AAChC,SAAO;AAAA,sCAAIC,IAAJ;AAAIA,UAAJ;AAAA;;AAAA,WAAa,oCAAkB;AAAA,aAAMD,IAAI,MAAJ,SAAQC,IAAR,CAAN;AAAA,KAAlB,CAAb;AAAA,GAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACZD;;;;;;;;;;;AAWe,SAASC,KAAT,CAAeC,MAAf,EAAuB;AAClC,MAAIA,MAAM,KAAKhR,SAAf,EAA0B;AACtBgR,UAAM,GAAG,aAAT;AACH;;AACD,SACIA,MAAM,GACNzZ,IAAI,CAAC0Z,MAAL,GACKC,QADL,CACc,EADd,EAEKC,SAFL,CAEe,CAFf,CAFJ;AAMH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBD;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;ACVA;;;;;;;AAOe,SAAStU,GAAT,CAAauU,MAAb,EAAqB;AAChC,MAAIC,OAAO,GAAG,CAAC/M,QAAf;AACAqM,QAAM,CAACC,IAAP,CAAYQ,MAAZ,EAAoBjS,OAApB,CAA4B,UAAAjH,CAAC,EAAI;AAC7B,QAAIkZ,MAAM,CAAClZ,CAAD,CAAN,GAAYmZ,OAAhB,EAAyB;AACrBA,aAAO,GAAGD,MAAM,CAAClZ,CAAD,CAAhB;AACH;AACJ,GAJD;AAKA,SAAOmZ,OAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACfD;;;;;;;AAOe,SAASvU,GAAT,CAAasU,MAAb,EAAqB;AAChC,MAAIE,QAAQ,GAAGC,MAAM,CAACjN,QAAD,CAArB;AACAqM,QAAM,CAACC,IAAP,CAAYQ,MAAZ,EAAoBjS,OAApB,CAA4B,UAAAjH,CAAC,EAAI;AAC7B,QAAIkZ,MAAM,CAAClZ,CAAD,CAAN,GAAYoZ,QAAhB,EAA0B;AACtBA,cAAQ,GAAGF,MAAM,CAAClZ,CAAD,CAAjB;AACH;AACJ,GAJD;AAKA,SAAOoZ,QAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfD;;;;;;;AAOA;;;IAGqB7T,Q;;;AACjB;;;AAGA,sBAAc;AAAA;;AACV;;;;;AAKA,SAAK+T,QAAL,GAAgB,IAAhB;AACH;AACD;;;;;;;;;;;uBAOGrN,K,EAAO/C,E,EAAI;AAAA;;AACV,UAAI,CAAC,KAAKoQ,QAAV,EAAoB;AAChB,aAAKA,QAAL,GAAgB,EAAhB;AACH;;AAED,UAAIA,QAAQ,GAAG,KAAKA,QAAL,CAAcrN,KAAd,CAAf;;AACA,UAAI,CAACqN,QAAL,EAAe;AACXA,gBAAQ,GAAG,KAAKA,QAAL,CAAcrN,KAAd,IAAuB,EAAlC;AACH;;AACDqN,cAAQ,CAAC/R,IAAT,CAAc2B,EAAd,EATU,CAWV;;AACA,aAAO;AACHzL,YAAI,EAAEwO,KADH;AAEH4H,gBAAQ,EAAE3K,EAFP;AAGH4D,UAAE,EAAE,YAACzK,CAAD,EAAI6G,EAAJ;AAAA,iBAAW,KAAI,CAAC4D,EAAL,CAAQzK,CAAR,EAAW6G,EAAX,CAAX;AAAA;AAHD,OAAP;AAKH;AAED;;;;;;;;;;uBAOG+C,K,EAAO/C,E,EAAI;AACV,UAAI,CAAC,KAAKoQ,QAAV,EAAoB;AAChB;AACH;;AAED,UAAMA,QAAQ,GAAG,KAAKA,QAAL,CAAcrN,KAAd,CAAjB;AACA,UAAIjM,CAAJ;;AACA,UAAIsZ,QAAJ,EAAc;AACV,YAAIpQ,EAAJ,EAAQ;AACJ,eAAKlJ,CAAC,GAAGsZ,QAAQ,CAACna,MAAT,GAAkB,CAA3B,EAA8Ba,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,gBAAIsZ,QAAQ,CAACtZ,CAAD,CAAR,IAAekJ,EAAnB,EAAuB;AACnBoQ,sBAAQ,CAACC,MAAT,CAAgBvZ,CAAhB,EAAmB,CAAnB;AACH;AACJ;AACJ,SAND,MAMO;AACHsZ,kBAAQ,CAACna,MAAT,GAAkB,CAAlB;AACH;AACJ;AACJ;AAED;;;;;;4BAGQ;AACJ,WAAKma,QAAL,GAAgB,IAAhB;AACH;AAED;;;;;;;;;;;yBAQKrN,K,EAAOuN,O,EAAS;AAAA;;AACjB,UAAMtQ,EAAE,GAAG,SAALA,EAAK,GAAa;AAAA,0CAAT0P,IAAS;AAATA,cAAS;AAAA;;AACpB;AACAY,eAAO,CAACC,KAAR,CAAc,MAAd,EAAoBb,IAApB;AACA;;AACAc,kBAAU,CAAC,YAAM;AACb,gBAAI,CAAC5M,EAAL,CAAQb,KAAR,EAAe/C,EAAf;AACH,SAFS,EAEP,CAFO,CAAV;AAGH,OAPD;;AAQA,aAAO,KAAKmC,EAAL,CAAQY,KAAR,EAAe/C,EAAf,CAAP;AACH;AAED;;;;;;;;;8BAMU+C,K,EAAgB;AAAA,yCAAN2M,IAAM;AAANA,YAAM;AAAA;;AACtB,UAAI,CAAC,KAAKU,QAAV,EAAoB;AAChB;AACH;;AACD,UAAMA,QAAQ,GAAG,KAAKA,QAAL,CAAcrN,KAAd,CAAjB;AACAqN,cAAQ,IACJA,QAAQ,CAACrS,OAAT,CAAiB,UAAAiC,EAAE,EAAI;AACnBA,UAAE,MAAF,SAAM0P,IAAN;AACH,OAFD,CADJ;AAIH;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHL;;;;;;AAMA,SAASe,mBAAT,CAA6B1N,KAA7B,EAAoC;AAChCA,OAAK,CAAC2N,eAAN;AACAnY,UAAQ,CAACoY,IAAT,CAAczH,mBAAd,CAAkC,OAAlC,EAA2CuH,mBAA3C,EAAgE,IAAhE;AACH;AAED;;;;;;;AAKe,SAASG,YAAT,CAAsBZ,MAAtB,EAA8B;AACzCzX,UAAQ,CAACoY,IAAT,CAAczW,gBAAd,CAA+B,OAA/B,EAAwCuW,mBAAxC,EAA6D,IAA7D;AACH;;;;;;;;;;;;;;;;;;;;;AClBD;;AACA;;;;;;eAMe,CACXI,MAAM,CAACC,qBAAP,IACAD,MAAM,CAACE,2BADP,IAEAF,MAAM,CAACG,wBAFP,IAGAH,MAAM,CAACI,sBAHP,IAIAJ,MAAM,CAACK,uBAJP,IAKC,UAACvG,QAAD,EAAWlW,OAAX;AAAA,SAAuB+b,UAAU,CAAC7F,QAAD,EAAW,OAAO,EAAlB,CAAjC;AAAA,CANU,EAObwG,IAPa,CAORN,MAPQ,C;;;;;;;;;;;;;;;;;;;;;;ACPf;;;;;;;;AAQe,SAASxY,KAAT,CAAeH,EAAf,EAAmBC,MAAnB,EAA2B;AACtCoX,QAAM,CAACC,IAAP,CAAYrX,MAAZ,EAAoB4F,OAApB,CAA4B,UAAAqT,IAAI,EAAI;AAChC,QAAIlZ,EAAE,CAACG,KAAH,CAAS+Y,IAAT,MAAmBjZ,MAAM,CAACiZ,IAAD,CAA7B,EAAqC;AACjClZ,QAAE,CAACG,KAAH,CAAS+Y,IAAT,IAAiBjZ,MAAM,CAACiZ,IAAD,CAAvB;AACH;AACJ,GAJD;AAKA,SAAOlZ,EAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACfD;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;IASMmZ,W;;;;;;AACF;;;;;;;;;;2BAUOvZ,M,EAAQ,CAAE;AACjB;;;;;;;;;AAMA,uBAAYA,MAAZ,EAAoBmQ,EAApB,EAAwB;AAAA;AAAE;AAC1B;;;;;;;;;;2BAMO,CAAE;AACT;;;;;;;;;8BAMU,CAAE;;;;;AAGhB;;;;;;;;;;;;;;;;;;;;;;;IAqBqBqJ,U;;;;;;;;AACjB;;AA8CA;;AAMA;;;;;;;2BAOcxZ,M,EAAQ;AAClB,UAAMoQ,UAAU,GAAG,IAAIoJ,UAAJ,CAAexZ,MAAf,CAAnB;AACA,aAAOoQ,UAAU,CAACqJ,IAAX,EAAP;AACH;AAED;;;;;;;;;;;AA+BA;;;;;;;;AAQA,sBAAYzZ,MAAZ,EAAoB;AAAA;;AAAA;;AAChB;AACA;;;;;AAFgB,UAtGpB0Z,aAsGoB,GAtGJ;AACZC,kBAAY,EAAE,IADF;AAEZC,0BAAoB,EAAE,IAFV;AAGZ5P,eAAS,EAAE,CAHC;AAIZhG,gBAAU,EAAE,IAJA;AAKZuO,aAAO,EAAE,UALG;AAMZsH,qBAAe,EAAE,IANL;AAOZpR,eAAS,EAAE,CAPC;AAQZvB,YAAM,EAAE,IARI;AASZnH,eAAS,EAAE,IATC;AAUZ6F,iBAAW,EAAE,MAVD;AAWZF,iBAAW,EAAE,CAXD;AAYZoU,mBAAa,EAAE,IAZH;AAaZzQ,cAAQ,EAAE,IAbE;AAcZtI,gBAAU,EAAE,IAdA;AAeZgZ,iBAAW,EAAE,KAfD;AAgBZ/c,YAAM,EAAE,GAhBI;AAiBZkE,mBAAa,EAAE,KAjBH;AAkBZwB,cAAQ,EAAE,IAlBE;AAmBZsX,mBAAa,EAAE,IAnBH;AAoBZvV,oBAAc,EAAE,IApBJ;AAqBZwV,oBAAc,EAAE,IArBJ;AAsBZxP,mBAAa,EAAE,KAtBH;AAuBZd,eAAS,EAAE,OAvBC;AAwBZuQ,iBAAW,EAAE,EAxBD;AAyBZxR,eAAS,EAAE,KAzBC;AA0BZyR,mBAAa,EAAE,KA1BH;AA2BZla,gBAAU,EACN8Y,MAAM,CAACqB,gBAAP,IAA2BC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WA5B9C;AA6BZC,aAAO,EAAE,EA7BG;AA8BZjd,mBAAa,EAAE,MA9BH;AA+BZ4O,iCAA2B,EAAE,IA/BjB;AAgCZsO,cAAQ,EAAEjW,eAhCE;AAiCZkW,gBAAU,EAAE,KAjCA;AAkCZ3Y,SAAG,EAAE,KAlCO;AAmCZf,kBAAY,EAAE,KAnCF;AAoCZ2Z,gBAAU,EAAE,CApCA;AAqCZrS,mBAAa,EAAE,KArCH;AAsCZhL,eAAS,EAAE,MAtCC;AAuCZ8Y,SAAG,EAAE,EAvCO;AAwCZ;AACAtF,gBAAU,EAAE,GAzCA;AA0CZ/T,WAAK,EAAE;AA1CK,KAsGI;AAAA,UAxDpB6d,QAwDoB,GAxDT;AACP1R,kBAAY,EAAZA,qBADO;AAEPkD,cAAQ,EAARA;AAFO,KAwDS;AAAA,UApBpB9L,IAoBoB,GApBbA,IAoBa;AAMhB,UAAKN,MAAL,GAAcM,IAAI,CAAC+W,MAAL,CAAY,EAAZ,EAAgB,MAAKqC,aAArB,EAAoC1Z,MAApC,CAAd;AAEA;;AACA,UAAKD,SAAL,GACI,YAAY,OAAOC,MAAM,CAACD,SAA1B,GACMU,QAAQ,CAACoK,aAAT,CAAuB,MAAK7K,MAAL,CAAYD,SAAnC,CADN,GAEM,MAAKC,MAAL,CAAYD,SAHtB;;AAKA,QAAI,CAAC,MAAKA,SAAV,EAAqB;AACjB,YAAM,IAAImM,KAAJ,CAAU,6BAAV,CAAN;AACH;;AAED,QAAI,MAAKlM,MAAL,CAAYia,cAAZ,IAA8B,IAAlC,EAAwC;AACpC;AACA,YAAKA,cAAL,GAAsB,MAAKla,SAA3B;AACH,KAHD,MAGO,IAAI,OAAO,MAAKC,MAAL,CAAYia,cAAnB,IAAqC,QAAzC,EAAmD;AACtD;AACA,YAAKA,cAAL,GAAsBxZ,QAAQ,CAACoK,aAAT,CAClB,MAAK7K,MAAL,CAAYia,cADM,CAAtB;AAGH,KALM,MAKA;AACH;AACA,YAAKA,cAAL,GAAsB,MAAKja,MAAL,CAAYia,cAAlC;AACH;;AAED,QAAI,CAAC,MAAKA,cAAV,EAA0B;AACtB,YAAM,IAAI/N,KAAJ,CAAU,mCAAV,CAAN;AACH;;AAED,QAAI,MAAKlM,MAAL,CAAYyE,cAAZ,IAA8B,CAAlC,EAAqC;AACjC,YAAM,IAAIyH,KAAJ,CAAU,uCAAV,CAAN;AACH,KAFD,MAEO,IAAI,MAAKlM,MAAL,CAAYyE,cAAZ,GAA6B,CAA7B,IAAkC,CAAtC,EAAyC;AAC5C,YAAM,IAAIyH,KAAJ,CAAU,uCAAV,CAAN;AACH;;AAED,QAAI,MAAKlM,MAAL,CAAY+B,GAAZ,KAAoB,IAAxB,EAA8B;AAC1BzB,UAAI,CAACC,KAAL,CAAW,MAAKR,SAAhB,EAA2B;AAAE8a,iBAAS,EAAE;AAAb,OAA3B;AACH;;AAED,QAAI,MAAK7a,MAAL,CAAY6Z,eAAhB,EAAiC;AAC7B,YAAKiB,kBAAL,CAAwB,MAAK9a,MAAL,CAAY6Z,eAApC;AACH;AAED;;;;;;;AAKA,UAAKkB,WAAL,GAAmB,CAAnB;AAEA;;;;;AAIA,UAAKC,OAAL,GAAe,KAAf;AAEA;;;;;;AAKA,UAAKC,SAAL,GAAiB,EAAjB;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmB,IAAnB;AACA;;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA;;AACA,UAAKtK,MAAL,GAAc,IAAd;AACA;;AACA,UAAK0B,OAAL,GAAe,IAAf;AACA;;AACA,UAAK6I,SAAL,GAAiB,IAAjB,CAjFgB,CAmFhB;;AACA,QAAI,OAAO,MAAKpb,MAAL,CAAYya,QAAnB,KAAgC,UAApC,EAAgD;AAC5C,YAAM,IAAIvO,KAAJ,CAAU,+BAAV,CAAN;AACH;AACD;;;;;AAGA,UAAKpM,MAAL,GAAc,MAAKE,MAAL,CAAYya,QAA1B;AACA;;;;AAGA,UAAKY,OAAL,GAAe,MAAKT,QAAL,CAAc,MAAK5a,MAAL,CAAYuS,OAA1B,CAAf;AAEA;;;;AAGA,UAAK+I,qBAAL,GAA6B,EAA7B;AACA;;AACA,UAAKC,WAAL,GAAmB,KAAnB;AAEA;;;;;;;AAMA,UAAKrK,OAAL,GAAe,KAAf,CA7GgB,CA+GhB;AACA;AACA;;AACA,QAAIsK,SAAS,GAAG,CAAhB;AACA,UAAKC,SAAL,GAAiBnb,IAAI,CAACob,QAAL,CACb,YAAM;AACF,UACIF,SAAS,IAAI,MAAK3K,MAAL,CAAY1Q,OAAZ,CAAoBmD,WAAjC,IACA,CAAC,MAAKtD,MAAL,CAAYgB,YAFjB,EAGE;AACEwa,iBAAS,GAAG,MAAK3K,MAAL,CAAY1Q,OAAZ,CAAoBmD,WAAhC;;AACA,cAAKuN,MAAL,CAAYlO,SAAZ,CAAsB,QAAtB;AACH;AACJ,KATY,EAUb,OAAO,MAAK3C,MAAL,CAAY0a,UAAnB,KAAkC,QAAlC,GACM,MAAK1a,MAAL,CAAY0a,UADlB,GAEM,GAZO,CAAjB;AAeA;AACH;AAED;;;;;;;;;;;;2BAQO;AACH,WAAKiB,eAAL,CAAqB,KAAK3b,MAAL,CAAYwa,OAAjC;AACA,WAAKoB,YAAL;AACA,WAAKC,aAAL;AACA,WAAKC,eAAL;AACA,aAAO,IAAP;AACH;AAED;;;;;;;;;;;oCAQgBtB,O,EAAS;AAAA;;AACrB;AACAA,aAAO,CAACvU,OAAR,CAAgB,UAAA8V,MAAM;AAAA,eAAI,MAAI,CAACC,SAAL,CAAeD,MAAf,CAAJ;AAAA,OAAtB,EAFqB,CAIrB;;AACAvB,aAAO,CAACvU,OAAR,CAAgB,UAAA8V,MAAM,EAAI;AACtB;AACA;AACA,YAAI,CAACA,MAAM,CAAC/L,SAAZ,EAAuB;AACnB,gBAAI,CAACiM,UAAL,CAAgBF,MAAM,CAACtf,IAAvB;AACH;AACJ,OAND;AAOA,WAAKkG,SAAL,CAAe,oBAAf,EAAqC6X,OAArC;AACA,aAAO,IAAP;AACH;AAED;;;;;;;;;uCAMmB;AACf,aAAO,KAAKc,qBAAZ;AACH;AAED;;;;;;;;;;;8BAQUS,M,EAAQ;AAAA;;AACd,UAAI,CAACA,MAAM,CAACtf,IAAZ,EAAkB;AACd,cAAM,IAAIyP,KAAJ,CAAU,8BAAV,CAAN;AACH;;AACD,UAAI,CAAC6P,MAAM,CAAC7L,QAAZ,EAAsB;AAClB,cAAM,IAAIhE,KAAJ,kBACQ6P,MAAM,CAACtf,IADf,0CAAN;AAGH,OARa,CAUd;;;AACA,UAAIsf,MAAM,CAAC9L,WAAX,EAAwB;AACpBwH,cAAM,CAACC,IAAP,CAAYqE,MAAM,CAAC9L,WAAnB,EAAgChK,OAAhC,CAAwC,UAAAiW,gBAAgB,EAAI;AACxD;;;;AAIA,gBAAI,CAACA,gBAAD,CAAJ,GAAyBH,MAAM,CAAC9L,WAAP,CAAmBiM,gBAAnB,CAAzB;AACH,SAND;AAOH;;AAED,UAAMC,QAAQ,GAAGJ,MAAM,CAAC7L,QAAxB,CArBc,CAuBd;;AACA,UAAMkM,qBAAqB,GAAG3E,MAAM,CAAC4E,mBAAP,CAC1B/b,IAAI,CAACiE,QAAL,CAAc+X,SADY,CAA9B;AAGAF,2BAAqB,CAACnW,OAAtB,CAA8B,UAAA4Q,GAAG,EAAI;AACjCsF,gBAAQ,CAACG,SAAT,CAAmBzF,GAAnB,IAA0BvW,IAAI,CAACiE,QAAL,CAAc+X,SAAd,CAAwBzF,GAAxB,CAA1B;AACH,OAFD;AAIA;;;;;;AAKA,WAAKkF,MAAM,CAACtf,IAAZ,IAAoB,IAAI0f,QAAJ,CAAaJ,MAAM,CAAC/b,MAAP,IAAiB,EAA9B,EAAkC,IAAlC,CAApB;AACA,WAAK2C,SAAL,CAAe,cAAf,EAA+BoZ,MAAM,CAACtf,IAAtC;AACA,aAAO,IAAP;AACH;AAED;;;;;;;;;;;+BAQWA,I,EAAM;AACb,UAAI,CAAC,KAAKA,IAAL,CAAL,EAAiB;AACb,cAAM,IAAIyP,KAAJ,kBAAoBzP,IAApB,8BAAN;AACH;;AACD,UAAI,KAAK6e,qBAAL,CAA2B7e,IAA3B,CAAJ,EAAsC;AAClC;AACA,aAAK8f,aAAL,CAAmB9f,IAAnB;AACH;;AACD,WAAKA,IAAL,EAAWgd,IAAX;AACA,WAAK6B,qBAAL,CAA2B7e,IAA3B,IAAmC,IAAnC;AACA,WAAKkG,SAAL,CAAe,oBAAf,EAAqClG,IAArC;AACA,aAAO,IAAP;AACH;AAED;;;;;;;;;;;kCAQcA,I,EAAM;AAChB,UAAI,CAAC,KAAKA,IAAL,CAAL,EAAiB;AACb,cAAM,IAAIyP,KAAJ,kBACQzP,IADR,sDAAN;AAGH;;AACD,UAAI,CAAC,KAAK6e,qBAAL,CAA2B7e,IAA3B,CAAL,EAAuC;AACnC,cAAM,IAAIyP,KAAJ,kBACQzP,IADR,6CAAN;AAGH;;AACD,UAAI,OAAO,KAAKA,IAAL,EAAWiK,OAAlB,KAA8B,UAAlC,EAA8C;AAC1C,cAAM,IAAIwF,KAAJ,kBAAoBzP,IAApB,wCAAN;AACH;;AAED,WAAKA,IAAL,EAAWiK,OAAX;AACA,aAAO,KAAK4U,qBAAL,CAA2B7e,IAA3B,CAAP;AACA,WAAKkG,SAAL,CAAe,kBAAf,EAAmClG,IAAnC;AACA,aAAO,IAAP;AACH;AAED;;;;;;;;;wCAMoB;AAAA;;AAChBgb,YAAM,CAACC,IAAP,CAAY,KAAK4D,qBAAjB,EAAwCrV,OAAxC,CAAgD,UAAAxJ,IAAI;AAAA,eAChD,MAAI,CAAC8f,aAAL,CAAmB9f,IAAnB,CADgD;AAAA,OAApD;AAGH;AAED;;;;;;;;;mCAMe;AAAA;;AACX,WAAKoU,MAAL,GAAc,IAAI,KAAK/Q,MAAT,CAAgB,KAAKC,SAArB,EAAgC,KAAKC,MAArC,CAAd;AACA,WAAK6Q,MAAL,CAAY4I,IAAZ;AACA,WAAK9W,SAAL,CAAe,gBAAf,EAAiC,KAAKkO,MAAtC;;AAEA,UAAI,KAAK7Q,MAAL,CAAY0a,UAAZ,KAA2B,KAA/B,EAAsC;AAClC3B,cAAM,CAAC3W,gBAAP,CAAwB,QAAxB,EAAkC,KAAKqZ,SAAvC,EAAkD,IAAlD;AACA1C,cAAM,CAAC3W,gBAAP,CAAwB,mBAAxB,EAA6C,KAAKqZ,SAAlD,EAA6D,IAA7D;AACH;;AAED,WAAK5K,MAAL,CAAYxG,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC3B,cAAI,CAACmS,UAAL;;AACA,cAAI,CAAC3L,MAAL,CAAY1U,QAAZ,CAAqB,MAAI,CAACoW,OAAL,CAAakK,iBAAb,EAArB;AACH,OAHD,EAVW,CAeX;;AACA,WAAK5L,MAAL,CAAYxG,EAAZ,CAAe,OAAf,EAAwB,UAAChJ,CAAD,EAAIlF,QAAJ,EAAiB;AACrCuc,kBAAU,CAAC;AAAA,iBAAM,MAAI,CAACjN,MAAL,CAAYtP,QAAZ,CAAN;AAAA,SAAD,EAA8B,CAA9B,CAAV;AACH,OAFD,EAhBW,CAoBX;;AACA,WAAK0U,MAAL,CAAYxG,EAAZ,CAAe,QAAf,EAAyB,UAAAhJ,CAAC,EAAI;AAC1B,YAAI,MAAI,CAACrB,MAAL,CAAYma,aAAhB,EAA+B;AAC3B,gBAAI,CAACqC,UAAL;AACH;;AACD,cAAI,CAAC7Z,SAAL,CAAe,QAAf,EAAyBtB,CAAzB;AACH,OALD;AAMH;AAED;;;;;;;;;oCAMgB;AAAA;;AACZ,UAAI,KAAKkR,OAAT,EAAkB;AACd,aAAKA,OAAL,CAAa7L,OAAb;AACH,OAHW,CAKZ;;;AACA,UAAI,KAAK1G,MAAL,CAAYuS,OAAZ,IAAuB,cAA3B,EAA2C;AACvC,aAAKvS,MAAL,CAAYuS,OAAZ,GAAsB,cAAtB;AACH;;AAED,UACI,KAAKvS,MAAL,CAAYuS,OAAZ,IAAuB,UAAvB,IACA,CAAC,KAAK8I,OAAL,CAAaiB,SAAb,CAAuBI,gBAAvB,CAAwC9T,IAAxC,CAA6C,IAA7C,CAFL,EAGE;AACE,aAAK5I,MAAL,CAAYuS,OAAZ,GAAsB,cAAtB;AACH;;AAED,WAAKA,OAAL,GAAe,IAAI,KAAK8I,OAAT,CAAiB,KAAKrb,MAAtB,CAAf;AACA,WAAKuS,OAAL,CAAakH,IAAb;AACA,WAAK9W,SAAL,CAAe,iBAAf,EAAkC,KAAK4P,OAAvC;AAEA,WAAKA,OAAL,CAAalI,EAAb,CAAgB,QAAhB,EAA0B,YAAM;AAC5B,cAAI,CAACwG,MAAL,CAAY1U,QAAZ,CAAqB,MAAI,CAACoW,OAAL,CAAakK,iBAAb,EAArB;;AACA,cAAI,CAAC9Z,SAAL,CAAe,QAAf;AACH,OAHD;AAIA,WAAK4P,OAAL,CAAalI,EAAb,CAAgB,MAAhB,EAAwB;AAAA,eAAM,MAAI,CAAC1H,SAAL,CAAe,MAAf,CAAN;AAAA,OAAxB;AACA,WAAK4P,OAAL,CAAalI,EAAb,CAAgB,OAAhB,EAAyB;AAAA,eAAM,MAAI,CAAC1H,SAAL,CAAe,OAAf,CAAN;AAAA,OAAzB;AAEA,WAAK4P,OAAL,CAAalI,EAAb,CAAgB,cAAhB,EAAgC,UAAAwB,IAAI,EAAI;AACpC,cAAI,CAACgF,MAAL,CAAY1U,QAAZ,CAAqB,MAAI,CAACoW,OAAL,CAAakK,iBAAb,EAArB;;AACA,cAAI,CAAC9Z,SAAL,CAAe,cAAf,EAA+BkJ,IAA/B;AACH,OAHD;AAIA,WAAK0G,OAAL,CAAalI,EAAb,CAAgB,MAAhB,EAAwB,YAAM;AAC1B,cAAI,CAACwG,MAAL,CAAY1U,QAAZ,CAAqB,MAAI,CAACoW,OAAL,CAAakK,iBAAb,EAArB;AACH,OAFD;AAGH;AAED;;;;;;;;sCAKkB;AACd,UAAI,KAAKzc,MAAL,CAAYma,aAAhB,EAA+B;AAC3B,aAAKiB,SAAL,GAAiB,IAAI/O,kBAAJ,EAAjB;AACH;AACJ;AAED;;;;;;;;;kCAMc;AACV,aAAO,KAAKkG,OAAL,CAAajH,WAAb,EAAP;AACH;AAED;;;;;;;;;qCAMiB;AACb,aAAO,KAAKiH,OAAL,CAAanI,cAAb,EAAP;AACH;AAED;;;;;;;;;mCAMeuS,O,EAAS;AACpB,UAAIA,OAAO,IAAI,KAAKrR,WAAL,EAAf,EAAmC;AAC/B,aAAKG,MAAL,CAAY,CAAZ;AACH,OAFD,MAEO;AACH,aAAKA,MAAL,CAAYkR,OAAO,GAAG,KAAKrR,WAAL,EAAtB;AACH;AACJ;AAED;;;;;;;;;;;;;;;yBAYKjP,K,EAAOC,G,EAAK;AAAA;;AACb,WAAKqG,SAAL,CAAe,aAAf,EAA8B;AAAA,eAAM,MAAI,CAAC6G,IAAL,CAAUnN,KAAV,EAAiBC,GAAjB,CAAN;AAAA,OAA9B;AACA,aAAO,KAAKiW,OAAL,CAAa/I,IAAb,CAAkBnN,KAAlB,EAAyBC,GAAzB,CAAP;AACH;AAED;;;;;;;;;4BAMQ;AACJ,UAAI,CAAC,KAAKiW,OAAL,CAAapI,QAAb,EAAL,EAA8B;AAC1B,eAAO,KAAKoI,OAAL,CAAa9I,KAAb,EAAP;AACH;AACJ;AAED;;;;;;;;;gCAMY;AACR,aAAO,KAAK8I,OAAL,CAAapI,QAAb,KAA0B,KAAKX,IAAL,EAA1B,GAAwC,KAAKC,KAAL,EAA/C;AACH;AAED;;;;;;;;;gCAMY;AACR,aAAO,CAAC,KAAK8I,OAAL,CAAapI,QAAb,EAAR;AACH;AAED;;;;;;;;;;iCAOawS,O,EAAS;AAClB,WAAKC,IAAL,CAAU,CAACD,OAAD,IAAY,CAAC,KAAK3c,MAAL,CAAY2a,UAAnC;AACH;AAED;;;;;;;;;;gCAOYgC,O,EAAS;AACjB,WAAKC,IAAL,CAAUD,OAAO,IAAI,KAAK3c,MAAL,CAAY2a,UAAjC;AACH;AAED;;;;;;;;;;;;yBASKlX,M,EAAQ;AACT,UAAM4F,QAAQ,GAAG,KAAKiC,WAAL,MAAsB,CAAvC;AACA,UAAI1K,QAAQ,GAAG,KAAKwJ,cAAL,MAAyB,CAAxC;AACAxJ,cAAQ,GAAGvC,IAAI,CAACsF,GAAL,CAAS,CAAT,EAAYtF,IAAI,CAACuF,GAAL,CAASyF,QAAT,EAAmBzI,QAAQ,IAAI6C,MAAM,IAAI,CAAd,CAA3B,CAAZ,CAAX;AACA,WAAKoZ,aAAL,CAAmBjc,QAAQ,GAAGyI,QAA9B;AACH;AAED;;;;;;;;;;;kCAQclN,Q,EAAU;AACpB,WAAKsP,MAAL,CAAYtP,QAAZ;AACA,WAAK0U,MAAL,CAAYiM,QAAZ,CAAqB3gB,QAArB;AACH;AAED;;;;;;;;;;;;;2BAUOA,Q,EAAU;AAAA;;AACb;AACA,UACI,OAAOA,QAAP,KAAoB,QAApB,IACA,CAAC4gB,QAAQ,CAAC5gB,QAAD,CADT,IAEAA,QAAQ,GAAG,CAFX,IAGAA,QAAQ,GAAG,CAJf,EAKE;AACE,cAAM,IAAI+P,KAAJ,CACF,8EADE,CAAN;AAGH;;AACD,WAAKvJ,SAAL,CAAe,aAAf,EAA8B;AAAA,eAAM,MAAI,CAAC8I,MAAL,CAAYtP,QAAZ,CAAN;AAAA,OAA9B;AAEA,UAAMmN,MAAM,GAAG,KAAKiJ,OAAL,CAAapI,QAAb,EAAf,CAda,CAeb;;AACA,UAAI,CAACb,MAAL,EAAa;AACT,aAAKiJ,OAAL,CAAa9I,KAAb;AACH,OAlBY,CAmBb;;;AACA,UAAMuT,eAAe,GAAG,KAAKhd,MAAL,CAAYgB,YAApC;AACA,WAAKhB,MAAL,CAAYgB,YAAZ,GAA2B,KAA3B;AACA,WAAKuR,OAAL,CAAa9G,MAAb,CAAoBtP,QAAQ,GAAG,KAAKmP,WAAL,EAA/B;AACA,WAAKuF,MAAL,CAAY1U,QAAZ,CAAqBA,QAArB;;AAEA,UAAI,CAACmN,MAAL,EAAa;AACT,aAAKiJ,OAAL,CAAa/I,IAAb;AACH;;AACD,WAAKxJ,MAAL,CAAYgB,YAAZ,GAA2Bgc,eAA3B;AACA,WAAKra,SAAL,CAAe,MAAf,EAAuBxG,QAAvB;AACH;AAED;;;;;;;;2BAKO;AACH,WAAKsN,KAAL;AACA,WAAKgC,MAAL,CAAY,CAAZ;AACA,WAAKoF,MAAL,CAAY1U,QAAZ,CAAqB,CAArB;AACH;AAED;;;;;;;;;;;8BAQU4P,Q,EAAU;AAChB,aAAO,KAAKwG,OAAL,CAAavG,SAAb,CAAuBD,QAAvB,CAAP;AACH;AAED;;;;;;;;;;8BAOUkR,S,EAAW;AACjB,WAAK1K,OAAL,CAAarH,SAAb,CAAuB+R,SAAvB;AACA,WAAKta,SAAL,CAAe,QAAf,EAAyBsa,SAAzB;AACH;AAED;;;;;;;;;gCAMY;AACR,aAAO,KAAK1K,OAAL,CAAa2K,SAAb,EAAP;AACH;AAED;;;;;;;;;;oCAOgBxZ,I,EAAM;AAClB,WAAK6O,OAAL,CAAaxI,eAAb,CAA6BrG,IAA7B;AACH;AAED;;;;;;;;sCAKkB;AACd,aAAO,KAAK6O,OAAL,CAAa4K,eAAb,EAAP;AACH;AAED;;;;;;;;;;;iCAQa;AACT,WAAKC,OAAL,CAAa,CAAC,KAAKpC,OAAnB;AACH;AAED;;;;;;;;;;;;;4BAUQqC,I,EAAM;AACV;AACA,UAAIA,IAAI,KAAK,KAAKrC,OAAlB,EAA2B;AACvB,aAAKrY,SAAL,CAAe,MAAf,EAAuB,KAAKqY,OAA5B;AACA;AACH;;AAED,UAAIqC,IAAJ,EAAU;AACN;AACA;AACA,aAAKtC,WAAL,GAAmB,KAAKxI,OAAL,CAAa2K,SAAb,EAAnB;AACA,aAAK3K,OAAL,CAAarH,SAAb,CAAuB,CAAvB;AACA,aAAK8P,OAAL,GAAe,IAAf;AACA,aAAKrY,SAAL,CAAe,QAAf,EAAyB,CAAzB;AACH,OAPD,MAOO;AACH;AACA;AACA,aAAK4P,OAAL,CAAarH,SAAb,CAAuB,KAAK6P,WAA5B;AACA,aAAKC,OAAL,GAAe,KAAf;AACA,aAAKrY,SAAL,CAAe,QAAf,EAAyB,KAAKoY,WAA9B;AACH;;AACD,WAAKpY,SAAL,CAAe,MAAf,EAAuB,KAAKqY,OAA5B;AACH;AAED;;;;;;;;;8BAMU;AACN,aAAO,KAAKA,OAAZ;AACH;AAED;;;;;;;;;;iCAOa;AACT,aAAO,KAAKzI,OAAL,CAAa+K,OAAb,IAAwB,EAA/B;AACH;AAED;;;;;;;;mCAKe;AACX,WAAKtd,MAAL,CAAYgB,YAAZ,GAA2B,CAAC,KAAKhB,MAAL,CAAYgB,YAAxC;AACA,WAAKwb,UAAL;AACH;AAED;;;;;;;;wCAKoB;AAChB,WAAKxc,MAAL,CAAY0C,QAAZ,GAAuB,CAAC,KAAK1C,MAAL,CAAY0C,QAApC;AACH;AAED;;;;;;;;mCAKe;AACX,aAAO,KAAK1C,MAAL,CAAY1C,SAAnB;AACH;AAED;;;;;;;;;iCAMaigB,K,EAAO;AAChB,WAAKvd,MAAL,CAAY1C,SAAZ,GAAwBigB,KAAxB;AACA,WAAKf,UAAL;AACH;AAED;;;;;;;;uCAKmB;AACf,aAAO,KAAKxc,MAAL,CAAYzC,aAAnB;AACH;AAED;;;;;;;;;qCAMiBggB,K,EAAO;AACpB,WAAKvd,MAAL,CAAYzC,aAAZ,GAA4BggB,KAA5B;AACA,WAAKf,UAAL;AACH;AAED;;;;;;;;yCAKqB;AACjB,aAAO,KAAKxc,MAAL,CAAY6Z,eAAnB;AACH;AAED;;;;;;;;;uCAMmB0D,K,EAAO;AACtB,WAAKvd,MAAL,CAAY6Z,eAAZ,GAA8B0D,KAA9B;AACAjd,UAAI,CAACC,KAAL,CAAW,KAAKR,SAAhB,EAA2B;AAAEyd,kBAAU,EAAE,KAAKxd,MAAL,CAAY6Z;AAA1B,OAA3B;AACH;AAED;;;;;;;;;qCAMiB;AACb,aAAO,KAAK7Z,MAAL,CAAY4F,WAAnB;AACH;AAED;;;;;;;;;;mCAOe2X,K,EAAO;AAClB,WAAKvd,MAAL,CAAY4F,WAAZ,GAA0B2X,KAA1B;AACA,WAAK1M,MAAL,CAAYrL,YAAZ;AACH;AAED;;;;;;;;gCAKY;AACR,aAAO,KAAKxF,MAAL,CAAYhD,MAAnB;AACH;AAED;;;;;;;;;8BAMUA,M,EAAQ;AACd,WAAKgD,MAAL,CAAYhD,MAAZ,GAAqBA,MAArB;AACA,WAAK6T,MAAL,CAAYtI,SAAZ,CAAsBvL,MAAM,GAAG,KAAKgD,MAAL,CAAYC,UAA3C;AACA,WAAKuc,UAAL;AACH;AAED;;;;;;;;;iCAMa;AACT,UAAM5a,YAAY,GAAGvD,IAAI,CAACC,KAAL,CACjB,KAAKgN,WAAL,KACI,KAAKtL,MAAL,CAAYka,WADhB,GAEI,KAAKla,MAAL,CAAYC,UAHC,CAArB;AAKA,UAAM4B,WAAW,GAAG,KAAKgP,MAAL,CAAY/O,QAAZ,EAApB;AACA,UAAI/E,KAAK,GAAG6E,YAAZ,CAPS,CAQT;;AACA,UAAIvF,KAAK,GAAG,CAAZ;AACA,UAAIC,GAAG,GAAG+B,IAAI,CAACsF,GAAL,CAAStH,KAAK,GAAGwF,WAAjB,EAA8B9E,KAA9B,CAAV,CAVS,CAWT;;AACA,UACI,KAAKiD,MAAL,CAAYe,UAAZ,KACC,CAAC,KAAKf,MAAL,CAAYgB,YAAb,IAA6BY,YAAY,GAAGC,WAD7C,CADJ,EAGE;AACE9E,aAAK,GAAG8E,WAAR;AACAxF,aAAK,GAAG,CAAR;AACAC,WAAG,GAAGS,KAAN;AACH;;AAED,UAAIe,KAAJ;;AACA,UAAI,KAAKkC,MAAL,CAAYma,aAAhB,EAA+B;AAC3B,YAAMsD,SAAS,GAAG,KAAKrC,SAAL,CAAesC,mBAAf,CACd3gB,KADc,EAEdV,KAFc,EAGdC,GAHc,CAAlB;AAKA,YAAI0C,CAAJ;;AACA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGye,SAAS,CAACtf,MAA1B,EAAkCa,CAAC,EAAnC,EAAuC;AACnClB,eAAK,GAAG,KAAKyU,OAAL,CAAaoL,QAAb,CACJ5gB,KADI,EAEJ0gB,SAAS,CAACze,CAAD,CAAT,CAAa,CAAb,CAFI,EAGJye,SAAS,CAACze,CAAD,CAAT,CAAa,CAAb,CAHI,CAAR;AAKA,eAAK6R,MAAL,CAAY+M,SAAZ,CACI9f,KADJ,EAEIf,KAFJ,EAGI0gB,SAAS,CAACze,CAAD,CAAT,CAAa,CAAb,CAHJ,EAIIye,SAAS,CAACze,CAAD,CAAT,CAAa,CAAb,CAJJ;AAMH;AACJ,OApBD,MAoBO;AACH,YAAI,KAAKgB,MAAL,CAAY4R,aAAZ,KAA8B,aAAlC,EAAiD;AAC7C,cAAM5R,MAAM,GAAG;AACXD,qBAAS,EAAE,wBADA;AAEX+Q,sBAAU,EAAE,KAAK9Q,MAAL,CAAY8Q,UAFb;AAGX9T,kBAAM,EAAE,KAAKgD,MAAL,CAAYhD,MAHT;AAIXiD,sBAAU,EAAE,KAAKD,MAAL,CAAYC,UAJb;AAKX+Q,oBAAQ,EAAE,KAAKhR,MAAL,CAAYgR,QALX;AAMXY,yBAAa,EAAE;AANJ,WAAf;AASA,eAAKiM,YAAL,GAAoB,IAAI9N,oBAAJ,CAAsB/P,MAAtB,EAA8B,IAA9B,CAApB;AACA,eAAK6d,YAAL,CAAkBpE,IAAlB,GAX6C,CAa7C;;AACA,eAAK5I,MAAL,CAAYhO,QAAZ,CAAqB9F,KAArB;AACH,SAfD,MAeO;AACHe,eAAK,GAAG,KAAKyU,OAAL,CAAaoL,QAAb,CAAsB5gB,KAAtB,EAA6BV,KAA7B,EAAoCC,GAApC,CAAR;AACA,eAAKuU,MAAL,CAAY+M,SAAZ,CAAsB9f,KAAtB,EAA6Bf,KAA7B,EAAoCV,KAApC,EAA2CC,GAA3C;AACH;AACJ;;AACD,WAAKqG,SAAL,CAAe,QAAf,EAAyB7E,KAAzB,EAAgCf,KAAhC;AACH;AAED;;;;;;;;;;;;;yBAUK+gB,Q,EAAU;AACX,UAAI,CAACA,QAAL,EAAe;AACX,aAAK9d,MAAL,CAAYka,WAAZ,GAA0B,KAAKR,aAAL,CAAmBQ,WAA7C;AACA,aAAKla,MAAL,CAAYgB,YAAZ,GAA2B,KAA3B;AACH,OAHD,MAGO;AACH,aAAKhB,MAAL,CAAYka,WAAZ,GAA0B4D,QAA1B;AACA,aAAK9d,MAAL,CAAYgB,YAAZ,GAA2B,IAA3B;AACH;;AAED,WAAKwb,UAAL;AACA,WAAK3L,MAAL,CAAY1U,QAAZ,CAAqB,KAAKoW,OAAL,CAAakK,iBAAb,EAArB;AAEA,WAAK5L,MAAL,CAAYiM,QAAZ,CAAqB,KAAK1S,cAAL,KAAwB,KAAKkB,WAAL,EAA7C;AACA,WAAK3I,SAAL,CAAe,MAAf,EAAuBmb,QAAvB;AACH;AAED;;;;;;;;;oCAMgB3C,W,EAAa;AAAA;;AACzB,WAAK4C,iBAAL,CAAuB5C,WAAvB,EAAoC,UAAAvH,IAAI,EAAI;AACxC,YAAI,CAAC,MAAI,CAAC2H,WAAV,EAAuB;AACnB,gBAAI,CAACyC,iBAAL,CAAuBpK,IAAvB;AACH;AACJ,OAJD;AAKH;AAED;;;;;;;;;;sCAOkB/J,M,EAAQ;AACtB,WAAK0I,OAAL,CAAavH,IAAb,CAAkBnB,MAAlB;AACA,WAAK2S,UAAL;AACA,WAAK7Z,SAAL,CAAe,OAAf;AACA,WAAKuO,OAAL,GAAe,IAAf;AACH;AAED;;;;;;;;;6BAMS+M,I,EAAM;AAAA;;AACX;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,YAAM,CAAC9b,gBAAP,CAAwB,UAAxB,EAAoC,UAAAf,CAAC;AAAA,eAAI,OAAI,CAAC+c,UAAL,CAAgB/c,CAAhB,CAAJ;AAAA,OAArC;AACA6c,YAAM,CAAC9b,gBAAP,CAAwB,MAAxB,EAAgC,UAAAf,CAAC;AAAA,eAC7B,OAAI,CAACgd,eAAL,CAAqBhd,CAAC,CAACmC,MAAF,CAAS8a,MAA9B,CAD6B;AAAA,OAAjC;AAGAJ,YAAM,CAAC9b,gBAAP,CAAwB,OAAxB,EAAiC;AAAA,eAC7B,OAAI,CAACO,SAAL,CAAe,OAAf,EAAwB,oBAAxB,CAD6B;AAAA,OAAjC;AAGAub,YAAM,CAACK,iBAAP,CAAyBN,IAAzB;AACA,WAAKO,KAAL;AACH;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBA0BKlU,G,EAAKxM,K,EAAOyM,O,EAASlB,Q,EAAU;AAChC,WAAKmV,KAAL;;AAEA,UAAIjU,OAAJ,EAAa;AACT;AACA;AACA,YAAMkU,oBAAoB,GAAG;AACzB,yDACI,CAAC,MAAD,EAAS,UAAT,EAAqB,MAArB,EAA6BC,OAA7B,CAAqCnU,OAArC,MAAkD,CAAC,CAF9B;AAGzB,oCAA0B,CAACzM,KAHF;AAIzB,iDACI,KAAKkC,MAAL,CAAYuS,OAAZ,KAAwB,cALH;AAMzB,uCAA6B,OAAOjI,GAAP,KAAe;AANnB,SAA7B;AAQA,YAAMqU,aAAa,GAAGlH,MAAM,CAACC,IAAP,CAAY+G,oBAAZ,EAAkC/R,MAAlC,CAClB,UAAAkS,MAAM;AAAA,iBAAIH,oBAAoB,CAACG,MAAD,CAAxB;AAAA,SADY,CAAtB;;AAGA,YAAID,aAAa,CAACxgB,MAAlB,EAA0B;AACtB;AACA0gB,iBAAO,CAACC,IAAR,CACI,wEACIH,aAAa,CAACI,IAAd,CAAmB,QAAnB,CAFR,EAFsB,CAMtB;;AACAxU,iBAAO,GAAG,IAAV;AACH;AACJ;;AAED,cAAQ,KAAKvK,MAAL,CAAYuS,OAApB;AACI,aAAK,UAAL;AACI,iBAAO,KAAKyM,UAAL,CAAgB1U,GAAhB,EAAqBxM,KAArB,EAA4BuL,QAA5B,CAAP;;AACJ,aAAK,cAAL;AACI,iBAAO,KAAK4V,gBAAL,CAAsB3U,GAAtB,EAA2BxM,KAA3B,EAAkCyM,OAAlC,EAA2ClB,QAA3C,CAAP;AAJR;AAMH;AAED;;;;;;;;;;;;+BASWiB,G,EAAKxM,K,EAAOuL,Q,EAAU;AAAA;;AAC7B,UAAM2B,IAAI,GAAG,SAAPA,IAAO,CAAAkU,MAAM,EAAI;AACnB,YAAIA,MAAJ,EAAY;AACR,iBAAI,CAACjE,SAAL,CAAe1U,IAAf,CAAoB,OAAI,CAAC4K,IAAL,CAAU,OAAV,EAAmB+N,MAAnB,CAApB;AACH;;AACD,eAAO,OAAI,CAACC,cAAL,CAAoB7U,GAApB,EAAyB,UAAAsJ,IAAI;AAAA,iBAAI,OAAI,CAACyK,eAAL,CAAqBzK,IAArB,CAAJ;AAAA,SAA7B,CAAP;AACH,OALD;;AAOA,UAAI9V,KAAJ,EAAW;AACP,aAAKyU,OAAL,CAAa6M,QAAb,CAAsBthB,KAAtB,EAA6BuL,QAA7B;AACA,aAAKmT,UAAL;AACA,aAAKvB,SAAL,CAAe1U,IAAf,CAAoB,KAAK4K,IAAL,CAAU,aAAV,EAAyBnG,IAAzB,CAApB;AACH,OAJD,MAIO;AACH,eAAOA,IAAI,EAAX;AACH;AACJ;AAED;;;;;;;;;;;;;;;qCAYiBqU,Q,EAAUvhB,K,EAAOyM,O,EAASlB,Q,EAAU;AAAA;;AACjD,UAAIiB,GAAG,GAAG+U,QAAV;;AAEA,UAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,aAAK9M,OAAL,CAAavH,IAAb,CAAkBV,GAAlB,EAAuB,KAAK2P,cAA5B,EAA4Cnc,KAA5C,EAAmDyM,OAAnD;AACH,OAFD,MAEO;AACH,YAAMQ,GAAG,GAAGsU,QAAZ;AACA,aAAK9M,OAAL,CAAa+M,OAAb,CAAqBvU,GAArB,EAA0BjN,KAA1B,EAFG,CAIH;AACA;;AACAwM,WAAG,GAAGS,GAAG,CAACJ,GAAV;AACH;;AAED,WAAKsQ,SAAL,CAAe1U,IAAf,CACI,KAAKgM,OAAL,CAAapB,IAAb,CAAkB,SAAlB,EAA6B,YAAM;AAC/B,eAAI,CAACqL,UAAL;;AACA,eAAI,CAAC7Z,SAAL,CAAe,OAAf;;AACA,eAAI,CAACuO,OAAL,GAAe,IAAf;AACH,OAJD,CADJ,EAMI,KAAKqB,OAAL,CAAapB,IAAb,CAAkB,OAAlB,EAA2B,UAAAoO,GAAG;AAAA,eAAI,OAAI,CAAC5c,SAAL,CAAe,OAAf,EAAwB4c,GAAxB,CAAJ;AAAA,OAA9B,CANJ,EAdiD,CAuBjD;AACA;AACA;;AACA,UAAIzhB,KAAJ,EAAW;AACP,aAAKyU,OAAL,CAAa6M,QAAb,CAAsBthB,KAAtB,EAA6BuL,QAA7B;AACH;;AAED,UACI,CAAC,CAACvL,KAAD,IAAU,KAAKkC,MAAL,CAAY+Z,WAAvB,KACA,KAAKxH,OAAL,CAAamK,gBAAb,EAFJ,EAGE;AACE,aAAKyC,cAAL,CAAoB7U,GAApB,EAAyB,UAAA6Q,WAAW,EAAI;AACpC,iBAAI,CAAC4C,iBAAL,CAAuB5C,WAAvB,EAAoC,UAAAtR,MAAM,EAAI;AAC1C,mBAAI,CAAC0I,OAAL,CAAa1I,MAAb,GAAsBA,MAAtB;;AACA,mBAAI,CAAC0I,OAAL,CAAa6M,QAAb,CAAsB,IAAtB;;AACA,mBAAI,CAAC5C,UAAL;;AACA,mBAAI,CAAC7Z,SAAL,CAAe,gBAAf;AACH,WALD;AAMH,SAPD;AAQH;AACJ;AAED;;;;;;;;;;sCAOkBwY,W,EAAatI,Q,EAAU;AAAA;;AACrC,WAAKsI,WAAL,GAAmBA,WAAnB;AAEA,WAAK5I,OAAL,CAAawL,iBAAb,CACI5C,WADJ,EAEI,UAAAvH,IAAI,EAAI;AACJ;AACA;AACA,YAAI,CAAC,OAAI,CAAC2H,WAAN,IAAqB,OAAI,CAACJ,WAAL,IAAoBA,WAA7C,EAA0D;AACtDtI,kBAAQ,CAACe,IAAD,CAAR;AACA,iBAAI,CAACuH,WAAL,GAAmB,IAAnB;AACH;AACJ,OATL,EAUI;AAAA,eAAM,OAAI,CAACxY,SAAL,CAAe,OAAf,EAAwB,4BAAxB,CAAN;AAAA,OAVJ;AAYH;AAED;;;;;;;;;;;mCAQe2H,G,EAAKuI,Q,EAAU;AAAA;;AAC1B,UAAMc,IAAI,GAAGrT,IAAI,CAACqT,IAAL,CAAU;AACnBrJ,WAAG,EAAEA,GADc;AAEnBmM,oBAAY,EAAE,aAFK;AAGnBL,WAAG,EAAE,KAAKpW,MAAL,CAAYoW;AAHE,OAAV,CAAb;AAMA,WAAK8E,WAAL,GAAmBvH,IAAnB;AAEA,WAAKsH,SAAL,CAAe1U,IAAf,CACIoN,IAAI,CAACtJ,EAAL,CAAQ,UAAR,EAAoB,UAAAhJ,CAAC,EAAI;AACrB,eAAI,CAAC+c,UAAL,CAAgB/c,CAAhB;AACH,OAFD,CADJ,EAIIsS,IAAI,CAACtJ,EAAL,CAAQ,SAAR,EAAmB,UAACuJ,IAAD,EAAOvS,CAAP,EAAa;AAC5BwR,gBAAQ,CAACe,IAAD,CAAR;AACA,eAAI,CAACsH,WAAL,GAAmB,IAAnB;AACH,OAHD,CAJJ,EAQIvH,IAAI,CAACtJ,EAAL,CAAQ,OAAR,EAAiB,UAAAhJ,CAAC,EAAI;AAClB,eAAI,CAACsB,SAAL,CAAe,OAAf,EAAwB,gBAAgBtB,CAAC,CAACmC,MAAF,CAASuQ,UAAjD;;AACA,eAAI,CAACmH,WAAL,GAAmB,IAAnB;AACH,OAHD,CARJ;AAcA,aAAOvH,IAAP;AACH;AAED;;;;;;;;;;+BAOWtS,C,EAAG;AACV,UAAIme,eAAJ;;AACA,UAAIne,CAAC,CAAC0V,gBAAN,EAAwB;AACpByI,uBAAe,GAAGne,CAAC,CAAC2V,MAAF,GAAW3V,CAAC,CAAC4V,KAA/B;AACH,OAFD,MAEO;AACH;AACA;AACAuI,uBAAe,GAAGne,CAAC,CAAC2V,MAAF,IAAY3V,CAAC,CAAC2V,MAAF,GAAW,OAAvB,CAAlB;AACH;;AACD,WAAKrU,SAAL,CAAe,SAAf,EAA0BtE,IAAI,CAACC,KAAL,CAAWkhB,eAAe,GAAG,GAA7B,CAA1B,EAA6Dne,CAAC,CAACmC,MAA/D;AACH;AAED;;;;;;;;;;;;;;8BAWUrF,M,EAAQshB,Q,EAAUC,Q,EAAUrjB,K,EAAO;AACzC8B,YAAM,GAAGA,MAAM,IAAI,IAAnB;AACA9B,WAAK,GAAGA,KAAK,IAAI,CAAjB;AACAojB,cAAQ,GAAGA,QAAQ,IAAI,KAAvB;AACAC,cAAQ,GAAGA,QAAQ,IAAI,KAAvB;AACA,UAAM5hB,KAAK,GAAG,KAAKyU,OAAL,CAAaoL,QAAb,CAAsBxf,MAAtB,EAA8B9B,KAA9B,CAAd;AACA,UAAMuQ,GAAG,GAAG,GAAG7D,GAAH,CAAOH,IAAP,CACR9K,KADQ,EAER,UAAA+K,GAAG;AAAA,eAAIxK,IAAI,CAACC,KAAL,CAAWuK,GAAG,GAAG4W,QAAjB,IAA6BA,QAAjC;AAAA,OAFK,CAAZ;AAIA,UAAME,IAAI,GAAG9L,IAAI,CAAC+L,SAAL,CAAehT,GAAf,CAAb;;AACA,UAAI,CAAC8S,QAAL,EAAe;AACX3G,cAAM,CAACxC,IAAP,CACI,yCACIsJ,kBAAkB,CAACF,IAAD,CAF1B;AAIH;;AACD,aAAOA,IAAP;AACH;AAED;;;;;;;;;;;;;;;;;;;;;gCAkBYpgB,M,EAAQC,O,EAASC,I,EAAM;AAC/B,UAAI,CAACF,MAAL,EAAa;AACTA,cAAM,GAAG,WAAT;AACH;;AACD,UAAI,CAACC,OAAL,EAAc;AACVA,eAAO,GAAG,CAAV;AACH;;AACD,UAAI,CAACC,IAAL,EAAW;AACPA,YAAI,GAAG,SAAP;AACH;;AAED,aAAO,KAAKoR,MAAL,CAAY7H,QAAZ,CAAqBzJ,MAArB,EAA6BC,OAA7B,EAAsCC,IAAtC,CAAP;AACH;AAED;;;;;;iCAGa;AACT,UAAI,KAAKyb,WAAT,EAAsB;AAClB,aAAKA,WAAL,CAAiB9E,GAAjB,CAAqB0J,KAArB;AACA,aAAK5E,WAAL,GAAmB,IAAnB;AACH;AACJ;AAED;;;;;;qCAGiB;AACb,WAAKD,SAAL,CAAehV,OAAf,CAAuB,UAAA5E,CAAC;AAAA,eAAIA,CAAC,CAACyK,EAAF,EAAJ;AAAA,OAAxB;AACH;AAED;;;;;;4BAGQ;AACJ,UAAI,CAAC,KAAKyG,OAAL,CAAapI,QAAb,EAAL,EAA8B;AAC1B,aAAK4V,IAAL;AACA,aAAKxN,OAAL,CAAayN,gBAAb;AACH;;AACD,WAAK9O,OAAL,GAAe,KAAf;AACA,WAAK+O,UAAL;AACA,WAAKC,cAAL;AACA,WAAKrP,MAAL,CAAY1U,QAAZ,CAAqB,CAArB;AACA,WAAK0U,MAAL,CAAYhO,QAAZ,CAAqB,CAArB;AACA,WAAKgO,MAAL,CAAY+M,SAAZ,CAAsB;AAAEzf,cAAM,EAAE,KAAK0S,MAAL,CAAY/O,QAAZ;AAAV,OAAtB,EAA0D,CAA1D;AACH;AAED;;;;;;;;8BAKU;AACN,WAAKqe,iBAAL;AACA,WAAKxd,SAAL,CAAe,SAAf;AACA,WAAKsd,UAAL;AACA,WAAKC,cAAL;AACA,WAAK/b,KAAL;;AACA,UAAI,KAAKnE,MAAL,CAAY0a,UAAZ,KAA2B,KAA/B,EAAsC;AAClC3B,cAAM,CAAC3H,mBAAP,CAA2B,QAA3B,EAAqC,KAAKqK,SAA1C,EAAqD,IAArD;AACA1C,cAAM,CAAC3H,mBAAP,CACI,mBADJ,EAEI,KAAKqK,SAFT,EAGI,IAHJ;AAKH;;AACD,WAAKlJ,OAAL,CAAa7L,OAAb;AACA,WAAKmK,MAAL,CAAYnK,OAAZ;AACA,WAAK6U,WAAL,GAAmB,IAAnB;AACA,WAAKrK,OAAL,GAAe,KAAf;AACA,WAAKiK,WAAL,GAAmB,IAAnB;AACH;;;;EA93CmC7a,IAAI,CAACiE,Q;;;AAAxBiV,U,CAyEV4G,O,GAAUC,O;AAzEA7G,U,CA8FVlZ,I,GAAOA,I;;;;;;;;;;;;;;;;;;;;ACvRlB;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,IAAMggB,OAAO,GAAG,SAAhB;AACA,IAAMC,MAAM,GAAG,QAAf;AACA,IAAMC,QAAQ,GAAG,UAAjB;AAEA;;;;;;IAKqBpU,Q;;;;;;;;AACjB;;AAEA;;AAEA;;AAEA;;AAwCA;;;;;uCAKmB;AACf,aAAO,CAAC,EAAE2M,MAAM,CAAC0H,YAAP,IAAuB1H,MAAM,CAAC2H,kBAAhC,CAAR;AACH;AAED;;;;;;;;sCAKkB;AACd,UAAI,CAAC3H,MAAM,CAAC4H,sBAAZ,EAAoC;AAChC5H,cAAM,CAAC4H,sBAAP,GAAgC,KAAK5H,MAAM,CAAC0H,YAAP,IACjC1H,MAAM,CAAC2H,kBADqB,GAAhC;AAEH;;AACD,aAAO3H,MAAM,CAAC4H,sBAAd;AACH;AAED;;;;;;;;;;2CAOuBtT,U,EAAY;AAC/B,UAAI,CAAC0L,MAAM,CAAC6H,6BAAZ,EAA2C;AACvC7H,cAAM,CAAC6H,6BAAP,GAAuC,KAAK7H,MAAM,CAAC8H,mBAAP,IACxC9H,MAAM,CAAC+H,yBAD4B,EACD,CADC,EACE,CADF,EACKzT,UADL,CAAvC;AAEH;;AACD,aAAO0L,MAAM,CAAC6H,6BAAd;AACH;AAED;;;;;;;;AAKA,oBAAY5gB,MAAZ,EAAoB;AAAA;;AAAA;;AAAA;;AAChB;AACA;;AAFgB,UArFpB2Z,YAqFoB,GArFL,IAqFK;AAAA,UAnFpBoH,mBAmFoB,GAnFE,IAmFF;AAAA,UAjFpBC,cAiFoB,qEAhFfV,OAgFe,EAhFL;AACP7G,UADO,kBACA;AACH,aAAKwH,iBAAL;AACH,OAHM;AAIPxE,uBAJO,+BAIa;AAChB,YAAMpT,QAAQ,GAAG,KAAKiC,WAAL,EAAjB;AACA,eAAO,KAAKlB,cAAL,KAAwBf,QAAxB,IAAoC,CAA3C;AACH,OAPM;AAQPe,oBARO,4BAQU;AACb,eAAO,KAAK8W,aAAL,GAAqB,KAAKC,aAAL,EAA5B;AACH;AAVM,KAgFK,yCApEfZ,MAoEe,EApEN;AACN9G,UADM,kBACC;AACH,aAAK2H,oBAAL;AACH,OAHK;AAIN3E,uBAJM,+BAIc;AAChB,YAAMpT,QAAQ,GAAG,KAAKiC,WAAL,EAAjB;AACA,eAAO,KAAKlB,cAAL,KAAwBf,QAAxB,IAAoC,CAA3C;AACH,OAPK;AAQNe,oBARM,4BAQW;AACb,eAAO,KAAK8W,aAAZ;AACH;AAVK,KAoEM,yCAxDfV,QAwDe,EAxDJ;AACR/G,UADQ,kBACD;AACH,aAAK2H,oBAAL;AACA,aAAKze,SAAL,CAAe,QAAf;AACH,OAJO;AAKR8Z,uBALQ,+BAKY;AAChB,eAAO,CAAP;AACH,OAPO;AAQRrS,oBARQ,4BAQS;AACb,eAAO,KAAKkB,WAAL,EAAP;AACH;AAVO,KAwDI;AAGhB,UAAKtL,MAAL,GAAcA,MAAd;AACA;;AACA,UAAK6U,EAAL,GACI7U,MAAM,CAAC2Z,YAAP,KACC,MAAK+C,gBAAL,KAA0B,MAAK2E,eAAL,EAA1B,GAAmD,EADpD,CADJ;AAGA;;AACA,UAAKC,QAAL,GAAgB,MAAKzM,EAAL,CAAQzL,WAAxB;AACA;;AACA,UAAK8X,aAAL,GAAqB,CAArB;AACA;;AACA,UAAKK,cAAL,GAAsB,IAAtB;AACA;;AACA,UAAKC,MAAL,qDACKlB,OADL,EACe7I,MAAM,CAACgK,MAAP,CAAc,MAAKT,cAAL,CAAoBV,OAApB,CAAd,CADf,iCAEKC,MAFL,EAEc9I,MAAM,CAACgK,MAAP,CAAc,MAAKT,cAAL,CAAoBT,MAApB,CAAd,CAFd,iCAGKC,QAHL,EAGgB/I,MAAM,CAACgK,MAAP,CAAc,MAAKT,cAAL,CAAoBR,QAApB,CAAd,CAHhB;AAKA;;AACA,UAAKkB,QAAL,GAAgB,IAAhB;AACA;;AACA,UAAK7X,MAAL,GAAc,IAAd;AACA;;AACA,UAAKyT,OAAL,GAAe,EAAf;AACA;;AACA,UAAKqE,QAAL,GAAgB,IAAhB;AACA;;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA;;AACA,UAAKC,SAAL,GAAiB,IAAjB;AACA;;AACA,UAAK/jB,KAAL,GAAa,IAAb;AACA;;AACA,UAAKyL,YAAL,GAAoB,CAApB;AACA;;AACA,UAAKmY,QAAL,GAAgB,IAAhB;AACA;;AACA,UAAKI,UAAL,GAAkB,IAAlB;AACA;;AACA,UAAKtK,MAAL,GAAc,IAAd;AACA;;AACA,UAAKuK,UAAL,GAAkB,EAAlB;AACA;;AACA,UAAKC,KAAL,GAAa,IAAb;AACA;;AACA,UAAK7W,gBAAL,GAAwBnL,MAAM,CAACqJ,QAA/B;AA/CgB;AAgDnB;AAED;;;;;;;2BAGO;AACH,WAAK4Y,gBAAL;AACA,WAAKC,gBAAL;AACA,WAAKC,kBAAL;AAEA,WAAKC,QAAL,CAAc7B,MAAd;AACA,WAAKxW,eAAL,CAAqB,KAAK/J,MAAL,CAAYgK,SAAjC;AACA,WAAKqY,SAAL,CAAe,CAAf;AACH;AAED;;;;wCACoB;AAChB,UAAI,KAAK/E,OAAT,EAAkB;AACd,aAAKA,OAAL,CAAarX,OAAb,CAAqB,UAAAyG,MAAM,EAAI;AAC3BA,gBAAM,IAAIA,MAAM,CAAC4V,UAAP,EAAV;AACH,SAFD;AAGA,aAAKhF,OAAL,GAAe,IAAf,CAJc,CAKd;;AACA,aAAKoE,QAAL,CAAca,OAAd,CAAsB,KAAKZ,QAA3B;AACH;AACJ;AAED;;;;;;;;6BAKSK,K,EAAO;AACZ,UAAI,KAAKA,KAAL,KAAe,KAAKR,MAAL,CAAYQ,KAAZ,CAAnB,EAAuC;AACnC,aAAKA,KAAL,GAAa,KAAKR,MAAL,CAAYQ,KAAZ,CAAb;AACA,aAAKA,KAAL,CAAWvI,IAAX,CAAgB7Q,IAAhB,CAAqB,IAArB;AACH;AACJ;AAED;;;;;;;;gCAKsB;AAAA,wCAAT0U,OAAS;AAATA,eAAS;AAAA;;AAClB,WAAKkF,UAAL,CAAgBlF,OAAhB;AACH;AAED;;;;;;;;;;;+BAQWA,O,EAAS;AAChB;AACA,WAAKmF,iBAAL,GAFgB,CAIhB;;AACA,UAAInF,OAAO,IAAIA,OAAO,CAACnf,MAAvB,EAA+B;AAC3B,aAAKmf,OAAL,GAAeA,OAAf,CAD2B,CAG3B;;AACA,aAAKoE,QAAL,CAAcY,UAAd,GAJ2B,CAM3B;;AACAhF,eAAO,CACFoF,MADL,CACY,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACpBD,cAAI,CAACJ,OAAL,CAAaK,IAAb;AACA,iBAAOA,IAAP;AACH,SAJL,EAIO,KAAKlB,QAJZ,EAKKa,OALL,CAKa,KAAKZ,QALlB;AAMH;AACJ;AAED;;;;uCACmB;AACf,UAAI,KAAK3hB,MAAL,CAAY4Z,oBAAhB,EAAsC;AAClC,aAAKkI,UAAL,GAAkB,KAAK9hB,MAAL,CAAY4Z,oBAA9B;AACH,OAFD,MAEO;AACH,YAAI,KAAK/E,EAAL,CAAQgO,qBAAZ,EAAmC;AAC/B,eAAKf,UAAL,GAAkB,KAAKjN,EAAL,CAAQgO,qBAAR,CACdzW,QAAQ,CAAC0W,gBADK,CAAlB;AAGH,SAJD,MAIO;AACH,eAAKhB,UAAL,GAAkB,KAAKjN,EAAL,CAAQkO,oBAAR,CACd3W,QAAQ,CAAC0W,gBADK,CAAlB;AAGH;AACJ;;AACD,WAAKhB,UAAL,CAAgBS,OAAhB,CAAwB,KAAK1N,EAAL,CAAQmO,WAAhC;AACH;AAED;;;;wCACoB;AAAA;;AAChB,WAAKlB,UAAL,CAAgBmB,cAAhB,GAAiC,YAAM;AACnC,YAAMpX,IAAI,GAAG,MAAI,CAACzB,cAAL,EAAb;;AAEA,YAAIyB,IAAI,IAAI,MAAI,CAACP,WAAL,EAAZ,EAAgC;AAC5B,gBAAI,CAAC8W,QAAL,CAAc5B,QAAd;;AACA,gBAAI,CAAC7d,SAAL,CAAe,OAAf;AACH,SAHD,MAGO,IAAIkJ,IAAI,IAAI,MAAI,CAAC0V,cAAjB,EAAiC;AACpC,gBAAI,CAAC9X,KAAL;AACH,SAFM,MAEA,IAAI,MAAI,CAACuY,KAAL,KAAe,MAAI,CAACR,MAAL,CAAYlB,OAAZ,CAAnB,EAAyC;AAC5C,gBAAI,CAAC3d,SAAL,CAAe,cAAf,EAA+BkJ,IAA/B;AACH;AACJ,OAXD;AAYH;AAED;;;;2CACuB;AACnB,WAAKiW,UAAL,CAAgBmB,cAAhB,GAAiC,YAAM,CAAE,CAAzC;AACH;AAED;;;;yCACqB;AACjB,WAAKvB,QAAL,GAAgB,KAAK7M,EAAL,CAAQqO,cAAR,EAAhB;AACA,WAAKxB,QAAL,CAAca,OAAd,CAAsB,KAAKZ,QAA3B;AACH;AAED;;;;;;;;uCAKmB;AACf;AACA,UAAI,KAAK9M,EAAL,CAAQsO,UAAZ,EAAwB;AACpB,aAAKxB,QAAL,GAAgB,KAAK9M,EAAL,CAAQsO,UAAR,EAAhB;AACH,OAFD,MAEO;AACH,aAAKxB,QAAL,GAAgB,KAAK9M,EAAL,CAAQuO,cAAR,EAAhB;AACH,OANc,CAOf;;;AACA,WAAKzB,QAAL,CAAcY,OAAd,CAAsB,KAAK1N,EAAL,CAAQmO,WAA9B;AACH;AAED;;;;;;;;;;8BAOUjX,Q,EAAU;AAChB,UAAIA,QAAJ,EAAc;AACV;;;;;AAKA,YAAIsX,KAAK,GAAG,IAAItK,MAAM,CAACuK,KAAX,EAAZ;;AACA,YAAI,CAACD,KAAK,CAACrX,SAAX,EAAsB;AAClB,iBAAOtM,OAAO,CAACuM,MAAR,CACH,IAAIC,KAAJ,CAAU,4CAAV,CADG,CAAP;AAGH;;AACDmX,aAAK,CAAC3Y,QAAN,GAAiB,IAAjB;AACA,YAAI4M,IAAI,GAAG,KAAKzC,EAAL,CAAQ0O,4BAAR,EAAX;AACA,aAAK5B,QAAL,CAAcW,UAAd;AACA,aAAKX,QAAL,CAAcY,OAAd,CAAsBjL,IAAtB;AACA+L,aAAK,CAACG,SAAN,GAAkBlM,IAAI,CAACmM,MAAvB;AAEA,eAAOJ,KAAK,CAACrX,SAAN,CAAgBD,QAAhB,CAAP;AACH,OAnBD,MAmBO;AACH,eAAOrM,OAAO,CAACuM,MAAR,CAAe,IAAIC,KAAJ,CAAU,uBAAuBH,QAAjC,CAAf,CAAP;AACH;AACJ;AAED;;;;;;;;8BAKUR,K,EAAO;AACb,WAAKoW,QAAL,CAAc+B,IAAd,CAAmBC,cAAnB,CAAkCpY,KAAlC,EAAyC,KAAKsJ,EAAL,CAAQzL,WAAjD;AACH;AAED;;;;;;;;gCAKY;AACR,aAAO,KAAKuY,QAAL,CAAc+B,IAAd,CAAmBnY,KAA1B;AACH;AAED;;;;;;;;;;;sCAQkB4P,W,EAAatI,Q,EAAU+Q,O,EAAS;AAC9C,UAAI,CAAC,KAAK/B,SAAV,EAAqB;AACjB,aAAKA,SAAL,GAAiB,KAAKgC,sBAAL,CACb,KAAKhP,EAAL,IAAW,KAAKA,EAAL,CAAQxH,UAAnB,GAAgC,KAAKwH,EAAL,CAAQxH,UAAxC,GAAqD,KADxC,CAAjB;AAGH;;AACD,WAAKwU,SAAL,CAAeiC,eAAf,CACI3I,WADJ,EAEI,UAAAvH,IAAI;AAAA,eAAIf,QAAQ,CAACe,IAAD,CAAZ;AAAA,OAFR,EAGIgQ,OAHJ;AAKH;AAED;;;;;;;;;6BAMS9lB,K,EAAOuL,Q,EAAU;AACtB,UAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClB,aAAK8B,gBAAL,GAAwB9B,QAAxB;AACH;;AACD,WAAKvL,KAAL,GAAaA,KAAb;AACH;AAED;;;;;;;;8BAKUK,M,EAAQ;AACd;AACA,UAAI,KAAKyjB,WAAL,IAAoBzjB,MAAM,IAAI,IAAI,KAAKyjB,WAAL,CAAiBzjB,MAArB,GAA8B,CAA9B,GAAkC,CAApE,EAAuE;AACnE;AACH;;AAED,WAAK4jB,UAAL,GAAkB,EAAlB;AACA,WAAKH,WAAL,GAAmB,EAAnB,CAPc,CAQd;AACA;;AACA,UAAMvZ,QAAQ,GAAG,KAAKwB,MAAL,GAAc,KAAKA,MAAL,CAAY8I,gBAA1B,GAA6C,CAA9D;AACA,UAAIoR,CAAJ;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG1b,QAAhB,EAA0B0b,CAAC,EAA3B,EAA+B;AAC3B,aAAKhC,UAAL,CAAgBgC,CAAhB,IAAqB,EAArB;AACA,aAAKhC,UAAL,CAAgBgC,CAAhB,EAAmB,KAAK5lB,MAAM,GAAG,CAAd,CAAnB,IAAuC,CAAvC;AACA,aAAK4jB,UAAL,CAAgBgC,CAAhB,EAAmB,KAAK5lB,MAAM,GAAG,CAAd,IAAmB,CAAtC,IAA2C,CAA3C;AACH;;AACD,WAAKyjB,WAAL,CAAiB,KAAKzjB,MAAM,GAAG,CAAd,CAAjB,IAAqC,CAArC;AACA,WAAKyjB,WAAL,CAAiB,KAAKzjB,MAAM,GAAG,CAAd,IAAmB,CAApC,IAAyC,CAAzC;AACH;AAED;;;;;;;;;;;;6BASSA,M,EAAQC,K,EAAOG,I,EAAM;AAC1B,UAAI,KAAKT,KAAT,EAAgB;AACZ,eAAO,KAAKA,KAAZ;AACH;;AACD,UAAI,CAAC,KAAK+L,MAAV,EAAkB;AACd,eAAO,EAAP;AACH;;AAEDzL,WAAK,GAAGA,KAAK,IAAI,CAAjB;AACAG,UAAI,GAAGA,IAAI,IAAIJ,MAAM,GAAG,CAAxB;AAEA,WAAKkkB,SAAL,CAAelkB,MAAf;;AAEA,UAAI,CAAC,KAAK0L,MAAV,EAAkB;AACd,eAAO,KAAK7J,MAAL,CAAYsI,aAAZ,GACD,KAAKyZ,UADJ,GAED,KAAKH,WAFX;AAGH;AAED;;;;;;;;;AAOA,UAAI,CAAC,KAAK/X,MAAL,CAAY1L,MAAjB,EAAyB;AACrB,YAAM6lB,SAAS,GAAG,KAAKC,YAAL,CAAkB,CAAlB,EAAqB,IAArB,EAA2B,KAAK5W,UAAhC,CAAlB;AACA,aAAKxD,MAAL,GAAcma,SAAS,CAACna,MAAxB;AACH;;AAED,UAAMqa,UAAU,GAAG,KAAKra,MAAL,CAAY1L,MAAZ,GAAqBA,MAAxC;AACA,UAAMgmB,UAAU,GAAG,CAAC,EAAED,UAAU,GAAG,EAAf,CAAD,IAAuB,CAA1C;AACA,UAAM7b,QAAQ,GAAG,KAAKwB,MAAL,CAAY8I,gBAA7B;AACA,UAAIoR,CAAJ;;AAEA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG1b,QAAhB,EAA0B0b,CAAC,EAA3B,EAA+B;AAC3B,YAAMjmB,KAAK,GAAG,KAAKikB,UAAL,CAAgBgC,CAAhB,CAAd;AACA,YAAMK,IAAI,GAAG,KAAKva,MAAL,CAAYkJ,cAAZ,CAA2BgR,CAA3B,CAAb;AACA,YAAI/kB,CAAC,SAAL;;AAEA,aAAKA,CAAC,GAAGZ,KAAT,EAAgBY,CAAC,IAAIT,IAArB,EAA2BS,CAAC,EAA5B,EAAgC;AAC5B,cAAM3C,KAAK,GAAG,CAAC,EAAE2C,CAAC,GAAGklB,UAAN,CAAf;AACA,cAAM5nB,GAAG,GAAG,CAAC,EAAED,KAAK,GAAG6nB,UAAV,CAAb;AACA,cAAItgB,GAAG,GAAG,CAAV;AACA,cAAID,GAAG,GAAG,CAAV;AACA,cAAIvE,CAAC,SAAL;;AAEA,eAAKA,CAAC,GAAG/C,KAAT,EAAgB+C,CAAC,GAAG9C,GAApB,EAAyB8C,CAAC,IAAI+kB,UAA9B,EAA0C;AACtC,gBAAM5Y,KAAK,GAAG6Y,IAAI,CAAChlB,CAAD,CAAlB;;AAEA,gBAAImM,KAAK,GAAG5H,GAAZ,EAAiB;AACbA,iBAAG,GAAG4H,KAAN;AACH;;AAED,gBAAIA,KAAK,GAAG3H,GAAZ,EAAiB;AACbA,iBAAG,GAAG2H,KAAN;AACH;AACJ;;AAEDzN,eAAK,CAAC,IAAIkB,CAAL,CAAL,GAAe2E,GAAf;AACA7F,eAAK,CAAC,IAAIkB,CAAJ,GAAQ,CAAT,CAAL,GAAmB4E,GAAnB;;AAEA,cAAImgB,CAAC,IAAI,CAAL,IAAUpgB,GAAG,GAAG,KAAKie,WAAL,CAAiB,IAAI5iB,CAArB,CAApB,EAA6C;AACzC,iBAAK4iB,WAAL,CAAiB,IAAI5iB,CAArB,IAA0B2E,GAA1B;AACH;;AAED,cAAIogB,CAAC,IAAI,CAAL,IAAUngB,GAAG,GAAG,KAAKge,WAAL,CAAiB,IAAI5iB,CAAJ,GAAQ,CAAzB,CAApB,EAAiD;AAC7C,iBAAK4iB,WAAL,CAAiB,IAAI5iB,CAAJ,GAAQ,CAAzB,IAA8B4E,GAA9B;AACH;AACJ;AACJ;;AAED,aAAO,KAAK5D,MAAL,CAAYsI,aAAZ,GAA4B,KAAKyZ,UAAjC,GAA8C,KAAKH,WAA1D;AACH;AAED;;;;;;;;wCAKoB;AAChB,aAAO,KAAKI,KAAL,CAAWvF,iBAAX,CAA6B7T,IAA7B,CAAkC,IAAlC,CAAP;AACH;AAED;;;;uCACmB;AACf,UAAI,KAAK4O,MAAT,EAAiB;AACb,aAAKA,MAAL,CAAY8K,UAAZ;AACH;AACJ;AAED;;;;;;8BAGU;AACN,UAAI,CAAC,KAAKnY,QAAL,EAAL,EAAsB;AAClB,aAAKV,KAAL;AACH;;AACD,WAAKtF,KAAL;AACA,WAAK0F,MAAL,GAAc,IAAd;AACA,WAAK4Y,iBAAL;AACA,WAAKzC,gBAAL;AACA,WAAK2B,QAAL,CAAcW,UAAd;AACA,WAAKR,UAAL,CAAgBQ,UAAhB;AACA,WAAKZ,QAAL,CAAcY,UAAd,GAVM,CAYN;;AACA,UAAI,KAAKtiB,MAAL,CAAYqkB,iBAAhB,EAAmC;AAC/B;AACA,YACI,OAAO,KAAKxP,EAAL,CAAQyP,KAAf,KAAyB,UAAzB,IACA,KAAKzP,EAAL,CAAQmN,KAAR,IAAiB,QAFrB,EAGE;AACE,eAAKnN,EAAL,CAAQyP,KAAR;AACH,SAP8B,CAQ/B;;;AACA,aAAKzP,EAAL,GAAU,IAAV,CAT+B,CAU/B;AACA;;AACA,YAAI,CAAC,KAAK7U,MAAL,CAAY2Z,YAAjB,EAA+B;AAC3BZ,gBAAM,CAAC4H,sBAAP,GAAgC,IAAhC;AACH,SAFD,MAEO;AACH,eAAK3gB,MAAL,CAAY2Z,YAAZ,GAA2B,IAA3B;AACH,SAhB8B,CAiB/B;;;AACAZ,cAAM,CAAC6H,6BAAP,GAAuC,IAAvC;AACH;AACJ;AAED;;;;;;;;yBAKK/W,M,EAAQ;AACT,WAAKqX,aAAL,GAAqB,CAArB;AACA,WAAKI,QAAL,GAAgB,KAAKzM,EAAL,CAAQzL,WAAxB;AACA,WAAKS,MAAL,GAAcA,MAAd;AACA,WAAK0a,YAAL;AACH;AAED;;;;mCACe;AACX,WAAKvE,gBAAL;AACA,WAAKxI,MAAL,GAAc,KAAK3C,EAAL,CAAQ2P,kBAAR,EAAd,CAFW,CAIX;;AACA,WAAKhN,MAAL,CAAYnb,KAAZ,GAAoB,KAAKmb,MAAL,CAAYnb,KAAZ,IAAqB,KAAKmb,MAAL,CAAYiN,WAArD;AACA,WAAKjN,MAAL,CAAYuI,IAAZ,GAAmB,KAAKvI,MAAL,CAAYuI,IAAZ,IAAoB,KAAKvI,MAAL,CAAYkN,OAAnD;AAEA,WAAKlN,MAAL,CAAYjO,YAAZ,CAAyBoa,cAAzB,CACI,KAAKpa,YADT,EAEI,KAAKsL,EAAL,CAAQzL,WAFZ;AAIA,WAAKoO,MAAL,CAAY3N,MAAZ,GAAqB,KAAKA,MAA1B;AACA,WAAK2N,MAAL,CAAY+K,OAAZ,CAAoB,KAAKb,QAAzB;AACH;AAED;;;;;;;;+BAKW;AACP,aAAO,KAAKM,KAAL,KAAe,KAAKR,MAAL,CAAYlB,OAAZ,CAAtB;AACH;AAED;;;;;;;;kCAKc;AACV,UAAI,KAAKnV,gBAAT,EAA2B;AACvB,eAAO,KAAKA,gBAAZ;AACH;;AACD,UAAI,CAAC,KAAKtB,MAAV,EAAkB;AACd,eAAO,CAAP;AACH;;AACD,aAAO,KAAKA,MAAL,CAAYR,QAAnB;AACH;AAED;;;;;;;;;;;2BAQOhN,K,EAAOC,G,EAAK;AACf,UAAI,CAAC,KAAKuN,MAAV,EAAkB;AACd;AACH;;AAED,WAAK0X,cAAL,GAAsB,IAAtB;;AAEA,UAAIllB,KAAK,IAAI,IAAb,EAAmB;AACfA,aAAK,GAAG,KAAK+N,cAAL,EAAR;;AACA,YAAI/N,KAAK,IAAI,KAAKiP,WAAL,EAAb,EAAiC;AAC7BjP,eAAK,GAAG,CAAR;AACH;AACJ;;AACD,UAAIC,GAAG,IAAI,IAAX,EAAiB;AACbA,WAAG,GAAG,KAAKgP,WAAL,EAAN;AACH;;AAED,WAAK4V,aAAL,GAAqB7kB,KAArB;AACA,WAAKilB,QAAL,GAAgB,KAAKzM,EAAL,CAAQzL,WAAxB;;AAEA,UAAI,KAAK4Y,KAAL,KAAe,KAAKR,MAAL,CAAYhB,QAAZ,CAAnB,EAA0C;AACtC,aAAK4B,QAAL,CAAc7B,MAAd;AACH;;AAED,aAAO;AACHlkB,aAAK,EAAEA,KADJ;AAEHC,WAAG,EAAEA;AAFF,OAAP;AAIH;AAED;;;;;;;;oCAKgB;AACZ,aAAO,CAAC,KAAKuY,EAAL,CAAQzL,WAAR,GAAsB,KAAKkY,QAA5B,IAAwC,KAAK/X,YAApD;AACH;AAED;;;;;;;;;;yBAOKlN,K,EAAOC,G,EAAK;AACb,UAAI,CAAC,KAAKuN,MAAV,EAAkB;AACd;AACH,OAHY,CAKb;;;AACA,WAAK0a,YAAL;AAEA,UAAMI,YAAY,GAAG,KAAKlZ,MAAL,CAAYpP,KAAZ,EAAmBC,GAAnB,CAArB;AAEAD,WAAK,GAAGsoB,YAAY,CAACtoB,KAArB;AACAC,SAAG,GAAGqoB,YAAY,CAACroB,GAAnB;AAEA,WAAKilB,cAAL,GAAsBjlB,GAAtB;AAEA,WAAKkb,MAAL,CAAYnb,KAAZ,CAAkB,CAAlB,EAAqBA,KAArB,EAA4BC,GAAG,GAAGD,KAAlC;;AAEA,UAAI,KAAKwY,EAAL,CAAQmN,KAAR,IAAiB,WAArB,EAAkC;AAC9B,aAAKnN,EAAL,CAAQ+P,MAAR,IAAkB,KAAK/P,EAAL,CAAQ+P,MAAR,EAAlB;AACH;;AAED,WAAKxC,QAAL,CAAc9B,OAAd;AAEA,WAAK3d,SAAL,CAAe,MAAf;AACH;AAED;;;;;;4BAGQ;AACJ,WAAK4e,cAAL,GAAsB,IAAtB;AAEA,WAAKL,aAAL,IAAsB,KAAKC,aAAL,EAAtB;AACA,WAAK3J,MAAL,IAAe,KAAKA,MAAL,CAAYuI,IAAZ,CAAiB,CAAjB,CAAf;AAEA,WAAKqC,QAAL,CAAc7B,MAAd;AAEA,WAAK5d,SAAL,CAAe,OAAf;AACH;AAED;;;;;;;;;qCAMiB;AACb,aAAO,KAAKqf,KAAL,CAAW5X,cAAX,CAA0BxB,IAA1B,CAA+B,IAA/B,CAAP;AACH;AAED;;;;;;;;sCAKkB;AACd,aAAO,KAAKW,YAAZ;AACH;AAED;;;;;;;;oCAKgBgC,K,EAAO;AACnBA,WAAK,GAAGA,KAAK,IAAI,CAAjB;;AACA,UAAI,KAAKpB,QAAL,EAAJ,EAAqB;AACjB,aAAKZ,YAAL,GAAoBgC,KAApB;AACH,OAFD,MAEO;AACH,aAAK9B,KAAL;AACA,aAAKF,YAAL,GAAoBgC,KAApB;AACA,aAAK/B,IAAL;AACH;AACJ;;;;EAhsBiClJ,IAAI,CAACiE,Q;;;AAAtB6H,Q,CAEV0W,gB,GAAmB,G","file":"wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/wavesurfer.js\");\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         * @private\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         * @private\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(this.constructor.name.toLowerCase() + '_');\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d');\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext('2d');\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     *\n     * @param {string} waveColor Fill color for the wave canvas\n     * @param {?string} progressColor Fill color for the progress canvas\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = waveColor;\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = progressColor;\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     */\n    fillRects(x, y, width, height) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(this.progressCtx, x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height) {\n        if (!ctx) {\n            return;\n        }\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n        /** @private */\n        this.container = container;\n        /**\n         * @type {WavesurferParams}\n         * @private\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n        /** @private */\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = this.container.appendChild(\n            document.createElement('wave')\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = e.targetTouches\n            ? e.targetTouches[0].clientX\n            : e.clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress =\n                (this.params.rtl ? bbox.right - clientX : clientX - bbox.left) *\n                    (this.params.pixelRatio / nominalWidth) || 0;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n        } else {\n            progress =\n                ((this.params.rtl\n                    ? bbox.right - clientX\n                    : clientX - bbox.left) +\n                    this.wrapper.scrollLeft) /\n                    this.wrapper.scrollWidth || 0;\n        }\n\n        return progress;\n    }\n\n    /**\n     * @private\n     */\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const scrollbarHeight =\n                this.wrapper.offsetHeight - this.wrapper.clientHeight;\n            if (scrollbarHeight != 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // we'll limit the \"re-center\" rate.\n            const rate = 5;\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            this.style(this.wrapper, {\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(newPos);\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container) {\n                this.container.removeChild(this.wrapper);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @private\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @private\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     * @private\n     */\n    createElements() {\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 3,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid'\n            })\n        );\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     * @private\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        entry.initWave(\n            this.wrapper.appendChild(\n                this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    zIndex: 2,\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0,\n                    height: '100%'\n                })\n            )\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            entry.initProgress(\n                this.progressWave.appendChild(\n                    this.style(document.createElement('canvas'), {\n                        position: 'absolute',\n                        left: leftOffset + 'px',\n                        top: 0,\n                        bottom: 0,\n                        height: '100%'\n                    })\n                )\n            );\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     * @private\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @private\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        this.canvases.forEach(entry => entry.clearWave());\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                              this.params.pixelRatio,\n                              this.params.barGap * this.params.pixelRatio\n                          );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i = first;\n\n                for (i; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    const h = Math.round((peak / absmax) * halfH);\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @private\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end) {\n        this.canvases.forEach(entry => {\n            this.setFillStyles(entry);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     */\n    fillRect(x, y, width, height) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                this.setFillStyles(entry);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1\n                );\n            }\n        }\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @private\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n                if (this.params.splitChannels) {\n                    this.setHeight(\n                        channels.length *\n                            this.params.height *\n                            this.params.pixelRatio\n                    );\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn)\n                    );\n                }\n                peaks = channels[0];\n            }\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                const max = util.max(peaks);\n                const min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const offsetY = height * channelIndex || 0;\n            const halfH = height / 2;\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @private\n     * @param {CanvasEntry} entry Target entry\n     */\n    setFillStyles(entry) {\n        entry.setFillStyles(this.params.waveColor, this.params.progressColor);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        // Dummy media to catch errors\n        /** @private */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     *\n     * @private\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks);\n    }\n\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @private\n     */\n    _load(media, peaks) {\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        if (typeof media.load == 'function') {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        media.addEventListener('error', () => {\n            this.fireEvent('error', 'Error loading media element');\n        });\n\n        media.addEventListener('canplay', () => {\n            this.fireEvent('canplay');\n        });\n\n        media.addEventListener('ended', () => {\n            this.fireEvent('finish');\n        });\n\n        // Listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        media.addEventListener('play', () => {\n            this.fireEvent('play');\n        });\n\n        media.addEventListener('pause', () => {\n            this.fireEvent('pause');\n        });\n\n        media.addEventListener('seeked', event => {\n            this.fireEvent('seek');\n        });\n\n        this.media = media;\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @private\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume || this.media.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        this.media.volume = this.volume;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n */\n/* eslint-disable complexity, no-redeclare, no-var, one-var */\nconst FFT = function(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    var i;\n    switch (windowFunc) {\n        case 'bartlett':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (0.54 - 0.46) *\n                    Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n};\n/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 Number of samples to fetch to FFT. Must be\n * a power of 2.\n * @property {boolean} labels Set to true to display frequency labels.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n * @property {number[][]} colorMap map of colors to make spectrogram colorful\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params Parameters used to initialise the plugin\n     * @return {PluginDefinition} An object representing the plugin.\n     */\n    static create(params) {\n        return {\n            name: 'spectrogram',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT\n            },\n            instance: SpectrogramPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = e => {\n            this.updateScroll(e);\n        };\n        this._onRender = () => {\n            this.render();\n        };\n        this._onWrapperClick = e => {\n            this._wrapperClickHandler(e);\n        };\n        this._onReady = () => {\n            const drawer = (this.drawer = ws.drawer);\n\n            this.container =\n                'string' == typeof params.container\n                    ? document.querySelector(params.container)\n                    : params.container;\n\n            if (!this.container) {\n                throw Error('No container for WaveSurfer spectrogram');\n            }\n\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples =\n                this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n            this.colorMap = params.colorMap;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\n            ws.on('redraw', this._onRender);\n        };\n    }\n\n    init() {\n        // Check if wavesurfer is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n        }\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('redraw', this._onRender);\n        this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector('spectrogram');\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement('spectrogram');\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = (this.labelsEl = document.createElement('canvas'));\n            labelsEl.classList.add('spec-labels');\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: 'absolute',\n                zIndex: 9,\n                height: `${this.height / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`\n            });\n            this.wrapper.appendChild(labelsEl);\n            this.loadLabels(\n                'rgba(68,68,68,0.5)',\n                '12px',\n                '10px',\n                '',\n                '#fff',\n                '#f7f7f7',\n                'center',\n                '#specLabels'\n            );\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            top: '-128px',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: `${this.height / this.pixelRatio}px`\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                overflowX: 'auto',\n                overflowY: 'hidden'\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener('click', this._onWrapperClick);\n    }\n\n    _wrapperClickHandler(event) {\n        event.preventDefault();\n\n        if (this.params.visualization === 'spectrogram') {\n            return;\n        } else {\n            const relX = 'offsetX' in event ? event.offsetX : event.layerX;\n            this.fireEvent('click', relX / this.scrollWidth || 0);\n        }\n    }\n\n    createCanvas() {\n        const canvas = (this.canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        ));\n\n        this.spectrCc = canvas.getContext('2d');\n\n        this.util.style(canvas, {\n            position: 'relative',\n            zIndex: 0\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.width = width;\n    }\n\n    drawSpectrogram(frequenciesData, my) {\n        const spectrCc = my.spectrCc;\n        const length = my.wavesurfer.backend.getDuration();\n        const height = my.height;\n        const pixels = my.resample(frequenciesData);\n        const heightFactor = my.buffer ? 2 / my.buffer.numberOfChannels : 1;\n        let i;\n        let j;\n\n        for (i = 0; i < pixels.length; i++) {\n            for (j = 0; j < pixels[i].length; j++) {\n                const rgb = my.colorMap[pixels[i][j]];\n\n                my.spectrCc.fillStyle = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n                my.spectrCc.fillRect(\n                    i,\n                    height - j * heightFactor,\n                    1,\n                    heightFactor\n                );\n            }\n        }\n    }\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\n        const channelOne = buffer.getChannelData(0);\n        const bufferLength = buffer.length;\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        if (!buffer) {\n            this.fireEvent('error', 'Web Audio buffer is not available');\n            return;\n        }\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(\n            fftSamples,\n            sampleRate,\n            this.windowFunc,\n            this.alpha\n        );\n        const maxSlicesCount = Math.floor(\n            bufferLength / (fftSamples - noverlap)\n        );\n        let currentOffset = 0;\n\n        while (currentOffset + fftSamples < channelOne.length) {\n            const segment = channelOne.slice(\n                currentOffset,\n                currentOffset + fftSamples\n            );\n            const spectrum = fft.calculateSpectrum(segment);\n            const array = new Uint8Array(fftSamples / 2);\n            let j;\n            for (j = 0; j < fftSamples / 2; j++) {\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n            }\n            frequencies.push(array);\n            currentOffset += fftSamples - noverlap;\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const ajax = this.util.ajax({ url: url });\n\n        ajax.on('success', data =>\n            this.drawSpectrogram(JSON.parse(data), this)\n        );\n        ajax.on('error', e =>\n            this.fireEvent('error', 'XHR error: ' + e.target.statusText)\n        );\n\n        return ajax;\n    }\n\n    freqType(freq) {\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\n    }\n\n    unitType(freq) {\n        return freq >= 1000 ? 'KHz' : 'Hz';\n    }\n\n    loadLabels(\n        bgFill,\n        fontSizeFreq,\n        fontSizeUnit,\n        fontType,\n        textColorFreq,\n        textColorUnit,\n        textAlign,\n        container\n    ) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || 'rgba(68,68,68,0)';\n        fontSizeFreq = fontSizeFreq || '12px';\n        fontSizeUnit = fontSizeUnit || '10px';\n        fontType = fontType || 'Helvetica';\n        textColorFreq = textColorFreq || '#fff';\n        textColorUnit = textColorUnit || '#fff';\n        textAlign = textAlign || 'center';\n        container = container || '#specLabels';\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = 0;\n        const step =\n            (this.wavesurfer.backend.ac.sampleRate / 2 - freqStart) /\n            labelIndex;\n\n        const ctx = this.labelsEl.getContext('2d');\n        this.labelsEl.height = this.height;\n        this.labelsEl.width = 55;\n\n        ctx.fillStyle = bgFill;\n        ctx.fillRect(0, 0, 55, getMaxY);\n        ctx.fill();\n        let i;\n\n        for (i = 0; i <= labelIndex; i++) {\n            ctx.textAlign = textAlign;\n            ctx.textBaseline = 'middle';\n\n            const freq = freqStart + step * i;\n            const index = Math.round(\n                (freq / (this.sampleRate / 2)) * this.fftSamples\n            );\n            const label = this.freqType(freq);\n            const units = this.unitType(freq);\n            const x = 16;\n            const yLabelOffset = 2;\n\n            if (i == 0) {\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, getMaxY + i - 10);\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, getMaxY + i - 10);\n            } else {\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, getMaxY - i * 50 + yLabelOffset);\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, getMaxY - i * 50 + yLabelOffset);\n            }\n        }\n    }\n\n    updateScroll(e) {\n        if (this.wrapper) {\n            this.wrapper.scrollLeft = e.target.scrollLeft;\n        }\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap =\n                    oldEnd <= newStart || newEnd <= oldStart\n                        ? 0\n                        : Math.min(\n                              Math.max(oldEnd, newStart),\n                              Math.max(newEnd, oldStart)\n                          ) -\n                          Math.max(\n                              Math.min(oldEnd, newStart),\n                              Math.min(newEnd, oldStart)\n                          );\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n","import Observer from './observer';\n\n/**\n * Perform an ajax request\n *\n * @param {Options} options Description\n *\n * @returns {Object} Observer instance\n */\nexport default function ajax(options) {\n    const instance = new Observer();\n    const xhr = new XMLHttpRequest();\n    let fired100 = false;\n    xhr.open(options.method || 'GET', options.url, true);\n    xhr.responseType = options.responseType || 'json';\n\n    if (options.xhr) {\n        if (options.xhr.requestHeaders) {\n            // add custom request headers\n            options.xhr.requestHeaders.forEach(header => {\n                xhr.setRequestHeader(header.key, header.value);\n            });\n        }\n        if (options.xhr.withCredentials) {\n            // use credentials\n            xhr.withCredentials = true;\n        }\n    }\n\n    xhr.addEventListener('progress', e => {\n        instance.fireEvent('progress', e);\n        if (e.lengthComputable && e.loaded == e.total) {\n            fired100 = true;\n        }\n    });\n    xhr.addEventListener('load', e => {\n        if (!fired100) {\n            instance.fireEvent('progress', e);\n        }\n        instance.fireEvent('load', e);\n        if (200 == xhr.status || 206 == xhr.status) {\n            instance.fireEvent('success', xhr.response, e);\n        } else {\n            instance.fireEvent('error', e);\n        }\n    });\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\n    xhr.send();\n    instance.xhr = xhr;\n    return instance;\n}\n","/**\n * Extend an object shallowly with others\n *\n * @param {Object} dest The target object\n * @param {Object[]} sources The objects to use for extending\n *\n * @return {Object} Merged object\n */\nexport default function extend(dest, ...sources) {\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            dest[key] = source[key];\n        });\n    });\n    return dest;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as ajax } from './ajax';\nexport { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as Observer } from './observer';\nexport { default as extend } from './extend';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers) {\n            return;\n        }\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport SpectrogramPlugin from './plugin/spectrogram.js';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform around the progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for\n * unsupported browsers.\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement`)\n * `'audio'|'video'`\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options.\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barGap: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        waveColor: '#999',\n        xhr: {},\n        // extra params\n        fftSamples: 512,\n        width: 800\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = util.extend({}, this.defaultParams, params);\n\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            util.style(this.container, { transform: 'rotateY(180deg)' });\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentAjax = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    this.drawer.fireEvent('redraw');\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            this.params.backend == 'WebAudio' &&\n            !this.Backend.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n        this.backend.on('seek', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const paused = this.backend.isPaused();\n        // avoid draw wrong position while playing backward seeking\n        if (!paused) {\n            this.backend.pause();\n        }\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (!paused) {\n            this.backend.play();\n        }\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (mute) {\n            // If currently not muted then save current volume,\n            // turn off the volume and update the mute properties\n            this.savedVolume = this.backend.getVolume();\n            this.backend.setVolume(0);\n            this.isMuted = true;\n            this.fireEvent('volume', 0);\n        } else {\n            // If currently muted then restore to the saved volume\n            // and update the mute properties\n            this.backend.setVolume(this.savedVolume);\n            this.isMuted = false;\n            this.fireEvent('volume', this.savedVolume);\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            if (this.params.visualization === 'spectrogram') {\n                const params = {\n                    container: '.spectrogram-annotator',\n                    fftSamples: this.params.fftSamples,\n                    height: this.params.height,\n                    pixelRatio: this.params.pixelRatio,\n                    colorMap: this.params.colorMap,\n                    visualization: 'spectrogram'\n                };\n\n                this.sepectrogram = new SpectrogramPlugin(params, this);\n                this.sepectrogram.init();\n\n                // seting width\n                this.drawer.setWidth(width);\n            } else {\n                peaks = this.backend.getPeaks(width, start, end);\n                this.drawer.drawPeaks(peaks, width, start, end);\n            }\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.fireEvent('ready');\n        this.isReady = true;\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @example\n     * // using ajax or media element to load (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        this.empty();\n\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                'Backend is not of type MediaElement':\n                    this.params.backend !== 'MediaElement',\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                this.drawBuffer();\n                this.fireEvent('ready');\n                this.isReady = true;\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If no pre-decoded peaks provided or pre-decoded peaks are\n        // provided with forceDecode flag, attempt to download the\n        // audio file and decode it with Web Audio.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n        }\n\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        this.arraybuffer = arraybuffer;\n\n        this.backend.decodeArrayBuffer(\n            arraybuffer,\n            data => {\n                // Only use the decoded data if we haven't been destroyed or\n                // another decode started in the meantime\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                    callback(data);\n                    this.arraybuffer = null;\n                }\n            },\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\n        );\n    }\n\n    /**\n     * Load an array buffer using ajax and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.ajax} Ajax call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        const ajax = util.ajax({\n            url: url,\n            responseType: 'arraybuffer',\n            xhr: this.params.xhr\n        });\n\n        this.currentAjax = ajax;\n\n        this.tmpEvents.push(\n            ajax.on('progress', e => {\n                this.onProgress(e);\n            }),\n            ajax.on('success', (data, e) => {\n                callback(data);\n                this.currentAjax = null;\n            }),\n            ajax.on('error', e => {\n                this.fireEvent('error', 'XHR error: ' + e.target.statusText);\n                this.currentAjax = null;\n            })\n        );\n\n        return ajax;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and opens in a new window.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks. (Integer)\n     * @param {number} accuracy=10000 (Integer)\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @todo Update exportPCM to work with new getPeaks signature\n     * @return {string} JSON of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n        const json = JSON.stringify(arr);\n        if (!noWindow) {\n            window.open(\n                'data:application/json;charset=utf-8,' +\n                    encodeURIComponent(json)\n            );\n        }\n        return json;\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `'image/png'`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `'image/jpeg'`` and `'image/webp'`.\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\n     * or 'blob'.\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any ajax request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentAjax) {\n            this.currentAjax.xhr.abort();\n            this.currentAjax = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        this.backend.destroy();\n        this.drawer.destroy();\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** @private */\n    static scriptBufferSize = 256;\n    /** @private */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private  */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** @private */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n\n    /** @private */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {};\n    }\n\n    /** @private */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     * @private\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            let audio = new window.Audio();\n            if (!audio.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            audio.autoplay = true;\n            var dest = this.ac.createMediaStreamDestination();\n            this.gainNode.disconnect();\n            this.gainNode.connect(dest);\n            audio.srcObject = dest.stream;\n\n            return audio.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        this.offlineAc.decodeAudioData(\n            arraybuffer,\n            data => callback(data),\n            errback\n        );\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                let min = 0;\n                let max = 0;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start, end - start);\n\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    }\n}\n"],"sourceRoot":""}