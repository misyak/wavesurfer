{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/regions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Region","params","ws","_this","this","_classCallCheck","wavesurfer","wrapper","drawer","util","style","id","getId","start","Number","end","scrollWidth","getDuration","resize","undefined","Boolean","drag","loop","color","data","attributes","active","maxLength","minLength","_onRedraw","updateRender","scroll","scrollParent","scrollSpeed","scrollThreshold","bindInOut","render","on","fireEvent","element","removeChild","un","play","_this2","once","playLoop","regionEl","document","createElement","attrname","className","title","formatTime","setAttribute","position","zIndex","height","top","handleLeft","appendChild","handleRight","css","cursor","left","width","maxWidth","bindEvents","map","time","Math","floor","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","max","min","round","regionWidth","backgroundColor","border","_this3","firedIn","firedOut","onProcess","backend","startTime","touchId","maxScroll","scrollDirection","wrapperRect","container","duration","updated","onDown","onUp","onMove","_this4","addEventListener","e","preventDefault","update","stopPropagation","touches","length","targetTouches","identifier","regions","getRegionSnapToGridValue","handleEvent","clientWidth","getBoundingClientRect","target","tagName","toLowerCase","classList","contains","preventClick","oldTime","delta","onDrag","onResize","regionRect","x","right","clientX","edgeScroll","scrollLeft","requestAnimationFrame","body","removeEventListener","maxEnd","direction","RegionsPlugin","_this5","getOwnPropertyNames","Observer","forEach","_onBackendCreated","region","add","list","_onReady","dragSelection","enableDragSelection","keys","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","toggleActive","regionID","toogleActive","clearRegions","clear","disableDragSelection","instance","isReady","_this6","_this7","remove","_this8","slop","pxMove","eventDown","eventUp","eventMove","startUpdate","endUpdate","_this9","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset"],"mappings":"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","file":"wavesurfer.regions.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"regions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"regions\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nclass Region {\n    constructor(params, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                  this.start +\n                  (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.3)';\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n        this.active = params.active === undefined ? true : params.resize;\n\n        this.maxLength = params.maxLength;\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params) {\n        if (null != params.start) {\n            this.start = Number(params.start);\n        }\n        if (null != params.end) {\n            this.end = Number(params.end);\n        }\n        if (null != params.loop) {\n            this.loop = Boolean(params.loop);\n        }\n        if (null != params.color) {\n            this.color = params.color;\n        }\n        if (null != params.data) {\n            this.data = params.data;\n        }\n        if (null != params.resize) {\n            this.resize = Boolean(params.resize);\n        }\n        if (null != params.drag) {\n            this.drag = Boolean(params.drag);\n        }\n        if (null != params.maxLength) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (null != params.minLength) {\n            this.minLength = Number(params.minLength);\n        }\n        if (null != params.attributes) {\n            this.attributes = params.attributes;\n        }\n        if (null != params.active) {\n            this.active = params.active;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /* Play the audio region. */\n    play() {\n        this.wavesurfer.play(this.start, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /* Play the region in loop. */\n    playLoop() {\n        this.play();\n        this.once('out', () => this.playLoop());\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        const regionEl = document.createElement('region');\n        regionEl.className = 'wavesurfer-region';\n        regionEl.title = this.formatTime(this.start, this.end);\n        regionEl.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            regionEl.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        const width = this.wrapper.scrollWidth;\n        this.style(regionEl, {\n            position: 'absolute',\n            zIndex: 2,\n            height: '100%',\n            top: '0px'\n        });\n\n        /* Resize handles */\n        if (this.resize) {\n            const handleLeft = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            const handleRight = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            handleLeft.className = 'wavesurfer-handle wavesurfer-handle-start';\n            handleRight.className = 'wavesurfer-handle wavesurfer-handle-end';\n            const css = {\n                cursor: 'col-resize',\n                position: 'absolute',\n                left: '0px',\n                top: '0px',\n                width: '1%',\n                maxWidth: '4px',\n                height: '100%'\n            };\n            this.style(handleLeft, css);\n            this.style(handleRight, css);\n            this.style(handleRight, {\n                left: '100%'\n            });\n        }\n\n        this.element = this.wrapper.appendChild(regionEl);\n        this.updateRender();\n        this.bindEvents(regionEl);\n    }\n\n    formatTime(start, end) {\n        return (start == end ? [start] : [start, end])\n            .map(time =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        var startLimited = this.start;\n        var endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                border: this.active ? '1px dashed white' : 'none',\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = time => {\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (this.start >= Math.round(time * 100) / 100 ||\n                    this.end <= Math.round(time * 100) / 100)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && this.start <= time && this.end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                this.wavesurfer.play(this.start);\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        this.element.addEventListener('mouseenter', e => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', e => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', e => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n            this.update({\n                active: !this.active\n            });\n        });\n\n        this.element.addEventListener('dblclick', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        (this.drag || this.resize) &&\n            (() => {\n                const container = this.wavesurfer.drawer.container;\n                const duration = this.wavesurfer.getDuration();\n                const scrollSpeed = this.scrollSpeed;\n                const scrollThreshold = this.scrollThreshold;\n                let startTime;\n                let touchId;\n                let drag;\n                let maxScroll;\n                let resize;\n                let updated = false;\n                let scrollDirection;\n                let wrapperRect;\n\n                // Scroll when the user is dragging within the threshold\n                const edgeScroll = e => {\n                    if (!scrollDirection || (!drag && !resize)) {\n                        return;\n                    }\n\n                    // Update scroll position\n                    let scrollLeft =\n                        this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n                    this.wrapper.scrollLeft = scrollLeft = Math.min(\n                        maxScroll,\n                        Math.max(0, scrollLeft)\n                    );\n\n                    // Get the currently selected time according to the mouse position\n                    const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                        this.wavesurfer.drawer.handleEvent(e) * duration\n                    );\n                    const delta = time - startTime;\n                    startTime = time;\n\n                    // Continue dragging or resizing\n                    drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n                    // Repeat\n                    window.requestAnimationFrame(() => {\n                        edgeScroll(e);\n                    });\n                };\n\n                const onDown = e => {\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n                    touchId = e.targetTouches\n                        ? e.targetTouches[0].identifier\n                        : null;\n\n                    // stop the event propagation, if this region is resizable or draggable\n                    // and the event is therefore handled here.\n                    if (this.drag || this.resize) {\n                        e.stopPropagation();\n                    }\n\n                    // Store the selected startTime we begun dragging or resizing\n                    startTime = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                        this.wavesurfer.drawer.handleEvent(e, true) * duration\n                    );\n\n                    // Store for scroll calculations\n                    maxScroll =\n                        this.wrapper.scrollWidth - this.wrapper.clientWidth;\n                    wrapperRect = this.wrapper.getBoundingClientRect();\n\n                    if (e.target.tagName.toLowerCase() == 'handle') {\n                        if (\n                            e.target.classList.contains(\n                                'wavesurfer-handle-start'\n                            )\n                        ) {\n                            resize = 'start';\n                        } else {\n                            resize = 'end';\n                        }\n                    } else {\n                        drag = true;\n                        resize = false;\n                    }\n                };\n                const onUp = e => {\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n\n                    if (drag || resize) {\n                        drag = false;\n                        scrollDirection = null;\n                        resize = false;\n                    }\n\n                    if (updated) {\n                        updated = false;\n                        this.util.preventClick();\n                        this.fireEvent('update-end', e);\n                        this.wavesurfer.fireEvent('region-update-end', this, e);\n                        this.update({\n                            active: true\n                        });\n                    }\n                };\n                const onMove = e => {\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n                    if (\n                        e.targetTouches &&\n                        e.targetTouches[0].identifier != touchId\n                    ) {\n                        return;\n                    }\n\n                    if (drag || resize) {\n                        const oldTime = startTime;\n                        const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                            this.wavesurfer.drawer.handleEvent(e) * duration\n                        );\n\n                        const delta = time - startTime;\n                        startTime = time;\n\n                        // Drag\n                        if (this.drag && drag) {\n                            updated = updated || !!delta;\n                            this.onDrag(delta);\n                        }\n\n                        // Resize\n                        if (this.resize && resize) {\n                            updated = updated || !!delta;\n                            this.onResize(delta, resize);\n                        }\n\n                        if (\n                            this.scroll &&\n                            container.clientWidth < this.wrapper.scrollWidth\n                        ) {\n                            if (drag) {\n                                // The threshold is not between the mouse and the container edge\n                                // but is between the region and the container edge\n                                const regionRect = this.element.getBoundingClientRect();\n                                let x = regionRect.left - wrapperRect.left;\n\n                                // Check direction\n                                if (time < oldTime && x >= 0) {\n                                    scrollDirection = -1;\n                                } else if (\n                                    time > oldTime &&\n                                    x + regionRect.width <= wrapperRect.right\n                                ) {\n                                    scrollDirection = 1;\n                                }\n\n                                // Check that we are still beyond the threshold\n                                if (\n                                    (scrollDirection === -1 &&\n                                        x > scrollThreshold) ||\n                                    (scrollDirection === 1 &&\n                                        x + regionRect.width <\n                                            wrapperRect.right - scrollThreshold)\n                                ) {\n                                    scrollDirection = null;\n                                }\n                            } else {\n                                // Mouse based threshold\n                                let x = e.clientX - wrapperRect.left;\n\n                                // Check direction\n                                if (x <= scrollThreshold) {\n                                    scrollDirection = -1;\n                                } else if (\n                                    x >=\n                                    wrapperRect.right - scrollThreshold\n                                ) {\n                                    scrollDirection = 1;\n                                } else {\n                                    scrollDirection = null;\n                                }\n                            }\n\n                            scrollDirection && edgeScroll(e);\n                        }\n                    }\n                };\n\n                this.element.addEventListener('mousedown', onDown);\n                this.element.addEventListener('touchstart', onDown);\n\n                this.wrapper.addEventListener('mousemove', onMove);\n                this.wrapper.addEventListener('touchmove', onMove);\n\n                document.body.addEventListener('mouseup', onUp);\n                document.body.addEventListener('touchend', onUp);\n\n                this.on('remove', () => {\n                    document.body.removeEventListener('mouseup', onUp);\n                    document.body.removeEventListener('touchend', onUp);\n                    this.wrapper.removeEventListener('mousemove', onMove);\n                    this.wrapper.removeEventListener('touchmove', onMove);\n                });\n\n                this.wavesurfer.on('destroy', () => {\n                    document.body.removeEventListener('mouseup', onUp);\n                    document.body.removeEventListener('touchend', onUp);\n                });\n            })();\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd || this.start + delta < 0) {\n            return;\n        }\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        });\n    }\n\n    onResize(delta, direction) {\n        if (direction == 'start') {\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            });\n        } else {\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            });\n        }\n    }\n}\n\n/**\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('regions')`\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n */\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                toggleActive(regionID) {\n                    this.regions.toogleActive(regionID);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n        this.util.getRegionSnapToGridValue = value => {\n            return this.getRegionSnapToGridValue(value, params);\n        };\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        const region = new this.wavesurfer.Region(params, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * toggle active flag of region\n     * @param {string} regionID id of region\n     */\n    toogleActive(regionID) {\n        this.list[regionID].update({\n            active: false\n        });\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n        });\n\n        const eventMove = e => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            if (!region) {\n                region = this.add(params || {});\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = e.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(e);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n"],"sourceRoot":""}